{"version":3,"file":"/Users/rg/dev/opensea-js/test/sdk/orders.spec.ts","sources":["/Users/rg/dev/opensea-js/test/sdk/orders.spec.ts"],"names":[],"mappings":";;AAAA,+BAA8B;AAC9B,iCAAoC;AACpC,2CAA6C;AAC7C,2CAAwC;AACxC,kDAA2E;AAE3E,MAAM,MAAM,GAAG,IAAI,kBAAU,CAC3B,gCAAoB,EACpB;IACE,KAAK,EAAE,aAAK,CAAC,OAAO;IACpB,MAAM,EAAE,2BAAe;CACxB,EACD,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAC3C,CAAC;AAEF,IAAA,aAAK,EAAC,aAAa,EAAE,GAAG,EAAE;IACxB,IAAA,YAAI,EAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACxC,MAAM,WAAW,GAAG,4CAA4C,CAAC;QACjE,MAAM,gBAAgB,GAAG,MAAM,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QACvE,aAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACnC,aAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QACpD,aAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QACpD,aAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAE5C,MAAM,UAAU,GAAG,4CAA4C,CAAC;QAChE,MAAM,eAAe,GAAG,MAAM,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACrE,aAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAClC,aAAM,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC1C,aAAM,CAAC,KAAK,CAAC,eAAe,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport { OpenSeaSDK } from \"../../src/index\";\nimport { Chain } from \"../../src/types\";\nimport { OPENSEA_API_KEY, RPC_PROVIDER_MAINNET } from \"../utils/constants\";\n\nconst client = new OpenSeaSDK(\n  RPC_PROVIDER_MAINNET,\n  {\n    chain: Chain.Mainnet,\n    apiKey: OPENSEA_API_KEY,\n  },\n  (line) => console.info(`MAINNET: ${line}`),\n);\n\nsuite(\"SDK: orders\", () => {\n  test(\"Fungible tokens filter\", async () => {\n    const manaAddress = \"0x0f5d2fb29fb7d3cfee444a200298f468908cc942\";\n    const manaPaymentToken = await client.api.getPaymentToken(manaAddress);\n    assert.isNotNull(manaPaymentToken);\n    assert.equal(manaPaymentToken.name, \"Decentraland\");\n    assert.equal(manaPaymentToken.address, manaAddress);\n    assert.equal(manaPaymentToken.decimals, 18);\n\n    const daiAddress = \"0x6b175474e89094c44da98b954eedeac495271d0f\";\n    const daiPaymentToken = await client.api.getPaymentToken(daiAddress);\n    assert.isNotNull(daiPaymentToken);\n    assert.equal(daiPaymentToken.name, \"Dai\");\n    assert.equal(daiPaymentToken.decimals, 18);\n  });\n});\n"]}