"use strict";function cov_22vxz2khl2(){var path="/Users/rg/dev/opensea-js/test/api/api.spec.ts";var hash="21b061338a0a487b1e2b9d5353aeac6c19c0aeb9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/rg/dev/opensea-js/test/api/api.spec.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:15},end:{line:3,column:30}},"2":{start:{line:4,column:16},end:{line:4,column:32}},"3":{start:{line:5,column:14},end:{line:5,column:34}},"4":{start:{line:6,column:16},end:{line:6,column:42}},"5":{start:{line:7,column:20},end:{line:7,column:49}},"6":{start:{line:8,column:0},end:{line:42,column:3}},"7":{start:{line:9,column:4},end:{line:12,column:7}},"8":{start:{line:10,column:8},end:{line:10,column:86}},"9":{start:{line:11,column:8},end:{line:11,column:98}},"10":{start:{line:13,column:4},end:{line:32,column:7}},"11":{start:{line:14,column:26},end:{line:14,column:52}},"12":{start:{line:15,column:27},end:{line:30,column:10}},"13":{start:{line:16,column:12},end:{line:27,column:14}},"14":{start:{line:17,column:16},end:{line:26,column:17}},"15":{start:{line:18,column:20},end:{line:18,column:95}},"16":{start:{line:19,column:20},end:{line:19,column:30}},"17":{start:{line:22,column:20},end:{line:22,column:30}},"18":{start:{line:25,column:20},end:{line:25,column:59}},"19":{start:{line:28,column:32},end:{line:28,column:80}},"20":{start:{line:29,column:12},end:{line:29,column:61}},"21":{start:{line:31,column:8},end:{line:31,column:25}},"22":{start:{line:33,column:4},end:{line:41,column:7}},"23":{start:{line:35,column:8},end:{line:40,column:9}},"24":{start:{line:36,column:12},end:{line:36,column:90}},"25":{start:{line:39,column:12},end:{line:39,column:62}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:26},end:{line:8,column:27}},loc:{start:{line:8,column:32},end:{line:42,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:50},end:{line:9,column:51}},loc:{start:{line:9,column:56},end:{line:12,column:5}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:13,column:53},end:{line:13,column:54}},loc:{start:{line:13,column:65},end:{line:32,column:5}},line:13},"3":{name:"(anonymous_3)",decl:{start:{line:15,column:39},end:{line:15,column:40}},loc:{start:{line:15,column:60},end:{line:30,column:9}},line:15},"4":{name:"(anonymous_4)",decl:{start:{line:16,column:41},end:{line:16,column:42}},loc:{start:{line:16,column:50},end:{line:27,column:13}},line:16},"5":{name:"(anonymous_5)",decl:{start:{line:33,column:44},end:{line:33,column:45}},loc:{start:{line:33,column:56},end:{line:41,column:5}},line:33}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{},inputSourceMap:{version:3,file:"/Users/rg/dev/opensea-js/test/api/api.spec.ts",sources:["/Users/rg/dev/opensea-js/test/api/api.spec.ts"],names:[],mappings:";;AAAA,+BAA8B;AAC9B,iCAAoC;AACpC,mCAAkC;AAClC,2CAAiD;AACjD,kDAK4B;AAE5B,IAAA,aAAK,EAAC,KAAK,EAAE,GAAG,EAAE;IAChB,IAAA,YAAI,EAAC,0BAA0B,EAAE,GAAG,EAAE;QACpC,aAAM,CAAC,KAAK,CAAC,mBAAO,CAAC,UAAU,EAAE,wBAAwB,CAAC,CAAC;QAC3D,aAAM,CAAC,KAAK,CAAC,sBAAU,CAAC,UAAU,EAAE,iCAAiC,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,SAAS,GAAG,mBAAO,CAAC,MAAM,CAAC;QAEjC,MAAM,UAAU,GAAG,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACvD,mBAAO,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,EAAE;gBACvB,IAAI,CAAC;oBACH,aAAM,CAAC,OAAO,CAAC,GAAG,EAAE,gBAAgB,2BAAe,GAAG,CAAC,CAAC;oBACxD,OAAO,EAAE,CAAC;gBACZ,CAAC;gBAAC,OAAO,CAAC,EAAE,CAAC;oBACX,MAAM,CAAC,CAAC,CAAC,CAAC;gBACZ,CAAC;wBAAS,CAAC;oBACT,mBAAO,CAAC,MAAM,GAAG,SAAS,CAAC;gBAC7B,CAAC;YACH,CAAC,CAAC;YACF,MAAM,WAAW,GAAG,IAAA,sBAAc,EAAC,WAAK,CAAC,OAAO,CAAC,CAAC;YAClD,mBAAO,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,MAAM,UAAU,CAAC;IACnB,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QACpC,oCAAoC;QACpC,IAAI,CAAC;YACH,MAAM,mBAAO,CAAC,MAAM,CAAC,iCAAqB,EAAE,QAAQ,CAAC,CAAC;QACxD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,aAAM,CAAC,OAAO,CAAE,KAAe,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QACxD,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC",sourcesContent:["import { assert } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport { Chain } from \"../../src\";\nimport { getWETHAddress } from \"../../src/utils\";\nimport {\n  BAYC_CONTRACT_ADDRESS,\n  mainAPI,\n  MAINNET_API_KEY,\n  testnetAPI,\n} from \"../utils/constants\";\n\nsuite(\"API\", () => {\n  test(\"API has correct base url\", () => {\n    assert.equal(mainAPI.apiBaseUrl, \"https://api.opensea.io\");\n    assert.equal(testnetAPI.apiBaseUrl, \"https://testnets-api.opensea.io\");\n  });\n\n  test(\"Includes API key in request\", async () => {\n    const oldLogger = mainAPI.logger;\n\n    const logPromise = new Promise<void>((resolve, reject) => {\n      mainAPI.logger = (log) => {\n        try {\n          assert.include(log, `\"x-api-key\":\"${MAINNET_API_KEY}\"`);\n          resolve();\n        } catch (e) {\n          reject(e);\n        } finally {\n          mainAPI.logger = oldLogger;\n        }\n      };\n      const wethAddress = getWETHAddress(Chain.Mainnet);\n      mainAPI.getPaymentToken(wethAddress);\n    });\n\n    await logPromise;\n  });\n\n  test(\"API handles errors\", async () => {\n    // 404 Not found for random token id\n    try {\n      await mainAPI.getNFT(BAYC_CONTRACT_ADDRESS, \"404040\");\n    } catch (error) {\n      assert.include((error as Error).message, \"not found\");\n    }\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"21b061338a0a487b1e2b9d5353aeac6c19c0aeb9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_22vxz2khl2=function(){return actualCoverage;};}return actualCoverage;}cov_22vxz2khl2();cov_22vxz2khl2().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const chai_1=(cov_22vxz2khl2().s[1]++,require("chai"));const mocha_1=(cov_22vxz2khl2().s[2]++,require("mocha"));const src_1=(cov_22vxz2khl2().s[3]++,require("../../src"));const utils_1=(cov_22vxz2khl2().s[4]++,require("../../src/utils"));const constants_1=(cov_22vxz2khl2().s[5]++,require("../utils/constants"));cov_22vxz2khl2().s[6]++;(0,mocha_1.suite)("API",()=>{cov_22vxz2khl2().f[0]++;cov_22vxz2khl2().s[7]++;(0,mocha_1.test)("API has correct base url",()=>{cov_22vxz2khl2().f[1]++;cov_22vxz2khl2().s[8]++;chai_1.assert.equal(constants_1.mainAPI.apiBaseUrl,"https://api.opensea.io");cov_22vxz2khl2().s[9]++;chai_1.assert.equal(constants_1.testnetAPI.apiBaseUrl,"https://testnets-api.opensea.io");});cov_22vxz2khl2().s[10]++;(0,mocha_1.test)("Includes API key in request",async()=>{cov_22vxz2khl2().f[2]++;const oldLogger=(cov_22vxz2khl2().s[11]++,constants_1.mainAPI.logger);const logPromise=(cov_22vxz2khl2().s[12]++,new Promise((resolve,reject)=>{cov_22vxz2khl2().f[3]++;cov_22vxz2khl2().s[13]++;constants_1.mainAPI.logger=log=>{cov_22vxz2khl2().f[4]++;cov_22vxz2khl2().s[14]++;try{cov_22vxz2khl2().s[15]++;chai_1.assert.include(log,`"x-api-key":"${constants_1.MAINNET_API_KEY}"`);cov_22vxz2khl2().s[16]++;resolve();}catch(e){cov_22vxz2khl2().s[17]++;reject(e);}finally{cov_22vxz2khl2().s[18]++;constants_1.mainAPI.logger=oldLogger;}};const wethAddress=(cov_22vxz2khl2().s[19]++,(0,utils_1.getWETHAddress)(src_1.Chain.Mainnet));cov_22vxz2khl2().s[20]++;constants_1.mainAPI.getPaymentToken(wethAddress);}));cov_22vxz2khl2().s[21]++;await logPromise;});cov_22vxz2khl2().s[22]++;(0,mocha_1.test)("API handles errors",async()=>{cov_22vxz2khl2().f[5]++;cov_22vxz2khl2().s[23]++;// 404 Not found for random token id
try{cov_22vxz2khl2().s[24]++;await constants_1.mainAPI.getNFT(constants_1.BAYC_CONTRACT_ADDRESS,"404040");}catch(error){cov_22vxz2khl2().s[25]++;chai_1.assert.include(error.message,"not found");}});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JnL2Rldi9vcGVuc2VhLWpzL3Rlc3QvYXBpL2FwaS5zcGVjLnRzIiwic291cmNlcyI6WyIvVXNlcnMvcmcvZGV2L29wZW5zZWEtanMvdGVzdC9hcGkvYXBpLnNwZWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBOEI7QUFDOUIsaUNBQW9DO0FBQ3BDLG1DQUFrQztBQUNsQywyQ0FBaUQ7QUFDakQsa0RBSzRCO0FBRTVCLElBQUEsYUFBSyxFQUFDLEtBQUssRUFBRSxHQUFHLEVBQUU7SUFDaEIsSUFBQSxZQUFJLEVBQUMsMEJBQTBCLEVBQUUsR0FBRyxFQUFFO1FBQ3BDLGFBQU0sQ0FBQyxLQUFLLENBQUMsbUJBQU8sQ0FBQyxVQUFVLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztRQUMzRCxhQUFNLENBQUMsS0FBSyxDQUFDLHNCQUFVLENBQUMsVUFBVSxFQUFFLGlDQUFpQyxDQUFDLENBQUM7SUFDekUsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFBLFlBQUksRUFBQyw2QkFBNkIsRUFBRSxLQUFLLElBQUksRUFBRTtRQUM3QyxNQUFNLFNBQVMsR0FBRyxtQkFBTyxDQUFDLE1BQU0sQ0FBQztRQUVqQyxNQUFNLFVBQVUsR0FBRyxJQUFJLE9BQU8sQ0FBTyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtZQUN2RCxtQkFBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFFO2dCQUN2QixJQUFJLENBQUM7b0JBQ0gsYUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLDJCQUFlLEdBQUcsQ0FBQyxDQUFDO29CQUN4RCxPQUFPLEVBQUUsQ0FBQztnQkFDWixDQUFDO2dCQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7b0JBQ1gsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNaLENBQUM7d0JBQVMsQ0FBQztvQkFDVCxtQkFBTyxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUM7Z0JBQzdCLENBQUM7WUFDSCxDQUFDLENBQUM7WUFDRixNQUFNLFdBQVcsR0FBRyxJQUFBLHNCQUFjLEVBQUMsV0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ2xELG1CQUFPLENBQUMsZUFBZSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsQ0FBQyxDQUFDO1FBRUgsTUFBTSxVQUFVLENBQUM7SUFDbkIsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFBLFlBQUksRUFBQyxvQkFBb0IsRUFBRSxLQUFLLElBQUksRUFBRTtRQUNwQyxvQ0FBb0M7UUFDcEMsSUFBSSxDQUFDO1lBQ0gsTUFBTSxtQkFBTyxDQUFDLE1BQU0sQ0FBQyxpQ0FBcUIsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUN4RCxDQUFDO1FBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztZQUNmLGFBQU0sQ0FBQyxPQUFPLENBQUUsS0FBZSxDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQztRQUN4RCxDQUFDO0lBQ0gsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydCB9IGZyb20gXCJjaGFpXCI7XG5pbXBvcnQgeyBzdWl0ZSwgdGVzdCB9IGZyb20gXCJtb2NoYVwiO1xuaW1wb3J0IHsgQ2hhaW4gfSBmcm9tIFwiLi4vLi4vc3JjXCI7XG5pbXBvcnQgeyBnZXRXRVRIQWRkcmVzcyB9IGZyb20gXCIuLi8uLi9zcmMvdXRpbHNcIjtcbmltcG9ydCB7XG4gIEJBWUNfQ09OVFJBQ1RfQUREUkVTUyxcbiAgbWFpbkFQSSxcbiAgTUFJTk5FVF9BUElfS0VZLFxuICB0ZXN0bmV0QVBJLFxufSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzXCI7XG5cbnN1aXRlKFwiQVBJXCIsICgpID0+IHtcbiAgdGVzdChcIkFQSSBoYXMgY29ycmVjdCBiYXNlIHVybFwiLCAoKSA9PiB7XG4gICAgYXNzZXJ0LmVxdWFsKG1haW5BUEkuYXBpQmFzZVVybCwgXCJodHRwczovL2FwaS5vcGVuc2VhLmlvXCIpO1xuICAgIGFzc2VydC5lcXVhbCh0ZXN0bmV0QVBJLmFwaUJhc2VVcmwsIFwiaHR0cHM6Ly90ZXN0bmV0cy1hcGkub3BlbnNlYS5pb1wiKTtcbiAgfSk7XG5cbiAgdGVzdChcIkluY2x1ZGVzIEFQSSBrZXkgaW4gcmVxdWVzdFwiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3Qgb2xkTG9nZ2VyID0gbWFpbkFQSS5sb2dnZXI7XG5cbiAgICBjb25zdCBsb2dQcm9taXNlID0gbmV3IFByb21pc2U8dm9pZD4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgbWFpbkFQSS5sb2dnZXIgPSAobG9nKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgYXNzZXJ0LmluY2x1ZGUobG9nLCBgXCJ4LWFwaS1rZXlcIjpcIiR7TUFJTk5FVF9BUElfS0VZfVwiYCk7XG4gICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIG1haW5BUEkubG9nZ2VyID0gb2xkTG9nZ2VyO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgY29uc3Qgd2V0aEFkZHJlc3MgPSBnZXRXRVRIQWRkcmVzcyhDaGFpbi5NYWlubmV0KTtcbiAgICAgIG1haW5BUEkuZ2V0UGF5bWVudFRva2VuKHdldGhBZGRyZXNzKTtcbiAgICB9KTtcblxuICAgIGF3YWl0IGxvZ1Byb21pc2U7XG4gIH0pO1xuXG4gIHRlc3QoXCJBUEkgaGFuZGxlcyBlcnJvcnNcIiwgYXN5bmMgKCkgPT4ge1xuICAgIC8vIDQwNCBOb3QgZm91bmQgZm9yIHJhbmRvbSB0b2tlbiBpZFxuICAgIHRyeSB7XG4gICAgICBhd2FpdCBtYWluQVBJLmdldE5GVChCQVlDX0NPTlRSQUNUX0FERFJFU1MsIFwiNDA0MDQwXCIpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBhc3NlcnQuaW5jbHVkZSgoZXJyb3IgYXMgRXJyb3IpLm1lc3NhZ2UsIFwibm90IGZvdW5kXCIpO1xuICAgIH1cbiAgfSk7XG59KTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjJ2eHoya2hsMiIsImFjdHVhbENvdmVyYWdlIiwicyIsImNoYWlfMSIsInJlcXVpcmUiLCJtb2NoYV8xIiwic3JjXzEiLCJ1dGlsc18xIiwiY29uc3RhbnRzXzEiLCJzdWl0ZSIsImYiLCJ0ZXN0IiwiYXNzZXJ0IiwiZXF1YWwiLCJtYWluQVBJIiwiYXBpQmFzZVVybCIsInRlc3RuZXRBUEkiLCJvbGRMb2dnZXIiLCJsb2dnZXIiLCJsb2dQcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJsb2ciLCJpbmNsdWRlIiwiTUFJTk5FVF9BUElfS0VZIiwiZSIsIndldGhBZGRyZXNzIiwiZ2V0V0VUSEFkZHJlc3MiLCJDaGFpbiIsIk1haW5uZXQiLCJnZXRQYXltZW50VG9rZW4iLCJnZXRORlQiLCJCQVlDX0NPTlRSQUNUX0FERFJFU1MiLCJlcnJvciIsIm1lc3NhZ2UiXSwic291cmNlcyI6WyIvVXNlcnMvcmcvZGV2L29wZW5zZWEtanMvdGVzdC9hcGkvYXBpLnNwZWMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSBcImNoYWlcIjtcbmltcG9ydCB7IHN1aXRlLCB0ZXN0IH0gZnJvbSBcIm1vY2hhXCI7XG5pbXBvcnQgeyBDaGFpbiB9IGZyb20gXCIuLi8uLi9zcmNcIjtcbmltcG9ydCB7IGdldFdFVEhBZGRyZXNzIH0gZnJvbSBcIi4uLy4uL3NyYy91dGlsc1wiO1xuaW1wb3J0IHtcbiAgQkFZQ19DT05UUkFDVF9BRERSRVNTLFxuICBtYWluQVBJLFxuICBNQUlOTkVUX0FQSV9LRVksXG4gIHRlc3RuZXRBUEksXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHNcIjtcblxuc3VpdGUoXCJBUElcIiwgKCkgPT4ge1xuICB0ZXN0KFwiQVBJIGhhcyBjb3JyZWN0IGJhc2UgdXJsXCIsICgpID0+IHtcbiAgICBhc3NlcnQuZXF1YWwobWFpbkFQSS5hcGlCYXNlVXJsLCBcImh0dHBzOi8vYXBpLm9wZW5zZWEuaW9cIik7XG4gICAgYXNzZXJ0LmVxdWFsKHRlc3RuZXRBUEkuYXBpQmFzZVVybCwgXCJodHRwczovL3Rlc3RuZXRzLWFwaS5vcGVuc2VhLmlvXCIpO1xuICB9KTtcblxuICB0ZXN0KFwiSW5jbHVkZXMgQVBJIGtleSBpbiByZXF1ZXN0XCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBvbGRMb2dnZXIgPSBtYWluQVBJLmxvZ2dlcjtcblxuICAgIGNvbnN0IGxvZ1Byb21pc2UgPSBuZXcgUHJvbWlzZTx2b2lkPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBtYWluQVBJLmxvZ2dlciA9IChsb2cpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBhc3NlcnQuaW5jbHVkZShsb2csIGBcIngtYXBpLWtleVwiOlwiJHtNQUlOTkVUX0FQSV9LRVl9XCJgKTtcbiAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgbWFpbkFQSS5sb2dnZXIgPSBvbGRMb2dnZXI7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBjb25zdCB3ZXRoQWRkcmVzcyA9IGdldFdFVEhBZGRyZXNzKENoYWluLk1haW5uZXQpO1xuICAgICAgbWFpbkFQSS5nZXRQYXltZW50VG9rZW4od2V0aEFkZHJlc3MpO1xuICAgIH0pO1xuXG4gICAgYXdhaXQgbG9nUHJvbWlzZTtcbiAgfSk7XG5cbiAgdGVzdChcIkFQSSBoYW5kbGVzIGVycm9yc1wiLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gNDA0IE5vdCBmb3VuZCBmb3IgcmFuZG9tIHRva2VuIGlkXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IG1haW5BUEkuZ2V0TkZUKEJBWUNfQ09OVFJBQ1RfQUREUkVTUywgXCI0MDQwNDBcIik7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGFzc2VydC5pbmNsdWRlKChlcnJvciBhcyBFcnJvciku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