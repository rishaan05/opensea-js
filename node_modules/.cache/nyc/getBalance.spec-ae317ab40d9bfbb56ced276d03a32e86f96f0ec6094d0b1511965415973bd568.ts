"use strict";function cov_i6295rxig(){var path="/Users/rg/dev/opensea-js/test/sdk/getBalance.spec.ts";var hash="7aa33bc24f7fd606408b57f4173ffde8876942ca";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/rg/dev/opensea-js/test/sdk/getBalance.spec.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:15},end:{line:3,column:30}},"2":{start:{line:4,column:17},end:{line:4,column:34}},"3":{start:{line:5,column:16},end:{line:5,column:32}},"4":{start:{line:6,column:16},end:{line:6,column:42}},"5":{start:{line:7,column:20},end:{line:7,column:49}},"6":{start:{line:8,column:0},end:{line:38,column:3}},"7":{start:{line:9,column:27},end:{line:9,column:71}},"8":{start:{line:10,column:4},end:{line:19,column:7}},"9":{start:{line:11,column:22},end:{line:16,column:9}},"10":{start:{line:17,column:24},end:{line:17,column:86}},"11":{start:{line:18,column:8},end:{line:18,column:73}},"12":{start:{line:20,column:4},end:{line:28,column:7}},"13":{start:{line:21,column:22},end:{line:25,column:9}},"14":{start:{line:26,column:24},end:{line:26,column:86}},"15":{start:{line:27,column:8},end:{line:27,column:43}},"16":{start:{line:29,column:4},end:{line:37,column:7}},"17":{start:{line:30,column:22},end:{line:34,column:9}},"18":{start:{line:35,column:24},end:{line:35,column:86}},"19":{start:{line:36,column:8},end:{line:36,column:42}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:38},end:{line:8,column:39}},loc:{start:{line:8,column:44},end:{line:38,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:51},end:{line:10,column:52}},loc:{start:{line:10,column:63},end:{line:19,column:5}},line:10},"2":{name:"(anonymous_2)",decl:{start:{line:20,column:52},end:{line:20,column:53}},loc:{start:{line:20,column:64},end:{line:28,column:5}},line:20},"3":{name:"(anonymous_3)",decl:{start:{line:29,column:53},end:{line:29,column:54}},loc:{start:{line:29,column:65},end:{line:37,column:5}},line:29}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},f:{"0":0,"1":0,"2":0,"3":0},b:{},inputSourceMap:{version:3,file:"/Users/rg/dev/opensea-js/test/sdk/getBalance.spec.ts",sources:["/Users/rg/dev/opensea-js/test/sdk/getBalance.spec.ts"],names:[],mappings:";;AAAA,+BAA8B;AAC9B,mCAAgC;AAChC,iCAAoC;AACpC,2CAAgD;AAChD,kDAA2C;AAE3C,IAAA,aAAK,EAAC,iBAAiB,EAAE,GAAG,EAAE;IAC5B,MAAM,cAAc,GAAG,4CAA4C,CAAC;IAEpE,IAAA,YAAI,EAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,KAAK,GAAG;YACZ,aAAa,EAAE,qBAAa,CAAC,KAAK;YAClC,OAAO;YACP,YAAY,EAAE,4CAA4C;YAC1D,OAAO,EAAE,IAAI;SACd,CAAC;QACF,MAAM,OAAO,GAAG,MAAM,kBAAM,CAAC,UAAU,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;QACnE,IAAA,aAAM,EAAC,OAAO,GAAG,eAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,KAAK,GAAG;YACZ,aAAa,EAAE,qBAAa,CAAC,MAAM;YACnC,YAAY,EAAE,4CAA4C;YAC1D,OAAO,EAAE,KAAK;SACf,CAAC;QACF,MAAM,OAAO,GAAG,MAAM,kBAAM,CAAC,UAAU,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;QACnE,IAAA,aAAM,EAAC,OAAO,KAAK,EAAE,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,KAAK,GAAG;YACZ,aAAa,EAAE,qBAAa,CAAC,OAAO;YACpC,YAAY,EAAE,4CAA4C;YAC1D,OAAO,EAAE,IAAI;SACd,CAAC;QACF,MAAM,OAAO,GAAG,MAAM,kBAAM,CAAC,UAAU,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;QACnE,IAAA,aAAM,EAAC,OAAO,IAAI,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC",sourcesContent:["import { assert } from \"chai\";\nimport { ethers } from \"ethers\";\nimport { suite, test } from \"mocha\";\nimport { TokenStandard } from \"../../src/types\";\nimport { client} from \"../utils/constants\";\n\nsuite(\"SDK: getBalance\", () => {\n  const accountAddress = \"0x000000000000000000000000000000000000dEaD\";\n\n  test(\"Returns balance for ERC20\", async () => {\n    const asset = {\n      tokenStandard: TokenStandard.ERC20,\n      // WETH\n      tokenAddress: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n      tokenId: null,\n    };\n    const balance = await client.getBalance({ accountAddress, asset });\n    assert(balance > ethers.parseEther(\"0.05\"));\n  });\n\n  test(\"Returns balance for ERC721\", async () => {\n    const asset = {\n      tokenStandard: TokenStandard.ERC721,\n      tokenAddress: \"0x0cdd3cb3bcd969c2b389488b51fb093cc0d703b1\",\n      tokenId: \"183\",\n    };\n    const balance = await client.getBalance({ accountAddress, asset });\n    assert(balance === 1n);\n  });\n\n  test(\"Returns balance for ERC1155\", async () => {\n    const asset = {\n      tokenStandard: TokenStandard.ERC1155,\n      tokenAddress: \"0x1e196b7873b8456437309ba3fa748fa6f1602da8\",\n      tokenId: \"21\",\n    };\n    const balance = await client.getBalance({ accountAddress, asset });\n    assert(balance >= 2n);\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"7aa33bc24f7fd606408b57f4173ffde8876942ca"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_i6295rxig=function(){return actualCoverage;};}return actualCoverage;}cov_i6295rxig();cov_i6295rxig().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const chai_1=(cov_i6295rxig().s[1]++,require("chai"));const ethers_1=(cov_i6295rxig().s[2]++,require("ethers"));const mocha_1=(cov_i6295rxig().s[3]++,require("mocha"));const types_1=(cov_i6295rxig().s[4]++,require("../../src/types"));const constants_1=(cov_i6295rxig().s[5]++,require("../utils/constants"));cov_i6295rxig().s[6]++;(0,mocha_1.suite)("SDK: getBalance",()=>{cov_i6295rxig().f[0]++;const accountAddress=(cov_i6295rxig().s[7]++,"0x000000000000000000000000000000000000dEaD");cov_i6295rxig().s[8]++;(0,mocha_1.test)("Returns balance for ERC20",async()=>{cov_i6295rxig().f[1]++;const asset=(cov_i6295rxig().s[9]++,{tokenStandard:types_1.TokenStandard.ERC20,// WETH
tokenAddress:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",tokenId:null});const balance=(cov_i6295rxig().s[10]++,await constants_1.client.getBalance({accountAddress,asset}));cov_i6295rxig().s[11]++;(0,chai_1.assert)(balance>ethers_1.ethers.parseEther("0.05"));});cov_i6295rxig().s[12]++;(0,mocha_1.test)("Returns balance for ERC721",async()=>{cov_i6295rxig().f[2]++;const asset=(cov_i6295rxig().s[13]++,{tokenStandard:types_1.TokenStandard.ERC721,tokenAddress:"0x0cdd3cb3bcd969c2b389488b51fb093cc0d703b1",tokenId:"183"});const balance=(cov_i6295rxig().s[14]++,await constants_1.client.getBalance({accountAddress,asset}));cov_i6295rxig().s[15]++;(0,chai_1.assert)(balance===1n);});cov_i6295rxig().s[16]++;(0,mocha_1.test)("Returns balance for ERC1155",async()=>{cov_i6295rxig().f[3]++;const asset=(cov_i6295rxig().s[17]++,{tokenStandard:types_1.TokenStandard.ERC1155,tokenAddress:"0x1e196b7873b8456437309ba3fa748fa6f1602da8",tokenId:"21"});const balance=(cov_i6295rxig().s[18]++,await constants_1.client.getBalance({accountAddress,asset}));cov_i6295rxig().s[19]++;(0,chai_1.assert)(balance>=2n);});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JnL2Rldi9vcGVuc2VhLWpzL3Rlc3Qvc2RrL2dldEJhbGFuY2Uuc3BlYy50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JnL2Rldi9vcGVuc2VhLWpzL3Rlc3Qvc2RrL2dldEJhbGFuY2Uuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUE4QjtBQUM5QixtQ0FBZ0M7QUFDaEMsaUNBQW9DO0FBQ3BDLDJDQUFnRDtBQUNoRCxrREFBMkM7QUFFM0MsSUFBQSxhQUFLLEVBQUMsaUJBQWlCLEVBQUUsR0FBRyxFQUFFO0lBQzVCLE1BQU0sY0FBYyxHQUFHLDRDQUE0QyxDQUFDO0lBRXBFLElBQUEsWUFBSSxFQUFDLDJCQUEyQixFQUFFLEtBQUssSUFBSSxFQUFFO1FBQzNDLE1BQU0sS0FBSyxHQUFHO1lBQ1osYUFBYSxFQUFFLHFCQUFhLENBQUMsS0FBSztZQUNsQyxPQUFPO1lBQ1AsWUFBWSxFQUFFLDRDQUE0QztZQUMxRCxPQUFPLEVBQUUsSUFBSTtTQUNkLENBQUM7UUFDRixNQUFNLE9BQU8sR0FBRyxNQUFNLGtCQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDbkUsSUFBQSxhQUFNLEVBQUMsT0FBTyxHQUFHLGVBQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QyxDQUFDLENBQUMsQ0FBQztJQUVILElBQUEsWUFBSSxFQUFDLDRCQUE0QixFQUFFLEtBQUssSUFBSSxFQUFFO1FBQzVDLE1BQU0sS0FBSyxHQUFHO1lBQ1osYUFBYSxFQUFFLHFCQUFhLENBQUMsTUFBTTtZQUNuQyxZQUFZLEVBQUUsNENBQTRDO1lBQzFELE9BQU8sRUFBRSxLQUFLO1NBQ2YsQ0FBQztRQUNGLE1BQU0sT0FBTyxHQUFHLE1BQU0sa0JBQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUNuRSxJQUFBLGFBQU0sRUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDekIsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFBLFlBQUksRUFBQyw2QkFBNkIsRUFBRSxLQUFLLElBQUksRUFBRTtRQUM3QyxNQUFNLEtBQUssR0FBRztZQUNaLGFBQWEsRUFBRSxxQkFBYSxDQUFDLE9BQU87WUFDcEMsWUFBWSxFQUFFLDRDQUE0QztZQUMxRCxPQUFPLEVBQUUsSUFBSTtTQUNkLENBQUM7UUFDRixNQUFNLE9BQU8sR0FBRyxNQUFNLGtCQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDbkUsSUFBQSxhQUFNLEVBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3hCLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnQgfSBmcm9tIFwiY2hhaVwiO1xuaW1wb3J0IHsgZXRoZXJzIH0gZnJvbSBcImV0aGVyc1wiO1xuaW1wb3J0IHsgc3VpdGUsIHRlc3QgfSBmcm9tIFwibW9jaGFcIjtcbmltcG9ydCB7IFRva2VuU3RhbmRhcmQgfSBmcm9tIFwiLi4vLi4vc3JjL3R5cGVzXCI7XG5pbXBvcnQgeyBjbGllbnR9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHNcIjtcblxuc3VpdGUoXCJTREs6IGdldEJhbGFuY2VcIiwgKCkgPT4ge1xuICBjb25zdCBhY2NvdW50QWRkcmVzcyA9IFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBkRWFEXCI7XG5cbiAgdGVzdChcIlJldHVybnMgYmFsYW5jZSBmb3IgRVJDMjBcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGFzc2V0ID0ge1xuICAgICAgdG9rZW5TdGFuZGFyZDogVG9rZW5TdGFuZGFyZC5FUkMyMCxcbiAgICAgIC8vIFdFVEhcbiAgICAgIHRva2VuQWRkcmVzczogXCIweGMwMmFhYTM5YjIyM2ZlOGQwYTBlNWM0ZjI3ZWFkOTA4M2M3NTZjYzJcIixcbiAgICAgIHRva2VuSWQ6IG51bGwsXG4gICAgfTtcbiAgICBjb25zdCBiYWxhbmNlID0gYXdhaXQgY2xpZW50LmdldEJhbGFuY2UoeyBhY2NvdW50QWRkcmVzcywgYXNzZXQgfSk7XG4gICAgYXNzZXJ0KGJhbGFuY2UgPiBldGhlcnMucGFyc2VFdGhlcihcIjAuMDVcIikpO1xuICB9KTtcblxuICB0ZXN0KFwiUmV0dXJucyBiYWxhbmNlIGZvciBFUkM3MjFcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGFzc2V0ID0ge1xuICAgICAgdG9rZW5TdGFuZGFyZDogVG9rZW5TdGFuZGFyZC5FUkM3MjEsXG4gICAgICB0b2tlbkFkZHJlc3M6IFwiMHgwY2RkM2NiM2JjZDk2OWMyYjM4OTQ4OGI1MWZiMDkzY2MwZDcwM2IxXCIsXG4gICAgICB0b2tlbklkOiBcIjE4M1wiLFxuICAgIH07XG4gICAgY29uc3QgYmFsYW5jZSA9IGF3YWl0IGNsaWVudC5nZXRCYWxhbmNlKHsgYWNjb3VudEFkZHJlc3MsIGFzc2V0IH0pO1xuICAgIGFzc2VydChiYWxhbmNlID09PSAxbik7XG4gIH0pO1xuXG4gIHRlc3QoXCJSZXR1cm5zIGJhbGFuY2UgZm9yIEVSQzExNTVcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGFzc2V0ID0ge1xuICAgICAgdG9rZW5TdGFuZGFyZDogVG9rZW5TdGFuZGFyZC5FUkMxMTU1LFxuICAgICAgdG9rZW5BZGRyZXNzOiBcIjB4MWUxOTZiNzg3M2I4NDU2NDM3MzA5YmEzZmE3NDhmYTZmMTYwMmRhOFwiLFxuICAgICAgdG9rZW5JZDogXCIyMVwiLFxuICAgIH07XG4gICAgY29uc3QgYmFsYW5jZSA9IGF3YWl0IGNsaWVudC5nZXRCYWxhbmNlKHsgYWNjb3VudEFkZHJlc3MsIGFzc2V0IH0pO1xuICAgIGFzc2VydChiYWxhbmNlID49IDJuKTtcbiAgfSk7XG59KTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfaTYyOTVyeGlnIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiY2hhaV8xIiwicmVxdWlyZSIsImV0aGVyc18xIiwibW9jaGFfMSIsInR5cGVzXzEiLCJjb25zdGFudHNfMSIsInN1aXRlIiwiZiIsImFjY291bnRBZGRyZXNzIiwidGVzdCIsImFzc2V0IiwidG9rZW5TdGFuZGFyZCIsIlRva2VuU3RhbmRhcmQiLCJFUkMyMCIsInRva2VuQWRkcmVzcyIsInRva2VuSWQiLCJiYWxhbmNlIiwiY2xpZW50IiwiZ2V0QmFsYW5jZSIsImFzc2VydCIsImV0aGVycyIsInBhcnNlRXRoZXIiLCJFUkM3MjEiLCJFUkMxMTU1Il0sInNvdXJjZXMiOlsiL1VzZXJzL3JnL2Rldi9vcGVuc2VhLWpzL3Rlc3Qvc2RrL2dldEJhbGFuY2Uuc3BlYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnQgfSBmcm9tIFwiY2hhaVwiO1xuaW1wb3J0IHsgZXRoZXJzIH0gZnJvbSBcImV0aGVyc1wiO1xuaW1wb3J0IHsgc3VpdGUsIHRlc3QgfSBmcm9tIFwibW9jaGFcIjtcbmltcG9ydCB7IFRva2VuU3RhbmRhcmQgfSBmcm9tIFwiLi4vLi4vc3JjL3R5cGVzXCI7XG5pbXBvcnQgeyBjbGllbnR9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHNcIjtcblxuc3VpdGUoXCJTREs6IGdldEJhbGFuY2VcIiwgKCkgPT4ge1xuICBjb25zdCBhY2NvdW50QWRkcmVzcyA9IFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBkRWFEXCI7XG5cbiAgdGVzdChcIlJldHVybnMgYmFsYW5jZSBmb3IgRVJDMjBcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGFzc2V0ID0ge1xuICAgICAgdG9rZW5TdGFuZGFyZDogVG9rZW5TdGFuZGFyZC5FUkMyMCxcbiAgICAgIC8vIFdFVEhcbiAgICAgIHRva2VuQWRkcmVzczogXCIweGMwMmFhYTM5YjIyM2ZlOGQwYTBlNWM0ZjI3ZWFkOTA4M2M3NTZjYzJcIixcbiAgICAgIHRva2VuSWQ6IG51bGwsXG4gICAgfTtcbiAgICBjb25zdCBiYWxhbmNlID0gYXdhaXQgY2xpZW50LmdldEJhbGFuY2UoeyBhY2NvdW50QWRkcmVzcywgYXNzZXQgfSk7XG4gICAgYXNzZXJ0KGJhbGFuY2UgPiBldGhlcnMucGFyc2VFdGhlcihcIjAuMDVcIikpO1xuICB9KTtcblxuICB0ZXN0KFwiUmV0dXJucyBiYWxhbmNlIGZvciBFUkM3MjFcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGFzc2V0ID0ge1xuICAgICAgdG9rZW5TdGFuZGFyZDogVG9rZW5TdGFuZGFyZC5FUkM3MjEsXG4gICAgICB0b2tlbkFkZHJlc3M6IFwiMHgwY2RkM2NiM2JjZDk2OWMyYjM4OTQ4OGI1MWZiMDkzY2MwZDcwM2IxXCIsXG4gICAgICB0b2tlbklkOiBcIjE4M1wiLFxuICAgIH07XG4gICAgY29uc3QgYmFsYW5jZSA9IGF3YWl0IGNsaWVudC5nZXRCYWxhbmNlKHsgYWNjb3VudEFkZHJlc3MsIGFzc2V0IH0pO1xuICAgIGFzc2VydChiYWxhbmNlID09PSAxbik7XG4gIH0pO1xuXG4gIHRlc3QoXCJSZXR1cm5zIGJhbGFuY2UgZm9yIEVSQzExNTVcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGFzc2V0ID0ge1xuICAgICAgdG9rZW5TdGFuZGFyZDogVG9rZW5TdGFuZGFyZC5FUkMxMTU1LFxuICAgICAgdG9rZW5BZGRyZXNzOiBcIjB4MWUxOTZiNzg3M2I4NDU2NDM3MzA5YmEzZmE3NDhmYTZmMTYwMmRhOFwiLFxuICAgICAgdG9rZW5JZDogXCIyMVwiLFxuICAgIH07XG4gICAgY29uc3QgYmFsYW5jZSA9IGF3YWl0IGNsaWVudC5nZXRCYWxhbmNlKHsgYWNjb3VudEFkZHJlc3MsIGFzc2V0IH0pO1xuICAgIGFzc2VydChiYWxhbmNlID49IDJuKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6InMrSkFlTTtBQUFBQSxhQUFBLFNBQUFBLENBQUEs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