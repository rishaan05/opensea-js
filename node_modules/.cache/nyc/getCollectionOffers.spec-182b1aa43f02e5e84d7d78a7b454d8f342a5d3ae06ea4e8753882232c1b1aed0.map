{"version":3,"file":"/Users/rg/dev/opensea-js/test/integration/getCollectionOffers.spec.ts","sources":["/Users/rg/dev/opensea-js/test/integration/getCollectionOffers.spec.ts"],"names":[],"mappings":";;AAAA,+BAA8B;AAC9B,iCAAoC;AACpC,mCAA8B;AAC9B,iDAAuD;AAEvD,IAAA,aAAK,EAAC,0BAA0B,EAAE,GAAG,EAAE;IACrC,IAAA,YAAI,EAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAEzD,IAAA,aAAM,EAAC,QAAQ,EAAE,6BAA6B,CAAC,CAAC;QAChD,IAAA,aAAM,EAAC,QAAQ,CAAC,MAAM,EAAE,sCAAsC,CAAC,CAAC;QAChE,IAAA,aAAM,EAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,uCAAuC,CAAC,CAAC;QAC5E,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjC,IAAA,aAAM,EAAC,KAAK,CAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;QAC1D,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC;QAChD,IAAA,aAAM,EAAC,MAAM,EAAE,6BAA6B,CAAC,CAAC;QAE9C,MAAM,eAAe,GAAG,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC;QACzD,IAAA,aAAM,EAAC,eAAe,EAAE,mCAAmC,CAAC,CAAC;QAE7D,MAAM,eAAe,GAAG,IAAA,sBAAc,EAAC,eAAe,CAAC,CAAC;QACxD,IAAA,aAAM,EAAC,eAAe,CAAC,CAAC,CAAC,EAAE,mCAAmC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport { sdk } from \"./setup\";\nimport { decodeTokenIds } from \"../../src/utils/utils\";\n\nsuite(\"SDK: getCollectionOffers\", () => {\n  test(\"Get Collection Offers\", async () => {\n    const slug = \"cool-cats-nft\";\n    const response = await sdk.api.getCollectionOffers(slug);\n\n    assert(response, \"Response should not be null\");\n    assert(response.offers, \"Collection offers should not be null\");\n    assert(response.offers.length > 0, \"Collection offers should not be empty\");\n    const offer = response.offers[0];\n    assert(offer.order_hash, \"Order hash should not be null\");\n    const tokens = offer.criteria.encoded_token_ids;\n    assert(tokens, \"Criteria should not be null\");\n\n    const encodedTokenIds = offer.criteria.encoded_token_ids;\n    assert(encodedTokenIds, \"Encoded tokens should not be null\");\n\n    const decodedTokenIds = decodeTokenIds(encodedTokenIds);\n    assert(decodedTokenIds[0], \"Decoded tokens should not be null\");\n  });\n});\n"]}