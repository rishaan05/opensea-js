"use strict";function cov_zs3cebohd(){var path="/Users/rg/dev/opensea-js/test/utils.spec.ts";var hash="8a69159d64252ed09155f38ba04623b21c860223";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/rg/dev/opensea-js/test/utils.spec.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:20},end:{line:3,column:64}},"2":{start:{line:4,column:15},end:{line:4,column:30}},"3":{start:{line:5,column:17},end:{line:5,column:34}},"4":{start:{line:6,column:16},end:{line:6,column:32}},"5":{start:{line:7,column:16},end:{line:7,column:45}},"6":{start:{line:8,column:0},end:{line:29,column:3}},"7":{start:{line:9,column:4},end:{line:28,column:7}},"8":{start:{line:10,column:30},end:{line:10,column:75}},"9":{start:{line:12,column:33},end:{line:16,column:9}},"10":{start:{line:18,column:31},end:{line:22,column:9}},"11":{start:{line:18,column:44},end:{line:22,column:9}},"12":{start:{line:23,column:8},end:{line:27,column:9}},"13":{start:{line:24,column:12},end:{line:26,column:13}},"14":{start:{line:25,column:16},end:{line:25,column:109}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:35},end:{line:8,column:36}},loc:{start:{line:8,column:41},end:{line:29,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:73},end:{line:9,column:74}},loc:{start:{line:9,column:85},end:{line:28,column:5}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:18,column:31},end:{line:18,column:32}},loc:{start:{line:18,column:44},end:{line:22,column:9}},line:18}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},f:{"0":0,"1":0,"2":0},b:{},inputSourceMap:{version:3,file:"/Users/rg/dev/opensea-js/test/utils.spec.ts",sources:["/Users/rg/dev/opensea-js/test/utils.spec.ts"],names:[],mappings:";;AAAA,iEAG2C;AAC3C,+BAA8B;AAC9B,mCAAgC;AAChC,iCAAoC;AACpC,8CAAqD;AAErD,IAAA,aAAK,EAAC,cAAc,EAAE,GAAG,EAAE;IACzB,IAAA,YAAI,EAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,aAAa,GAAG,eAAM,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC;QAE3D,gCAAgC;QAChC,MAAM,gBAAgB,GAAwB;YAC5C,CAAC,4CAAgC,EAAE,IAAI,CAAC;YACxC,CAAC,4CAAgC,EAAE,IAAI,CAAC;YACxC,CAAC,aAAa,EAAE,KAAK,CAAC;SACvB,CAAC;QAEF,mDAAmD;QACnD,MAAM,cAAc,GAAG,CAAC,OAAe,EAAE,EAAE,CAAC;YAC1C,OAAO;YACP,OAAO,CAAC,WAAW,EAAE;YACrB,eAAM,CAAC,UAAU,CAAC,OAAO,CAAC;SAC3B,CAAC;QAEF,KAAK,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,gBAAgB,EAAE,CAAC;YAClD,KAAK,MAAM,gBAAgB,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC;gBACvD,IAAA,aAAM,EAAC,IAAA,uBAAe,EAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;YACtE,CAAC;QACH,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC",sourcesContent:["import {\n  CROSS_CHAIN_SEAPORT_V1_5_ADDRESS,\n  CROSS_CHAIN_SEAPORT_V1_6_ADDRESS,\n} from \"@opensea/seaport-js/lib/constants\";\nimport { expect } from \"chai\";\nimport { ethers } from \"ethers\";\nimport { suite, test } from \"mocha\";\nimport { isValidProtocol } from \"../src/utils/utils\";\n\nsuite(\"Utils: utils\", () => {\n  test(\"isValidProtocol works with all forms of address\", async () => {\n    const randomAddress = ethers.Wallet.createRandom().address;\n\n    // Mapping of [address, isValid]\n    const addressesToCheck: [string, boolean][] = [\n      [CROSS_CHAIN_SEAPORT_V1_5_ADDRESS, true],\n      [CROSS_CHAIN_SEAPORT_V1_6_ADDRESS, true],\n      [randomAddress, false],\n    ];\n\n    // Check default, lowercase, and checksum addresses\n    const formatsToCheck = (address: string) => [\n      address,\n      address.toLowerCase(),\n      ethers.getAddress(address),\n    ];\n\n    for (const [address, isValid] of addressesToCheck) {\n      for (const formattedAddress of formatsToCheck(address)) {\n        expect(isValidProtocol(formattedAddress)).to.be(isValid.toString());\n      }\n    }\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8a69159d64252ed09155f38ba04623b21c860223"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_zs3cebohd=function(){return actualCoverage;};}return actualCoverage;}cov_zs3cebohd();cov_zs3cebohd().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const constants_1=(cov_zs3cebohd().s[1]++,require("@opensea/seaport-js/lib/constants"));const chai_1=(cov_zs3cebohd().s[2]++,require("chai"));const ethers_1=(cov_zs3cebohd().s[3]++,require("ethers"));const mocha_1=(cov_zs3cebohd().s[4]++,require("mocha"));const utils_1=(cov_zs3cebohd().s[5]++,require("../src/utils/utils"));cov_zs3cebohd().s[6]++;(0,mocha_1.suite)("Utils: utils",()=>{cov_zs3cebohd().f[0]++;cov_zs3cebohd().s[7]++;(0,mocha_1.test)("isValidProtocol works with all forms of address",async()=>{cov_zs3cebohd().f[1]++;const randomAddress=(cov_zs3cebohd().s[8]++,ethers_1.ethers.Wallet.createRandom().address);// Mapping of [address, isValid]
const addressesToCheck=(cov_zs3cebohd().s[9]++,[[constants_1.CROSS_CHAIN_SEAPORT_V1_5_ADDRESS,true],[constants_1.CROSS_CHAIN_SEAPORT_V1_6_ADDRESS,true],[randomAddress,false]]);// Check default, lowercase, and checksum addresses
cov_zs3cebohd().s[10]++;const formatsToCheck=address=>{cov_zs3cebohd().f[2]++;cov_zs3cebohd().s[11]++;return[address,address.toLowerCase(),ethers_1.ethers.getAddress(address)];};cov_zs3cebohd().s[12]++;for(const[address,isValid]of addressesToCheck){cov_zs3cebohd().s[13]++;for(const formattedAddress of formatsToCheck(address)){cov_zs3cebohd().s[14]++;(0,chai_1.expect)((0,utils_1.isValidProtocol)(formattedAddress)).to.be(isValid.toString());}}});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JnL2Rldi9vcGVuc2VhLWpzL3Rlc3QvdXRpbHMuc3BlYy50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JnL2Rldi9vcGVuc2VhLWpzL3Rlc3QvdXRpbHMuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlFQUcyQztBQUMzQywrQkFBOEI7QUFDOUIsbUNBQWdDO0FBQ2hDLGlDQUFvQztBQUNwQyw4Q0FBcUQ7QUFFckQsSUFBQSxhQUFLLEVBQUMsY0FBYyxFQUFFLEdBQUcsRUFBRTtJQUN6QixJQUFBLFlBQUksRUFBQyxpREFBaUQsRUFBRSxLQUFLLElBQUksRUFBRTtRQUNqRSxNQUFNLGFBQWEsR0FBRyxlQUFNLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDLE9BQU8sQ0FBQztRQUUzRCxnQ0FBZ0M7UUFDaEMsTUFBTSxnQkFBZ0IsR0FBd0I7WUFDNUMsQ0FBQyw0Q0FBZ0MsRUFBRSxJQUFJLENBQUM7WUFDeEMsQ0FBQyw0Q0FBZ0MsRUFBRSxJQUFJLENBQUM7WUFDeEMsQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDO1NBQ3ZCLENBQUM7UUFFRixtREFBbUQ7UUFDbkQsTUFBTSxjQUFjLEdBQUcsQ0FBQyxPQUFlLEVBQUUsRUFBRSxDQUFDO1lBQzFDLE9BQU87WUFDUCxPQUFPLENBQUMsV0FBVyxFQUFFO1lBQ3JCLGVBQU0sQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDO1NBQzNCLENBQUM7UUFFRixLQUFLLE1BQU0sQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztZQUNsRCxLQUFLLE1BQU0sZ0JBQWdCLElBQUksY0FBYyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7Z0JBQ3ZELElBQUEsYUFBTSxFQUFDLElBQUEsdUJBQWUsRUFBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUN0RSxDQUFDO1FBQ0gsQ0FBQztJQUNILENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDUk9TU19DSEFJTl9TRUFQT1JUX1YxXzVfQUREUkVTUyxcbiAgQ1JPU1NfQ0hBSU5fU0VBUE9SVF9WMV82X0FERFJFU1MsXG59IGZyb20gXCJAb3BlbnNlYS9zZWFwb3J0LWpzL2xpYi9jb25zdGFudHNcIjtcbmltcG9ydCB7IGV4cGVjdCB9IGZyb20gXCJjaGFpXCI7XG5pbXBvcnQgeyBldGhlcnMgfSBmcm9tIFwiZXRoZXJzXCI7XG5pbXBvcnQgeyBzdWl0ZSwgdGVzdCB9IGZyb20gXCJtb2NoYVwiO1xuaW1wb3J0IHsgaXNWYWxpZFByb3RvY29sIH0gZnJvbSBcIi4uL3NyYy91dGlscy91dGlsc1wiO1xuXG5zdWl0ZShcIlV0aWxzOiB1dGlsc1wiLCAoKSA9PiB7XG4gIHRlc3QoXCJpc1ZhbGlkUHJvdG9jb2wgd29ya3Mgd2l0aCBhbGwgZm9ybXMgb2YgYWRkcmVzc1wiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgcmFuZG9tQWRkcmVzcyA9IGV0aGVycy5XYWxsZXQuY3JlYXRlUmFuZG9tKCkuYWRkcmVzcztcblxuICAgIC8vIE1hcHBpbmcgb2YgW2FkZHJlc3MsIGlzVmFsaWRdXG4gICAgY29uc3QgYWRkcmVzc2VzVG9DaGVjazogW3N0cmluZywgYm9vbGVhbl1bXSA9IFtcbiAgICAgIFtDUk9TU19DSEFJTl9TRUFQT1JUX1YxXzVfQUREUkVTUywgdHJ1ZV0sXG4gICAgICBbQ1JPU1NfQ0hBSU5fU0VBUE9SVF9WMV82X0FERFJFU1MsIHRydWVdLFxuICAgICAgW3JhbmRvbUFkZHJlc3MsIGZhbHNlXSxcbiAgICBdO1xuXG4gICAgLy8gQ2hlY2sgZGVmYXVsdCwgbG93ZXJjYXNlLCBhbmQgY2hlY2tzdW0gYWRkcmVzc2VzXG4gICAgY29uc3QgZm9ybWF0c1RvQ2hlY2sgPSAoYWRkcmVzczogc3RyaW5nKSA9PiBbXG4gICAgICBhZGRyZXNzLFxuICAgICAgYWRkcmVzcy50b0xvd2VyQ2FzZSgpLFxuICAgICAgZXRoZXJzLmdldEFkZHJlc3MoYWRkcmVzcyksXG4gICAgXTtcblxuICAgIGZvciAoY29uc3QgW2FkZHJlc3MsIGlzVmFsaWRdIG9mIGFkZHJlc3Nlc1RvQ2hlY2spIHtcbiAgICAgIGZvciAoY29uc3QgZm9ybWF0dGVkQWRkcmVzcyBvZiBmb3JtYXRzVG9DaGVjayhhZGRyZXNzKSkge1xuICAgICAgICBleHBlY3QoaXNWYWxpZFByb3RvY29sKGZvcm1hdHRlZEFkZHJlc3MpKS50by5iZShpc1ZhbGlkLnRvU3RyaW5nKCkpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG59KTtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfenMzY2Vib2hkIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiY29uc3RhbnRzXzEiLCJyZXF1aXJlIiwiY2hhaV8xIiwiZXRoZXJzXzEiLCJtb2NoYV8xIiwidXRpbHNfMSIsInN1aXRlIiwiZiIsInRlc3QiLCJyYW5kb21BZGRyZXNzIiwiZXRoZXJzIiwiV2FsbGV0IiwiY3JlYXRlUmFuZG9tIiwiYWRkcmVzcyIsImFkZHJlc3Nlc1RvQ2hlY2siLCJDUk9TU19DSEFJTl9TRUFQT1JUX1YxXzVfQUREUkVTUyIsIkNST1NTX0NIQUlOX1NFQVBPUlRfVjFfNl9BRERSRVNTIiwiZm9ybWF0c1RvQ2hlY2siLCJ0b0xvd2VyQ2FzZSIsImdldEFkZHJlc3MiLCJpc1ZhbGlkIiwiZm9ybWF0dGVkQWRkcmVzcyIsImV4cGVjdCIsImlzVmFsaWRQcm90b2NvbCIsInRvIiwiYmUiLCJ0b1N0cmluZyJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9yZy9kZXYvb3BlbnNlYS1qcy90ZXN0L3V0aWxzLnNwZWMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ1JPU1NfQ0hBSU5fU0VBUE9SVF9WMV81X0FERFJFU1MsXG4gIENST1NTX0NIQUlOX1NFQVBPUlRfVjFfNl9BRERSRVNTLFxufSBmcm9tIFwiQG9wZW5zZWEvc2VhcG9ydC1qcy9saWIvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBleHBlY3QgfSBmcm9tIFwiY2hhaVwiO1xuaW1wb3J0IHsgZXRoZXJzIH0gZnJvbSBcImV0aGVyc1wiO1xuaW1wb3J0IHsgc3VpdGUsIHRlc3QgfSBmcm9tIFwibW9jaGFcIjtcbmltcG9ydCB7IGlzVmFsaWRQcm90b2NvbCB9IGZyb20gXCIuLi9zcmMvdXRpbHMvdXRpbHNcIjtcblxuc3VpdGUoXCJVdGlsczogdXRpbHNcIiwgKCkgPT4ge1xuICB0ZXN0KFwiaXNWYWxpZFByb3RvY29sIHdvcmtzIHdpdGggYWxsIGZvcm1zIG9mIGFkZHJlc3NcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJhbmRvbUFkZHJlc3MgPSBldGhlcnMuV2FsbGV0LmNyZWF0ZVJhbmRvbSgpLmFkZHJlc3M7XG5cbiAgICAvLyBNYXBwaW5nIG9mIFthZGRyZXNzLCBpc1ZhbGlkXVxuICAgIGNvbnN0IGFkZHJlc3Nlc1RvQ2hlY2s6IFtzdHJpbmcsIGJvb2xlYW5dW10gPSBbXG4gICAgICBbQ1JPU1NfQ0hBSU5fU0VBUE9SVF9WMV81X0FERFJFU1MsIHRydWVdLFxuICAgICAgW0NST1NTX0NIQUlOX1NFQVBPUlRfVjFfNl9BRERSRVNTLCB0cnVlXSxcbiAgICAgIFtyYW5kb21BZGRyZXNzLCBmYWxzZV0sXG4gICAgXTtcblxuICAgIC8vIENoZWNrIGRlZmF1bHQsIGxvd2VyY2FzZSwgYW5kIGNoZWNrc3VtIGFkZHJlc3Nlc1xuICAgIGNvbnN0IGZvcm1hdHNUb0NoZWNrID0gKGFkZHJlc3M6IHN0cmluZykgPT4gW1xuICAgICAgYWRkcmVzcyxcbiAgICAgIGFkZHJlc3MudG9Mb3dlckNhc2UoKSxcbiAgICAgIGV0aGVycy5nZXRBZGRyZXNzKGFkZHJlc3MpLFxuICAgIF07XG5cbiAgICBmb3IgKGNvbnN0IFthZGRyZXNzLCBpc1ZhbGlkXSBvZiBhZGRyZXNzZXNUb0NoZWNrKSB7XG4gICAgICBmb3IgKGNvbnN0IGZvcm1hdHRlZEFkZHJlc3Mgb2YgZm9ybWF0c1RvQ2hlY2soYWRkcmVzcykpIHtcbiAgICAgICAgZXhwZWN0KGlzVmFsaWRQcm90b2NvbChmb3JtYXR0ZWRBZGRyZXNzKSkudG8uYmUoaXNWYWxpZC50b1N0cmluZygpKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiIrOUhBa0JNO0FBQUFBLGFBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsYUFBQSxHQUFBQSxhQUFBLEdBQUFFLENBQUEsTSx5REFsQk4sTUFBQUMsV0FBQSxFQUFBSCxhQUFBLEdBQUFFLENBQUEsTUFBQUUsT0FBQSx1Q0FJQSxNQUFBQyxNQUFBLEVBQUFMLGFBQUEsR0FBQUUsQ0FBQSxNQUFBRSxPQUFBLFVBQ0EsTUFBQUUsUUFBQSxFQUFBTixhQUFBLEdBQUFFLENBQUEsTUFBQUUsT0FBQSxZQUNBLE1BQUFHLE9BQUEsRUFBQVAsYUFBQSxHQUFBRSxDQUFBLE1BQUFFLE9BQUEsV0FDQSxNQUFBSSxPQUFBLEVBQUFSLGFBQUEsR0FBQUUsQ0FBQSxNQUFBRSxPQUFBLHdCQUFxREosYUFBQSxHQUFBRSxDQUFBLE1BRXJELEdBQUFLLE9BQUEsQ0FBQUUsS0FBSyxFQUFDLGNBQWMsQ0FBRSxJQUFLLENBQUFULGFBQUEsR0FBQVUsQ0FBQSxNQUFBVixhQUFBLEdBQUFFLENBQUEsTUFDekIsR0FBQUssT0FBQSxDQUFBSSxJQUFJLEVBQUMsaURBQWlELENBQUUsU0FBVyxDQUFBWCxhQUFBLEdBQUFVLENBQUEsTUFDakUsS0FBTSxDQUFBRSxhQUFhLEVBQUFaLGFBQUEsR0FBQUUsQ0FBQSxNQUFHSSxRQUFBLENBQUFPLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDQyxZQUFZLEVBQUUsQ0FBQ0MsT0FBTyxFQUUxRDtBQUNBLEtBQU0sQ0FBQUMsZ0JBQWdCLEVBQUFqQixhQUFBLEdBQUFFLENBQUEsTUFBd0IsQ0FDNUMsQ0FBQ0MsV0FBQSxDQUFBZSxnQ0FBZ0MsQ0FBRSxJQUFJLENBQUMsQ0FDeEMsQ0FBQ2YsV0FBQSxDQUFBZ0IsZ0NBQWdDLENBQUUsSUFBSSxDQUFDLENBQ3hDLENBQUNQLGFBQWEsQ0FBRSxLQUFLLENBQUMsQ0FDdkIsRUFFRDtBQUFBWixhQUFBLEdBQUFFLENBQUEsT0FDQSxLQUFNLENBQUFrQixjQUFjLENBQUlKLE9BQWUsRUFBSyxDQUFBaEIsYUFBQSxHQUFBVSxDQUFBLE1BQUFWLGFBQUEsR0FBQUUsQ0FBQSxjQUMxQ2MsT0FBTyxDQUNQQSxPQUFPLENBQUNLLFdBQVcsRUFBRSxDQUNyQmYsUUFBQSxDQUFBTyxNQUFNLENBQUNTLFVBQVUsQ0FBQ04sT0FBTyxDQUFDLENBQzNCLEMsQ0FBQSxDQUFDaEIsYUFBQSxHQUFBRSxDQUFBLE9BRUYsSUFBSyxLQUFNLENBQUNjLE9BQU8sQ0FBRU8sT0FBTyxDQUFDLEVBQUksQ0FBQU4sZ0JBQWdCLENBQUUsQ0FBQWpCLGFBQUEsR0FBQUUsQ0FBQSxPQUNqRCxJQUFLLEtBQU0sQ0FBQXNCLGdCQUFnQixHQUFJLENBQUFKLGNBQWMsQ0FBQ0osT0FBTyxDQUFDLENBQUUsQ0FBQWhCLGFBQUEsR0FBQUUsQ0FBQSxPQUN0RCxHQUFBRyxNQUFBLENBQUFvQixNQUFNLEVBQUMsR0FBQWpCLE9BQUEsQ0FBQWtCLGVBQWUsRUFBQ0YsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDRyxFQUFFLENBQUNDLEVBQUUsQ0FBQ0wsT0FBTyxDQUFDTSxRQUFRLEVBQUUsQ0FBQyxDQUNyRSxDQUNGLENBQ0YsQ0FBQyxDQUFDLENBQ0osQ0FBQyxDQUFDLEMiLCJpZ25vcmVMaXN0IjpbXX0=