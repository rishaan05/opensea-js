"use strict";function cov_i6295rxig(){var path="/Users/rg/dev/opensea-js/test/sdk/getBalance.spec.ts";var hash="1d7d7189c5b5f2bac4c6d582f584374214130f79";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/rg/dev/opensea-js/test/sdk/getBalance.spec.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:15},end:{line:3,column:30}},"2":{start:{line:4,column:17},end:{line:4,column:34}},"3":{start:{line:5,column:16},end:{line:5,column:32}},"4":{start:{line:6,column:16},end:{line:6,column:42}},"5":{start:{line:7,column:16},end:{line:7,column:42}},"6":{start:{line:8,column:20},end:{line:8,column:49}},"7":{start:{line:9,column:0},end:{line:43,column:3}},"8":{start:{line:10,column:19},end:{line:13,column:50}},"9":{start:{line:13,column:17},end:{line:13,column:49}},"10":{start:{line:14,column:27},end:{line:14,column:71}},"11":{start:{line:15,column:4},end:{line:24,column:7}},"12":{start:{line:16,column:22},end:{line:21,column:9}},"13":{start:{line:22,column:24},end:{line:22,column:74}},"14":{start:{line:23,column:8},end:{line:23,column:73}},"15":{start:{line:25,column:4},end:{line:33,column:7}},"16":{start:{line:26,column:22},end:{line:30,column:9}},"17":{start:{line:31,column:24},end:{line:31,column:74}},"18":{start:{line:32,column:8},end:{line:32,column:43}},"19":{start:{line:34,column:4},end:{line:42,column:7}},"20":{start:{line:35,column:22},end:{line:39,column:9}},"21":{start:{line:40,column:24},end:{line:40,column:74}},"22":{start:{line:41,column:8},end:{line:41,column:42}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:38},end:{line:9,column:39}},loc:{start:{line:9,column:44},end:{line:43,column:1}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:7},end:{line:13,column:8}},loc:{start:{line:13,column:17},end:{line:13,column:49}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:15,column:51},end:{line:15,column:52}},loc:{start:{line:15,column:63},end:{line:24,column:5}},line:15},"3":{name:"(anonymous_3)",decl:{start:{line:25,column:52},end:{line:25,column:53}},loc:{start:{line:25,column:64},end:{line:33,column:5}},line:25},"4":{name:"(anonymous_4)",decl:{start:{line:34,column:53},end:{line:34,column:54}},loc:{start:{line:34,column:65},end:{line:42,column:5}},line:34}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{},inputSourceMap:{version:3,file:"/Users/rg/dev/opensea-js/test/sdk/getBalance.spec.ts",sources:["/Users/rg/dev/opensea-js/test/sdk/getBalance.spec.ts"],names:[],mappings:";;AAAA,+BAA8B;AAC9B,mCAAgC;AAChC,iCAAoC;AACpC,2CAA6C;AAC7C,2CAAuD;AACvD,kDAA2E;AAE3E,IAAA,aAAK,EAAC,iBAAiB,EAAE,GAAG,EAAE;IAC5B,MAAM,MAAM,GAAG,IAAI,kBAAU,CAC3B,gCAAoB,EACpB;QACE,KAAK,EAAE,aAAK,CAAC,OAAO;QACpB,MAAM,EAAE,2BAAe;KACxB,EACD,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAC3C,CAAC;IAEF,MAAM,cAAc,GAAG,4CAA4C,CAAC;IAEpE,IAAA,YAAI,EAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,KAAK,GAAG;YACZ,aAAa,EAAE,qBAAa,CAAC,KAAK;YAClC,OAAO;YACP,YAAY,EAAE,4CAA4C;YAC1D,OAAO,EAAE,IAAI;SACd,CAAC;QACF,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;QACnE,IAAA,aAAM,EAAC,OAAO,GAAG,eAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,KAAK,GAAG;YACZ,aAAa,EAAE,qBAAa,CAAC,MAAM;YACnC,YAAY,EAAE,4CAA4C;YAC1D,OAAO,EAAE,KAAK;SACf,CAAC;QACF,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;QACnE,IAAA,aAAM,EAAC,OAAO,KAAK,EAAE,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,KAAK,GAAG;YACZ,aAAa,EAAE,qBAAa,CAAC,OAAO;YACpC,YAAY,EAAE,4CAA4C;YAC1D,OAAO,EAAE,IAAI;SACd,CAAC;QACF,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;QACnE,IAAA,aAAM,EAAC,OAAO,IAAI,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC",sourcesContent:["import { assert } from \"chai\";\nimport { ethers } from \"ethers\";\nimport { suite, test } from \"mocha\";\nimport { OpenSeaSDK } from \"../../src/index\";\nimport { Chain, TokenStandard } from \"../../src/types\";\nimport { OPENSEA_API_KEY, RPC_PROVIDER_MAINNET } from \"../utils/constants\";\n\nsuite(\"SDK: getBalance\", () => {\n  const client = new OpenSeaSDK(\n    RPC_PROVIDER_MAINNET,\n    {\n      chain: Chain.Mainnet,\n      apiKey: OPENSEA_API_KEY,\n    },\n    (line) => console.info(`MAINNET: ${line}`),\n  );\n\n  const accountAddress = \"0x000000000000000000000000000000000000dEaD\";\n\n  test(\"Returns balance for ERC20\", async () => {\n    const asset = {\n      tokenStandard: TokenStandard.ERC20,\n      // WETH\n      tokenAddress: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n      tokenId: null,\n    };\n    const balance = await client.getBalance({ accountAddress, asset });\n    assert(balance > ethers.parseEther(\"0.05\"));\n  });\n\n  test(\"Returns balance for ERC721\", async () => {\n    const asset = {\n      tokenStandard: TokenStandard.ERC721,\n      tokenAddress: \"0x0cdd3cb3bcd969c2b389488b51fb093cc0d703b1\",\n      tokenId: \"183\",\n    };\n    const balance = await client.getBalance({ accountAddress, asset });\n    assert(balance === 1n);\n  });\n\n  test(\"Returns balance for ERC1155\", async () => {\n    const asset = {\n      tokenStandard: TokenStandard.ERC1155,\n      tokenAddress: \"0x1e196b7873b8456437309ba3fa748fa6f1602da8\",\n      tokenId: \"21\",\n    };\n    const balance = await client.getBalance({ accountAddress, asset });\n    assert(balance >= 2n);\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"1d7d7189c5b5f2bac4c6d582f584374214130f79"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_i6295rxig=function(){return actualCoverage;};}return actualCoverage;}cov_i6295rxig();cov_i6295rxig().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const chai_1=(cov_i6295rxig().s[1]++,require("chai"));const ethers_1=(cov_i6295rxig().s[2]++,require("ethers"));const mocha_1=(cov_i6295rxig().s[3]++,require("mocha"));const index_1=(cov_i6295rxig().s[4]++,require("../../src/index"));const types_1=(cov_i6295rxig().s[5]++,require("../../src/types"));const constants_1=(cov_i6295rxig().s[6]++,require("../utils/constants"));cov_i6295rxig().s[7]++;(0,mocha_1.suite)("SDK: getBalance",()=>{cov_i6295rxig().f[0]++;const client=(cov_i6295rxig().s[8]++,new index_1.OpenSeaSDK(constants_1.RPC_PROVIDER_MAINNET,{chain:types_1.Chain.Mainnet,apiKey:constants_1.OPENSEA_API_KEY},line=>{cov_i6295rxig().f[1]++;cov_i6295rxig().s[9]++;return console.info(`MAINNET: ${line}`);}));const accountAddress=(cov_i6295rxig().s[10]++,"0x000000000000000000000000000000000000dEaD");cov_i6295rxig().s[11]++;(0,mocha_1.test)("Returns balance for ERC20",async()=>{cov_i6295rxig().f[2]++;const asset=(cov_i6295rxig().s[12]++,{tokenStandard:types_1.TokenStandard.ERC20,// WETH
tokenAddress:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",tokenId:null});const balance=(cov_i6295rxig().s[13]++,await client.getBalance({accountAddress,asset}));cov_i6295rxig().s[14]++;(0,chai_1.assert)(balance>ethers_1.ethers.parseEther("0.05"));});cov_i6295rxig().s[15]++;(0,mocha_1.test)("Returns balance for ERC721",async()=>{cov_i6295rxig().f[3]++;const asset=(cov_i6295rxig().s[16]++,{tokenStandard:types_1.TokenStandard.ERC721,tokenAddress:"0x0cdd3cb3bcd969c2b389488b51fb093cc0d703b1",tokenId:"183"});const balance=(cov_i6295rxig().s[17]++,await client.getBalance({accountAddress,asset}));cov_i6295rxig().s[18]++;(0,chai_1.assert)(balance===1n);});cov_i6295rxig().s[19]++;(0,mocha_1.test)("Returns balance for ERC1155",async()=>{cov_i6295rxig().f[4]++;const asset=(cov_i6295rxig().s[20]++,{tokenStandard:types_1.TokenStandard.ERC1155,tokenAddress:"0x1e196b7873b8456437309ba3fa748fa6f1602da8",tokenId:"21"});const balance=(cov_i6295rxig().s[21]++,await client.getBalance({accountAddress,asset}));cov_i6295rxig().s[22]++;(0,chai_1.assert)(balance>=2n);});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JnL2Rldi9vcGVuc2VhLWpzL3Rlc3Qvc2RrL2dldEJhbGFuY2Uuc3BlYy50cyIsInNvdXJjZXMiOlsiL1VzZXJzL3JnL2Rldi9vcGVuc2VhLWpzL3Rlc3Qvc2RrL2dldEJhbGFuY2Uuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUE4QjtBQUM5QixtQ0FBZ0M7QUFDaEMsaUNBQW9DO0FBQ3BDLDJDQUE2QztBQUM3QywyQ0FBdUQ7QUFDdkQsa0RBQTJFO0FBRTNFLElBQUEsYUFBSyxFQUFDLGlCQUFpQixFQUFFLEdBQUcsRUFBRTtJQUM1QixNQUFNLE1BQU0sR0FBRyxJQUFJLGtCQUFVLENBQzNCLGdDQUFvQixFQUNwQjtRQUNFLEtBQUssRUFBRSxhQUFLLENBQUMsT0FBTztRQUNwQixNQUFNLEVBQUUsMkJBQWU7S0FDeEIsRUFDRCxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLElBQUksRUFBRSxDQUFDLENBQzNDLENBQUM7SUFFRixNQUFNLGNBQWMsR0FBRyw0Q0FBNEMsQ0FBQztJQUVwRSxJQUFBLFlBQUksRUFBQywyQkFBMkIsRUFBRSxLQUFLLElBQUksRUFBRTtRQUMzQyxNQUFNLEtBQUssR0FBRztZQUNaLGFBQWEsRUFBRSxxQkFBYSxDQUFDLEtBQUs7WUFDbEMsT0FBTztZQUNQLFlBQVksRUFBRSw0Q0FBNEM7WUFDMUQsT0FBTyxFQUFFLElBQUk7U0FDZCxDQUFDO1FBQ0YsTUFBTSxPQUFPLEdBQUcsTUFBTSxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDbkUsSUFBQSxhQUFNLEVBQUMsT0FBTyxHQUFHLGVBQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QyxDQUFDLENBQUMsQ0FBQztJQUVILElBQUEsWUFBSSxFQUFDLDRCQUE0QixFQUFFLEtBQUssSUFBSSxFQUFFO1FBQzVDLE1BQU0sS0FBSyxHQUFHO1lBQ1osYUFBYSxFQUFFLHFCQUFhLENBQUMsTUFBTTtZQUNuQyxZQUFZLEVBQUUsNENBQTRDO1lBQzFELE9BQU8sRUFBRSxLQUFLO1NBQ2YsQ0FBQztRQUNGLE1BQU0sT0FBTyxHQUFHLE1BQU0sTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQ25FLElBQUEsYUFBTSxFQUFDLE9BQU8sS0FBSyxFQUFFLENBQUMsQ0FBQztJQUN6QixDQUFDLENBQUMsQ0FBQztJQUVILElBQUEsWUFBSSxFQUFDLDZCQUE2QixFQUFFLEtBQUssSUFBSSxFQUFFO1FBQzdDLE1BQU0sS0FBSyxHQUFHO1lBQ1osYUFBYSxFQUFFLHFCQUFhLENBQUMsT0FBTztZQUNwQyxZQUFZLEVBQUUsNENBQTRDO1lBQzFELE9BQU8sRUFBRSxJQUFJO1NBQ2QsQ0FBQztRQUNGLE1BQU0sT0FBTyxHQUFHLE1BQU0sTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQ25FLElBQUEsYUFBTSxFQUFDLE9BQU8sSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN4QixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSBcImNoYWlcIjtcbmltcG9ydCB7IGV0aGVycyB9IGZyb20gXCJldGhlcnNcIjtcbmltcG9ydCB7IHN1aXRlLCB0ZXN0IH0gZnJvbSBcIm1vY2hhXCI7XG5pbXBvcnQgeyBPcGVuU2VhU0RLIH0gZnJvbSBcIi4uLy4uL3NyYy9pbmRleFwiO1xuaW1wb3J0IHsgQ2hhaW4sIFRva2VuU3RhbmRhcmQgfSBmcm9tIFwiLi4vLi4vc3JjL3R5cGVzXCI7XG5pbXBvcnQgeyBPUEVOU0VBX0FQSV9LRVksIFJQQ19QUk9WSURFUl9NQUlOTkVUIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50c1wiO1xuXG5zdWl0ZShcIlNESzogZ2V0QmFsYW5jZVwiLCAoKSA9PiB7XG4gIGNvbnN0IGNsaWVudCA9IG5ldyBPcGVuU2VhU0RLKFxuICAgIFJQQ19QUk9WSURFUl9NQUlOTkVULFxuICAgIHtcbiAgICAgIGNoYWluOiBDaGFpbi5NYWlubmV0LFxuICAgICAgYXBpS2V5OiBPUEVOU0VBX0FQSV9LRVksXG4gICAgfSxcbiAgICAobGluZSkgPT4gY29uc29sZS5pbmZvKGBNQUlOTkVUOiAke2xpbmV9YCksXG4gICk7XG5cbiAgY29uc3QgYWNjb3VudEFkZHJlc3MgPSBcIjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZEVhRFwiO1xuXG4gIHRlc3QoXCJSZXR1cm5zIGJhbGFuY2UgZm9yIEVSQzIwXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBhc3NldCA9IHtcbiAgICAgIHRva2VuU3RhbmRhcmQ6IFRva2VuU3RhbmRhcmQuRVJDMjAsXG4gICAgICAvLyBXRVRIXG4gICAgICB0b2tlbkFkZHJlc3M6IFwiMHhjMDJhYWEzOWIyMjNmZThkMGEwZTVjNGYyN2VhZDkwODNjNzU2Y2MyXCIsXG4gICAgICB0b2tlbklkOiBudWxsLFxuICAgIH07XG4gICAgY29uc3QgYmFsYW5jZSA9IGF3YWl0IGNsaWVudC5nZXRCYWxhbmNlKHsgYWNjb3VudEFkZHJlc3MsIGFzc2V0IH0pO1xuICAgIGFzc2VydChiYWxhbmNlID4gZXRoZXJzLnBhcnNlRXRoZXIoXCIwLjA1XCIpKTtcbiAgfSk7XG5cbiAgdGVzdChcIlJldHVybnMgYmFsYW5jZSBmb3IgRVJDNzIxXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBhc3NldCA9IHtcbiAgICAgIHRva2VuU3RhbmRhcmQ6IFRva2VuU3RhbmRhcmQuRVJDNzIxLFxuICAgICAgdG9rZW5BZGRyZXNzOiBcIjB4MGNkZDNjYjNiY2Q5NjljMmIzODk0ODhiNTFmYjA5M2NjMGQ3MDNiMVwiLFxuICAgICAgdG9rZW5JZDogXCIxODNcIixcbiAgICB9O1xuICAgIGNvbnN0IGJhbGFuY2UgPSBhd2FpdCBjbGllbnQuZ2V0QmFsYW5jZSh7IGFjY291bnRBZGRyZXNzLCBhc3NldCB9KTtcbiAgICBhc3NlcnQoYmFsYW5jZSA9PT0gMW4pO1xuICB9KTtcblxuICB0ZXN0KFwiUmV0dXJucyBiYWxhbmNlIGZvciBFUkMxMTU1XCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBhc3NldCA9IHtcbiAgICAgIHRva2VuU3RhbmRhcmQ6IFRva2VuU3RhbmRhcmQuRVJDMTE1NSxcbiAgICAgIHRva2VuQWRkcmVzczogXCIweDFlMTk2Yjc4NzNiODQ1NjQzNzMwOWJhM2ZhNzQ4ZmE2ZjE2MDJkYThcIixcbiAgICAgIHRva2VuSWQ6IFwiMjFcIixcbiAgICB9O1xuICAgIGNvbnN0IGJhbGFuY2UgPSBhd2FpdCBjbGllbnQuZ2V0QmFsYW5jZSh7IGFjY291bnRBZGRyZXNzLCBhc3NldCB9KTtcbiAgICBhc3NlcnQoYmFsYW5jZSA+PSAybik7XG4gIH0pO1xufSk7XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfaTYyOTVyeGlnIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiY2hhaV8xIiwicmVxdWlyZSIsImV0aGVyc18xIiwibW9jaGFfMSIsImluZGV4XzEiLCJ0eXBlc18xIiwiY29uc3RhbnRzXzEiLCJzdWl0ZSIsImYiLCJjbGllbnQiLCJPcGVuU2VhU0RLIiwiUlBDX1BST1ZJREVSX01BSU5ORVQiLCJjaGFpbiIsIkNoYWluIiwiTWFpbm5ldCIsImFwaUtleSIsIk9QRU5TRUFfQVBJX0tFWSIsImxpbmUiLCJjb25zb2xlIiwiaW5mbyIsImFjY291bnRBZGRyZXNzIiwidGVzdCIsImFzc2V0IiwidG9rZW5TdGFuZGFyZCIsIlRva2VuU3RhbmRhcmQiLCJFUkMyMCIsInRva2VuQWRkcmVzcyIsInRva2VuSWQiLCJiYWxhbmNlIiwiZ2V0QmFsYW5jZSIsImFzc2VydCIsImV0aGVycyIsInBhcnNlRXRoZXIiLCJFUkM3MjEiLCJFUkMxMTU1Il0sInNvdXJjZXMiOlsiL1VzZXJzL3JnL2Rldi9vcGVuc2VhLWpzL3Rlc3Qvc2RrL2dldEJhbGFuY2Uuc3BlYy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnQgfSBmcm9tIFwiY2hhaVwiO1xuaW1wb3J0IHsgZXRoZXJzIH0gZnJvbSBcImV0aGVyc1wiO1xuaW1wb3J0IHsgc3VpdGUsIHRlc3QgfSBmcm9tIFwibW9jaGFcIjtcbmltcG9ydCB7IE9wZW5TZWFTREsgfSBmcm9tIFwiLi4vLi4vc3JjL2luZGV4XCI7XG5pbXBvcnQgeyBDaGFpbiwgVG9rZW5TdGFuZGFyZCB9IGZyb20gXCIuLi8uLi9zcmMvdHlwZXNcIjtcbmltcG9ydCB7IE9QRU5TRUFfQVBJX0tFWSwgUlBDX1BST1ZJREVSX01BSU5ORVQgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzXCI7XG5cbnN1aXRlKFwiU0RLOiBnZXRCYWxhbmNlXCIsICgpID0+IHtcbiAgY29uc3QgY2xpZW50ID0gbmV3IE9wZW5TZWFTREsoXG4gICAgUlBDX1BST1ZJREVSX01BSU5ORVQsXG4gICAge1xuICAgICAgY2hhaW46IENoYWluLk1haW5uZXQsXG4gICAgICBhcGlLZXk6IE9QRU5TRUFfQVBJX0tFWSxcbiAgICB9LFxuICAgIChsaW5lKSA9PiBjb25zb2xlLmluZm8oYE1BSU5ORVQ6ICR7bGluZX1gKSxcbiAgKTtcblxuICBjb25zdCBhY2NvdW50QWRkcmVzcyA9IFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBkRWFEXCI7XG5cbiAgdGVzdChcIlJldHVybnMgYmFsYW5jZSBmb3IgRVJDMjBcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGFzc2V0ID0ge1xuICAgICAgdG9rZW5TdGFuZGFyZDogVG9rZW5TdGFuZGFyZC5FUkMyMCxcbiAgICAgIC8vIFdFVEhcbiAgICAgIHRva2VuQWRkcmVzczogXCIweGMwMmFhYTM5YjIyM2ZlOGQwYTBlNWM0ZjI3ZWFkOTA4M2M3NTZjYzJcIixcbiAgICAgIHRva2VuSWQ6IG51bGwsXG4gICAgfTtcbiAgICBjb25zdCBiYWxhbmNlID0gYXdhaXQgY2xpZW50LmdldEJhbGFuY2UoeyBhY2NvdW50QWRkcmVzcywgYXNzZXQgfSk7XG4gICAgYXNzZXJ0KGJhbGFuY2UgPiBldGhlcnMucGFyc2VFdGhlcihcIjAuMDVcIikpO1xuICB9KTtcblxuICB0ZXN0KFwiUmV0dXJucyBiYWxhbmNlIGZvciBFUkM3MjFcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGFzc2V0ID0ge1xuICAgICAgdG9rZW5TdGFuZGFyZDogVG9rZW5TdGFuZGFyZC5FUkM3MjEsXG4gICAgICB0b2tlbkFkZHJlc3M6IFwiMHgwY2RkM2NiM2JjZDk2OWMyYjM4OTQ4OGI1MWZiMDkzY2MwZDcwM2IxXCIsXG4gICAgICB0b2tlbklkOiBcIjE4M1wiLFxuICAgIH07XG4gICAgY29uc3QgYmFsYW5jZSA9IGF3YWl0IGNsaWVudC5nZXRCYWxhbmNlKHsgYWNjb3VudEFkZHJlc3MsIGFzc2V0IH0pO1xuICAgIGFzc2VydChiYWxhbmNlID09PSAxbik7XG4gIH0pO1xuXG4gIHRlc3QoXCJSZXR1cm5zIGJhbGFuY2UgZm9yIEVSQzExNTVcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGFzc2V0ID0ge1xuICAgICAgdG9rZW5TdGFuZGFyZDogVG9rZW5TdGFuZGFyZC5FUkMxMTU1LFxuICAgICAgdG9rZW5BZGRyZXNzOiBcIjB4MWUxOTZiNzg3M2I4NDU2NDM3MzA5YmEzZmE3NDhmYTZmMTYwMmRhOFwiLFxuICAgICAgdG9rZW5JZDogXCIyMVwiLFxuICAgIH07XG4gICAgY29uc3QgYmFsYW5jZSA9IGF3YWl0IGNsaWVudC5nZXRCYWxhbmNlKHsgYWNjb3VudEFkZHJlc3MsIGFzc2V0IH0pO1xuICAgIGFzc2VydChiYWxhbmNlID49IDJuKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6Iit4TEFvQkk7QUFBQUEsYUFBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxhQUFBLEdBQUFBLGFBQUEsR0FBQUUsQ0FBQSxNLHlEQXBCSixNQUFBQyxNQUFBLEVBQUFILGFBQUEsR0FBQUUsQ0FBQSxNQUFBRSxPQUFBLFVBQ0EsTUFBQUMsUUFBQSxFQUFBTCxhQUFBLEdBQUFFLENBQUEsTUFBQUUsT0FBQSxZQUNBLE1BQUFFLE9BQUEsRUFBQU4sYUFBQSxHQUFBRSxDQUFBLE1BQUFFLE9BQUEsV0FDQSxNQUFBRyxPQUFBLEVBQUFQLGFBQUEsR0FBQUUsQ0FBQSxNQUFBRSxPQUFBLHFCQUNBLE1BQUFJLE9BQUEsRUFBQVIsYUFBQSxHQUFBRSxDQUFBLE1BQUFFLE9BQUEscUJBQ0EsTUFBQUssV0FBQSxFQUFBVCxhQUFBLEdBQUFFLENBQUEsTUFBQUUsT0FBQSx3QkFBMkVKLGFBQUEsR0FBQUUsQ0FBQSxNQUUzRSxHQUFBSSxPQUFBLENBQUFJLEtBQUssRUFBQyxpQkFBaUIsQ0FBRSxJQUFLLENBQUFWLGFBQUEsR0FBQVcsQ0FBQSxNQUM1QixLQUFNLENBQUFDLE1BQU0sRUFBQVosYUFBQSxHQUFBRSxDQUFB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