"use strict";function cov_2bf678ld5g(){var path="/Users/rg/dev/opensea-js/test/integration/getCollection.spec.ts";var hash="0214f47f5661046f0a17337bd96fe804fce560eb";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/rg/dev/opensea-js/test/integration/getCollection.spec.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:15},end:{line:3,column:30}},"2":{start:{line:4,column:16},end:{line:4,column:32}},"3":{start:{line:5,column:16},end:{line:5,column:34}},"4":{start:{line:6,column:16},end:{line:6,column:46}},"5":{start:{line:7,column:16},end:{line:7,column:42}},"6":{start:{line:8,column:0},end:{line:38,column:3}},"7":{start:{line:9,column:4},end:{line:16,column:7}},"8":{start:{line:10,column:21},end:{line:10,column:36}},"9":{start:{line:11,column:27},end:{line:11,column:68}},"10":{start:{line:12,column:8},end:{line:12,column:72}},"11":{start:{line:13,column:8},end:{line:13,column:76}},"12":{start:{line:14,column:8},end:{line:14,column:90}},"13":{start:{line:15,column:8},end:{line:15,column:122}},"14":{start:{line:17,column:4},end:{line:29,column:7}},"15":{start:{line:18,column:25},end:{line:18,column:63}},"16":{start:{line:19,column:38},end:{line:19,column:46}},"17":{start:{line:20,column:8},end:{line:20,column:76}},"18":{start:{line:21,column:8},end:{line:21,column:80}},"19":{start:{line:22,column:8},end:{line:22,column:67}},"20":{start:{line:23,column:26},end:{line:23,column:106}},"21":{start:{line:24,column:79},end:{line:24,column:88}},"22":{start:{line:25,column:8},end:{line:25,column:87}},"23":{start:{line:26,column:8},end:{line:26,column:91}},"24":{start:{line:27,column:8},end:{line:27,column:78}},"25":{start:{line:28,column:8},end:{line:28,column:116}},"26":{start:{line:30,column:4},end:{line:37,column:7}},"27":{start:{line:31,column:21},end:{line:31,column:36}},"28":{start:{line:32,column:22},end:{line:32,column:68}},"29":{start:{line:33,column:8},end:{line:33,column:62}},"30":{start:{line:34,column:8},end:{line:34,column:76}},"31":{start:{line:35,column:8},end:{line:35,column:74}},"32":{start:{line:36,column:8},end:{line:36,column:70}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:41},end:{line:8,column:42}},loc:{start:{line:8,column:47},end:{line:38,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:49},end:{line:9,column:50}},loc:{start:{line:9,column:61},end:{line:16,column:5}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:41},end:{line:17,column:42}},loc:{start:{line:17,column:53},end:{line:29,column:5}},line:17},"3":{name:"(anonymous_3)",decl:{start:{line:30,column:46},end:{line:30,column:47}},loc:{start:{line:30,column:58},end:{line:37,column:5}},line:30}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},f:{"0":0,"1":0,"2":0,"3":0},b:{},inputSourceMap:{version:3,file:"/Users/rg/dev/opensea-js/test/integration/getCollection.spec.ts",sources:["/Users/rg/dev/opensea-js/test/integration/getCollection.spec.ts"],names:[],mappings:";;AAAA,+BAA8B;AAC9B,iCAAoC;AACpC,mCAA8B;AAC9B,+CAA8D;AAC9D,2CAAiD;AAEjD,IAAA,aAAK,EAAC,oBAAoB,EAAE,GAAG,EAAE;IAC/B,IAAA,YAAI,EAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,UAAU,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAErD,IAAA,aAAM,EAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;QACpD,IAAA,aAAM,EAAC,UAAU,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAC;QACxD,aAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,EAAE,+BAA+B,CAAC,CAAC;QAC3E,aAAM,CAAC,KAAK,CACV,UAAU,CAAC,cAAc,EACzB,sBAAc,CAAC,QAAQ,EACvB,gCAAgC,CACjC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;QAChD,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,QAAQ,CAAC;QACvC,IAAA,aAAM,EAAC,WAAW,CAAC,CAAC,CAAC,EAAE,+BAA+B,CAAC,CAAC;QACxD,IAAA,aAAM,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAC;QAC5D,IAAA,aAAM,EAAC,IAAI,EAAE,gCAAgC,CAAC,CAAC;QAE/C,MAAM,SAAS,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,cAAc,CAC5C,+BAAuB,CAAC,UAAU,CACnC,CAAC;QACF,MAAM,EAAE,WAAW,EAAE,sBAAsB,EAAE,IAAI,EAAE,eAAe,EAAE,GAClE,SAAS,CAAC;QACZ,IAAA,aAAM,EAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,+BAA+B,CAAC,CAAC;QACnE,IAAA,aAAM,EAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAC;QACvE,IAAA,aAAM,EAAC,eAAe,EAAE,gCAAgC,CAAC,CAAC;QAE1D,IAAA,aAAM,EACJ,sBAAsB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EACrD,gCAAgC,CACjC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,KAAK,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAErD,IAAA,aAAM,EAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QAC1C,IAAA,aAAM,EAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC;QACxD,IAAA,aAAM,EAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QACtD,IAAA,aAAM,EAAC,KAAK,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC",sourcesContent:["import { assert } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport { sdk } from \"./setup\";\nimport { CollectionOrderByOption } from \"../../src/api/types\";\nimport { SafelistStatus } from \"../../src/types\";\n\nsuite(\"SDK: getCollection\", () => {\n  test(\"Get Verified Collection\", async () => {\n    const slug = \"cool-cats-nft\";\n    const collection = await sdk.api.getCollection(slug);\n\n    assert(collection, \"Collection should not be null\");\n    assert(collection.name, \"Collection name should exist\");\n    assert.equal(collection.collection, slug, \"Collection slug should match.\");\n    assert.equal(\n      collection.safelistStatus,\n      SafelistStatus.VERIFIED,\n      \"Collection should be verified.\",\n    );\n  });\n\n  test(\"Get Collections\", async () => {\n    const response = await sdk.api.getCollections();\n    const { collections, next } = response;\n    assert(collections[0], \"Collection should not be null\");\n    assert(collections[0].name, \"Collection name should exist\");\n    assert(next, \"Next cursor should be included\");\n\n    const response2 = await sdk.api.getCollections(\n      CollectionOrderByOption.MARKET_CAP,\n    );\n    const { collections: collectionsByMarketCap, next: nextByMarketCap } =\n      response2;\n    assert(collectionsByMarketCap[0], \"Collection should not be null\");\n    assert(collectionsByMarketCap[0].name, \"Collection name should exist\");\n    assert(nextByMarketCap, \"Next cursor should be included\");\n\n    assert(\n      collectionsByMarketCap[0].name != collections[0].name,\n      \"Collection order should differ\",\n    );\n  });\n\n  test(\"Get Collection Stats\", async () => {\n    const slug = \"cool-cats-nft\";\n    const stats = await sdk.api.getCollectionStats(slug);\n\n    assert(stats, \"Stats should not be null\");\n    assert(stats.total.volume, \"Volume should not be null\");\n    assert(stats.total.sales, \"Sales should not be null\");\n    assert(stats.intervals, \"Intervals should exist\");\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0214f47f5661046f0a17337bd96fe804fce560eb"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2bf678ld5g=function(){return actualCoverage;};}return actualCoverage;}cov_2bf678ld5g();cov_2bf678ld5g().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const chai_1=(cov_2bf678ld5g().s[1]++,require("chai"));const mocha_1=(cov_2bf678ld5g().s[2]++,require("mocha"));const setup_1=(cov_2bf678ld5g().s[3]++,require("./setup"));const types_1=(cov_2bf678ld5g().s[4]++,require("../../src/api/types"));const types_2=(cov_2bf678ld5g().s[5]++,require("../../src/types"));cov_2bf678ld5g().s[6]++;(0,mocha_1.suite)("SDK: getCollection",()=>{cov_2bf678ld5g().f[0]++;cov_2bf678ld5g().s[7]++;(0,mocha_1.test)("Get Verified Collection",async()=>{cov_2bf678ld5g().f[1]++;const slug=(cov_2bf678ld5g().s[8]++,"cool-cats-nft");const collection=(cov_2bf678ld5g().s[9]++,await setup_1.sdk.api.getCollection(slug));cov_2bf678ld5g().s[10]++;(0,chai_1.assert)(collection,"Collection should not be null");cov_2bf678ld5g().s[11]++;(0,chai_1.assert)(collection.name,"Collection name should exist");cov_2bf678ld5g().s[12]++;chai_1.assert.equal(collection.collection,slug,"Collection slug should match.");cov_2bf678ld5g().s[13]++;chai_1.assert.equal(collection.safelistStatus,types_2.SafelistStatus.VERIFIED,"Collection should be verified.");});cov_2bf678ld5g().s[14]++;(0,mocha_1.test)("Get Collections",async()=>{cov_2bf678ld5g().f[2]++;const response=(cov_2bf678ld5g().s[15]++,await setup_1.sdk.api.getCollections());const{collections,next}=(cov_2bf678ld5g().s[16]++,response);cov_2bf678ld5g().s[17]++;(0,chai_1.assert)(collections[0],"Collection should not be null");cov_2bf678ld5g().s[18]++;(0,chai_1.assert)(collections[0].name,"Collection name should exist");cov_2bf678ld5g().s[19]++;(0,chai_1.assert)(next,"Next cursor should be included");const response2=(cov_2bf678ld5g().s[20]++,await setup_1.sdk.api.getCollections(types_1.CollectionOrderByOption.MARKET_CAP));const{collections:collectionsByMarketCap,next:nextByMarketCap}=(cov_2bf678ld5g().s[21]++,response2);cov_2bf678ld5g().s[22]++;(0,chai_1.assert)(collectionsByMarketCap[0],"Collection should not be null");cov_2bf678ld5g().s[23]++;(0,chai_1.assert)(collectionsByMarketCap[0].name,"Collection name should exist");cov_2bf678ld5g().s[24]++;(0,chai_1.assert)(nextByMarketCap,"Next cursor should be included");cov_2bf678ld5g().s[25]++;(0,chai_1.assert)(collectionsByMarketCap[0].name!=collections[0].name,"Collection order should differ");});cov_2bf678ld5g().s[26]++;(0,mocha_1.test)("Get Collection Stats",async()=>{cov_2bf678ld5g().f[3]++;const slug=(cov_2bf678ld5g().s[27]++,"cool-cats-nft");const stats=(cov_2bf678ld5g().s[28]++,await setup_1.sdk.api.getCollectionStats(slug));cov_2bf678ld5g().s[29]++;(0,chai_1.assert)(stats,"Stats should not be null");cov_2bf678ld5g().s[30]++;(0,chai_1.assert)(stats.total.volume,"Volume should not be null");cov_2bf678ld5g().s[31]++;(0,chai_1.assert)(stats.total.sales,"Sales should not be null");cov_2bf678ld5g().s[32]++;(0,chai_1.assert)(stats.intervals,"Intervals should exist");});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3JnL2Rldi9vcGVuc2VhLWpzL3Rlc3QvaW50ZWdyYXRpb24vZ2V0Q29sbGVjdGlvbi5zcGVjLnRzIiwic291cmNlcyI6WyIvVXNlcnMvcmcvZGV2L29wZW5zZWEtanMvdGVzdC9pbnRlZ3JhdGlvbi9nZXRDb2xsZWN0aW9uLnNwZWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBOEI7QUFDOUIsaUNBQW9DO0FBQ3BDLG1DQUE4QjtBQUM5QiwrQ0FBOEQ7QUFDOUQsMkNBQWlEO0FBRWpELElBQUEsYUFBSyxFQUFDLG9CQUFvQixFQUFFLEdBQUcsRUFBRTtJQUMvQixJQUFBLFlBQUksRUFBQyx5QkFBeUIsRUFBRSxLQUFLLElBQUksRUFBRTtRQUN6QyxNQUFNLElBQUksR0FBRyxlQUFlLENBQUM7UUFDN0IsTUFBTSxVQUFVLEdBQUcsTUFBTSxXQUFHLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVyRCxJQUFBLGFBQU0sRUFBQyxVQUFVLEVBQUUsK0JBQStCLENBQUMsQ0FBQztRQUNwRCxJQUFBLGFBQU0sRUFBQyxVQUFVLENBQUMsSUFBSSxFQUFFLDhCQUE4QixDQUFDLENBQUM7UUFDeEQsYUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSwrQkFBK0IsQ0FBQyxDQUFDO1FBQzNFLGFBQU0sQ0FBQyxLQUFLLENBQ1YsVUFBVSxDQUFDLGNBQWMsRUFDekIsc0JBQWMsQ0FBQyxRQUFRLEVBQ3ZCLGdDQUFnQyxDQUNqQyxDQUFDO0lBQ0osQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFBLFlBQUksRUFBQyxpQkFBaUIsRUFBRSxLQUFLLElBQUksRUFBRTtRQUNqQyxNQUFNLFFBQVEsR0FBRyxNQUFNLFdBQUcsQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDaEQsTUFBTSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsR0FBRyxRQUFRLENBQUM7UUFDdkMsSUFBQSxhQUFNLEVBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFFLCtCQUErQixDQUFDLENBQUM7UUFDeEQsSUFBQSxhQUFNLEVBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSw4QkFBOEIsQ0FBQyxDQUFDO1FBQzVELElBQUEsYUFBTSxFQUFDLElBQUksRUFBRSxnQ0FBZ0MsQ0FBQyxDQUFDO1FBRS9DLE1BQU0sU0FBUyxHQUFHLE1BQU0sV0FBRyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQzVDLCtCQUF1QixDQUFDLFVBQVUsQ0FDbkMsQ0FBQztRQUNGLE1BQU0sRUFBRSxXQUFXLEVBQUUsc0JBQXNCLEVBQUUsSUFBSSxFQUFFLGVBQWUsRUFBRSxHQUNsRSxTQUFTLENBQUM7UUFDWixJQUFBLGFBQU0sRUFBQyxzQkFBc0IsQ0FBQyxDQUFDLENBQUMsRUFBRSwrQkFBK0IsQ0FBQyxDQUFDO1FBQ25FLElBQUEsYUFBTSxFQUFDLHNCQUFzQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSw4QkFBOEIsQ0FBQyxDQUFDO1FBQ3ZFLElBQUEsYUFBTSxFQUFDLGVBQWUsRUFBRSxnQ0FBZ0MsQ0FBQyxDQUFDO1FBRTFELElBQUEsYUFBTSxFQUNKLHNCQUFzQixDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUNyRCxnQ0FBZ0MsQ0FDakMsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBQSxZQUFJLEVBQUMsc0JBQXNCLEVBQUUsS0FBSyxJQUFJLEVBQUU7UUFDdEMsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDO1FBQzdCLE1BQU0sS0FBSyxHQUFHLE1BQU0sV0FBRyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVyRCxJQUFBLGFBQU0sRUFBQyxLQUFLLEVBQUUsMEJBQTBCLENBQUMsQ0FBQztRQUMxQyxJQUFBLGFBQU0sRUFBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSwyQkFBMkIsQ0FBQyxDQUFDO1FBQ3hELElBQUEsYUFBTSxFQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLDBCQUEwQixDQUFDLENBQUM7UUFDdEQsSUFBQSxhQUFNLEVBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSx3QkFBd0IsQ0FBQyxDQUFDO0lBQ3BELENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnQgfSBmcm9tIFwiY2hhaVwiO1xuaW1wb3J0IHsgc3VpdGUsIHRlc3QgfSBmcm9tIFwibW9jaGFcIjtcbmltcG9ydCB7IHNkayB9IGZyb20gXCIuL3NldHVwXCI7XG5pbXBvcnQgeyBDb2xsZWN0aW9uT3JkZXJCeU9wdGlvbiB9IGZyb20gXCIuLi8uLi9zcmMvYXBpL3R5cGVzXCI7XG5pbXBvcnQgeyBTYWZlbGlzdFN0YXR1cyB9IGZyb20gXCIuLi8uLi9zcmMvdHlwZXNcIjtcblxuc3VpdGUoXCJTREs6IGdldENvbGxlY3Rpb25cIiwgKCkgPT4ge1xuICB0ZXN0KFwiR2V0IFZlcmlmaWVkIENvbGxlY3Rpb25cIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHNsdWcgPSBcImNvb2wtY2F0cy1uZnRcIjtcbiAgICBjb25zdCBjb2xsZWN0aW9uID0gYXdhaXQgc2RrLmFwaS5nZXRDb2xsZWN0aW9uKHNsdWcpO1xuXG4gICAgYXNzZXJ0KGNvbGxlY3Rpb24sIFwiQ29sbGVjdGlvbiBzaG91bGQgbm90IGJlIG51bGxcIik7XG4gICAgYXNzZXJ0KGNvbGxlY3Rpb24ubmFtZSwgXCJDb2xsZWN0aW9uIG5hbWUgc2hvdWxkIGV4aXN0XCIpO1xuICAgIGFzc2VydC5lcXVhbChjb2xsZWN0aW9uLmNvbGxlY3Rpb24sIHNsdWcsIFwiQ29sbGVjdGlvbiBzbHVnIHNob3VsZCBtYXRjaC5cIik7XG4gICAgYXNzZXJ0LmVxdWFsKFxuICAgICAgY29sbGVjdGlvbi5zYWZlbGlzdFN0YXR1cyxcbiAgICAgIFNhZmVsaXN0U3RhdHVzLlZFUklGSUVELFxuICAgICAgXCJDb2xsZWN0aW9uIHNob3VsZCBiZSB2ZXJpZmllZC5cIixcbiAgICApO1xuICB9KTtcblxuICB0ZXN0KFwiR2V0IENvbGxlY3Rpb25zXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHNkay5hcGkuZ2V0Q29sbGVjdGlvbnMoKTtcbiAgICBjb25zdCB7IGNvbGxlY3Rpb25zLCBuZXh0IH0gPSByZXNwb25zZTtcbiAgICBhc3NlcnQoY29sbGVjdGlvbnNbMF0sIFwiQ29sbGVjdGlvbiBzaG91bGQgbm90IGJlIG51bGxcIik7XG4gICAgYXNzZXJ0KGNvbGxlY3Rpb25zWzBdLm5hbWUsIFwiQ29sbGVjdGlvbiBuYW1lIHNob3VsZCBleGlzdFwiKTtcbiAgICBhc3NlcnQobmV4dCwgXCJOZXh0IGN1cnNvciBzaG91bGQgYmUgaW5jbHVkZWRcIik7XG5cbiAgICBjb25zdCByZXNwb25zZTIgPSBhd2FpdCBzZGsuYXBpLmdldENvbGxlY3Rpb25zKFxuICAgICAgQ29sbGVjdGlvbk9yZGVyQnlPcHRpb24uTUFSS0VUX0NBUCxcbiAgICApO1xuICAgIGNvbnN0IHsgY29sbGVjdGlvbnM6IGNvbGxlY3Rpb25zQnlNYXJrZXRDYXAsIG5leHQ6IG5leHRCeU1hcmtldENhcCB9ID1cbiAgICAgIHJlc3BvbnNlMjtcbiAgICBhc3NlcnQoY29sbGVjdGlvbnNCeU1hcmtldENhcFswXSwgXCJDb2xsZWN0aW9uIHNob3VsZCBub3QgYmUgbnVsbFwiKTtcbiAgICBhc3NlcnQoY29sbGVjdGlvbnNCeU1hcmtldENhcFswXS5uYW1lLCBcIkNvbGxlY3Rpb24gbmFtZSBzaG91bGQgZXhpc3RcIik7XG4gICAgYXNzZXJ0KG5leHRCeU1hcmtldENhcCwgXCJOZXh0IGN1cnNvciBzaG91bGQgYmUgaW5jbHVkZWRcIik7XG5cbiAgICBhc3NlcnQoXG4gICAgICBjb2xsZWN0aW9uc0J5TWFya2V0Q2FwWzBdLm5hbWUgIT0gY29sbGVjdGlvbnNbMF0ubmFtZSxcbiAgICAgIFwiQ29sbGVjdGlvbiBvcmRlciBzaG91bGQgZGlmZmVyXCIsXG4gICAgKTtcbiAgfSk7XG5cbiAgdGVzdChcIkdldCBDb2xsZWN0aW9uIFN0YXRzXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBzbHVnID0gXCJjb29sLWNhdHMtbmZ0XCI7XG4gICAgY29uc3Qgc3RhdHMgPSBhd2FpdCBzZGsuYXBpLmdldENvbGxlY3Rpb25TdGF0cyhzbHVnKTtcblxuICAgIGFzc2VydChzdGF0cywgXCJTdGF0cyBzaG91bGQgbm90IGJlIG51bGxcIik7XG4gICAgYXNzZXJ0KHN0YXRzLnRvdGFsLnZvbHVtZSwgXCJWb2x1bWUgc2hvdWxkIG5vdCBiZSBudWxsXCIpO1xuICAgIGFzc2VydChzdGF0cy50b3RhbC5zYWxlcywgXCJTYWxlcyBzaG91bGQgbm90IGJlIG51bGxcIik7XG4gICAgYXNzZXJ0KHN0YXRzLmludGVydmFscywgXCJJbnRlcnZhbHMgc2hvdWxkIGV4aXN0XCIpO1xuICB9KTtcbn0pO1xuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmJmNjc4bGQ1ZyIsImFjdHVhbENvdmVyYWdlIiwicyIsImNoYWlfMSIsInJlcXVpcmUiLCJtb2NoYV8xIiwic2V0dXBfMSIsInR5cGVzXzEiLCJ0eXBlc18yIiwic3VpdGUiLCJmIiwidGVzdCIsInNsdWciLCJjb2xsZWN0aW9uIiwic2RrIiwiYXBpIiwiZ2V0Q29sbGVjdGlvbiIsImFzc2VydCIsIm5hbWUiLCJlcXVhbCIsInNhZmVsaXN0U3RhdHVzIiwiU2FmZWxpc3RTdGF0dXMiLCJWRVJJRklFRCIsInJlc3BvbnNlIiwiZ2V0Q29sbGVjdGlvbnMiLCJjb2xsZWN0aW9ucyIsIm5leHQiLCJyZXNwb25zZTIiLCJDb2xsZWN0aW9uT3JkZXJCeU9wdGlvbiIsIk1BUktFVF9DQVAiLCJjb2xsZWN0aW9uc0J5TWFya2V0Q2FwIiwibmV4dEJ5TWFya2V0Q2FwIiwic3RhdHMiLCJnZXRDb2xsZWN0aW9uU3RhdHMiLCJ0b3RhbCIsInZvbHVtZSIsInNhbGVzIiwiaW50ZXJ2YWxzIl0sInNvdXJjZXMiOlsiL1VzZXJzL3JnL2Rldi9vcGVuc2VhLWpzL3Rlc3QvaW50ZWdyYXRpb24vZ2V0Q29sbGVjdGlvbi5zcGVjLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydCB9IGZyb20gXCJjaGFpXCI7XG5pbXBvcnQgeyBzdWl0ZSwgdGVzdCB9IGZyb20gXCJtb2NoYVwiO1xuaW1wb3J0IHsgc2RrIH0gZnJvbSBcIi4vc2V0dXBcIjtcbmltcG9ydCB7IENvbGxlY3Rpb25PcmRlckJ5T3B0aW9uIH0gZnJvbSBcIi4uLy4uL3NyYy9hcGkvdHlwZXNcIjtcbmltcG9ydCB7IFNhZmVsaXN0U3RhdHVzIH0gZnJvbSBcIi4uLy4uL3NyYy90eXBlc1wiO1xuXG5zdWl0ZShcIlNESzogZ2V0Q29sbGVjdGlvblwiLCAoKSA9PiB7XG4gIHRlc3QoXCJHZXQgVmVyaWZpZWQgQ29sbGVjdGlvblwiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3Qgc2x1ZyA9IFwiY29vbC1jYXRzLW5mdFwiO1xuICAgIGNvbnN0IGNvbGxlY3Rpb24gPSBhd2FpdCBzZGsuYXBpLmdldENvbGxlY3Rpb24oc2x1Zyk7XG5cbiAgICBhc3NlcnQoY29sbGVjdGlvbiwgXCJDb2xsZWN0aW9uIHNob3VsZCBub3QgYmUgbnVsbFwiKTtcbiAgICBhc3NlcnQoY29sbGVjdGlvbi5uYW1lLCBcIkNvbGxlY3Rpb24gbmFtZSBzaG91bGQgZXhpc3RcIik7XG4gICAgYXNzZXJ0LmVxdWFsKGNvbGxlY3Rpb24uY29sbGVjdGlvbiwgc2x1ZywgXCJDb2xsZWN0aW9uIHNsdWcgc2hvdWxkIG1hdGNoLlwiKTtcbiAgICBhc3NlcnQuZXF1YWwoXG4gICAgICBjb2xsZWN0aW9uLnNhZmVsaXN0U3RhdHVzLFxuICAgICAgU2FmZWxpc3RTdGF0dXMuVkVSSUZJRUQsXG4gICAgICBcIkNvbGxlY3Rpb24gc2hvdWxkIGJlIHZlcmlmaWVkLlwiLFxuICAgICk7XG4gIH0pO1xuXG4gIHRlc3QoXCJHZXQgQ29sbGVjdGlvbnNcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgc2RrLmFwaS5nZXRDb2xsZWN0aW9ucygpO1xuICAgIGNvbnN0IHsgY29sbGVjdGlvbnMsIG5leHQgfSA9IHJlc3BvbnNlO1xuICAgIGFzc2VydChjb2xsZWN0aW9uc1swXSwgXCJDb2xsZWN0aW9uIHNob3VsZCBub3QgYmUgbnVsbFwiKTtcbiAgICBhc3NlcnQoY29sbGVjdGlvbnNbMF0ubmFtZSwgXCJDb2xsZWN0aW9uIG5hbWUgc2hvdWxkIGV4aXN0XCIpO1xuICAgIGFzc2VydChuZXh0LCBcIk5leHQgY3Vyc29yIHNob3VsZCBiZSBpbmNsdWRlZFwiKTtcblxuICAgIGNvbnN0IHJlc3BvbnNlMiA9IGF3YWl0IHNkay5hcGkuZ2V0Q29sbGVjdGlvbnMoXG4gICAgICBDb2xsZWN0aW9uT3JkZXJCeU9wdGlvbi5NQVJLRVRfQ0FQLFxuICAgICk7XG4gICAgY29uc3QgeyBjb2xsZWN0aW9uczogY29sbGVjdGlvbnNCeU1hcmtldENhcCwgbmV4dDogbmV4dEJ5TWFya2V0Q2FwIH0gPVxuICAgICAgcmVzcG9uc2UyO1xuICAgIGFzc2VydChjb2xsZWN0aW9uc0J5TWFya2V0Q2FwWzBdLCBcIkNvbGxlY3Rpb24gc2hvdWxkIG5vdCBiZSBudWxsXCIpO1xuICAgIGFzc2VydChjb2xsZWN0aW9uc0J5TWFya2V0Q2FwWzBdLm5hbWUsIFwiQ29sbGVjdGlvbiBuYW1lIHNob3VsZCBleGlzdFwiKTtcbiAgICBhc3NlcnQobmV4dEJ5TWFya2V0Q2FwLCBcIk5leHQgY3Vyc29yIHNob3VsZCBiZSBpbmNsdWRlZFwiKTtcblxuICAgIGFzc2VydChcbiAgICAgIGNvbGxlY3Rpb25zQnlNYXJrZXRDYXBbMF0ubmFtZSAhPSBjb2xsZWN0aW9uc1swXS5uYW1lLFxuICAgICAgXCJDb2xsZWN0aW9uIG9yZGVyIHNob3VsZCBkaWZmZXJcIixcbiAgICApO1xuICB9KTtcblxuICB0ZXN0KFwiR2V0IENvbGxlY3Rpb24gU3RhdHNcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHNsdWcgPSBcImNvb2wtY2F0cy1uZnRcIjtcbiAgICBjb25zdCBzdGF0cyA9IGF3YWl0IHNkay5hcGkuZ2V0Q29sbGVjdGlvblN0YXRzKHNsdWcpO1xuXG4gICAgYXNzZXJ0KHN0YXRzLCBcIlN0YXRzIHNob3VsZCBub3QgYmUgbnVsbFwiKTtcbiAgICBhc3NlcnQoc3RhdHMudG90YWwudm9sdW1lLCBcIlZvbHVtZSBzaG91bGQgbm90IGJlIG51bGxcIik7XG4gICAgYXNzZXJ0KHN0YXRzLnRvdGFsLnNhbGVzLCBcIlNhbGVzIHNob3VsZCBub3QgYmUgbnVsbFwiKTtcbiAgICBhc3NlcnQoc3RhdHMuaW50ZXJ2YWxzLCBcIkludGVydmFscyBzaG91bGQgZXhpc3RcIik7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiJ3ck9BbUJLO0FBQUFBLGNBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsY0FBQSxHQUFBQSxjQUFBLEdBQUFFLENBQUEsTSx5REFuQkwsTUFBQUMsTUFBQSxFQUFBSCxjQUFBLEdBQUFFLENBQUEsTUFBQUUsT0FBQSxVQUNBLE1BQUFDLE9BQUEsRUFBQUwsY0FBQSxHQUFBRSxDQUFBLE1BQUFFLE9BQUEsV0FDQSxNQUFBRSxPQUFBLEVBQUFOLGNBQUEsR0FBQUUsQ0FBQSxNQUFBRSxPQUFBLGFBQ0EsTUFBQUcsT0FBQSxFQUFBUCxjQUFBLEdBQUFFLENBQUEsTUFBQUUsT0FBQSx5QkFDQSxNQUFBSSxPQUFBLEVBQUFSLGNBQUEsR0FBQUUsQ0FBQSxNQUFBRSxPQUFBLHFCQUFpREosY0FBQSxHQUFBRSxDQUFBLE1BRWpELEdBQUFHLE9BQUEsQ0FBQUksS0FBSyxFQUFDLG9CQUFvQixDQUFFLElBQUssQ0FBQVQsY0FBQSxHQUFBVSxDQUFBLE1BQUFWLGNBQUEsR0FBQUUsQ0FBQSxNQUMvQixHQUFBRyxPQUFBLENBQUFNLElBQUksRUFBQyx5QkFBeUIsQ0FBRSxTQUFXLENBQUFYLGNBQUEsR0FBQVUsQ0FBQSxNQUN6QyxLQUFNLENBQUFFLElBQUksRUFBQVosY0FBQSxHQUFBRSxDQUFBLE1BQUcsZUFBZSxFQUM1QixLQUFNLENBQUFXLFVBQVUsRUFBQWIsY0FBQSxHQUFBRSxDQUFBLE1BQUcsS0FBTSxDQUFBSSxPQUFBLENBQUFRLEdBQUcsQ0FBQ0MsR0FBRyxDQUFDQyxhQUFhLENBQUNKLElBQUksQ0FBQyxFQUFDWixjQUFBLEdBQUFFLENBQUEsT0FFckQsR0FBQUMsTUFBQSxDQUFBYyxNQUFNLEVBQUNKLFVBQVUsQ0FBRSwrQkFBK0IsQ0FBQyxDQUFDYixjQUFBLEdBQUFFLENBQUEsT0FDcEQsR0FBQUMsTUFBQSxDQUFBYyxNQUFNLEVBQUNKLFVBQVUsQ0FBQ0ssSUFBSSxDQUFFLDhCQUE4QixDQUFDLENBQUNsQixjQUFBLEdBQUFFLENBQUEsT0FDeERDLE1BQUEsQ0FBQWMsTUFBTSxDQUFDRSxLQUFLLENBQUNOLFVBQVUsQ0FBQ0EsVUFBVSxDQUFFRCxJQUFJLENBQUUsK0JBQStCLENBQUMsQ0FBQ1osY0FBQSxHQUFBRSxDQUFBLE9BQzNFQyxNQUFBLENBQUFjLE1BQU0sQ0FBQ0UsS0FBSyxDQUNWTixVQUFVLENBQUNPLGNBQWMsQ0FDekJaLE9BQUEsQ0FBQWEsY0FBYyxDQUFDQyxRQUFRLENBQ3ZCLGdDQUFnQyxDQUNqQyxDQUNILENBQUMsQ0FBQyxDQUFDdEIsY0FBQSxHQUFBRSxDQUFBLE9BRUgsR0FBQUcsT0FBQSxDQUFBTSxJQUFJLEVBQUMsaUJBQWlCLENBQUUsU0FBVyxDQUFBWCxjQUFBLEdBQUFVLENBQUEsTUFDakMsS0FBTSxDQUFBYSxRQUFRLEVBQUF2QixjQUFBLEdBQUFFLENBQUEsT0FBRyxLQUFNLENBQUFJLE9BQUEsQ0FBQVEsR0FBRyxDQUFDQyxHQUFHLENBQUNTLGNBQWMsRUFBRSxFQUMvQyxLQUFNLENBQUVDLFdBQVcsQ0FBRUMsSUFBSSxDQUFFLEVBQUExQixjQUFBLEdBQUFFLENBQUEsT0FBR3FCLFFBQVEsRUFBQ3ZCLGNBQUEsR0FBQUUsQ0FBQSxPQUN2QyxHQUFBQyxNQUFBLENBQUFjLE1BQU0sRUFBQ1EsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFFLCtCQUErQixDQUFDLENBQUN6QixjQUFBLEdBQUFFLENBQUEsT0FDeEQsR0FBQUMsTUFBQSxDQUFBYyxNQUFNLEVBQUNRLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQ1AsSUFBSSxDQUFFLDhCQUE4QixDQUFDLENBQUNsQixjQUFBLEdBQUFFLENBQUEsT0FDNUQsR0FBQUMsTUFBQSxDQUFBYyxNQUFNLEVBQUNTLElBQUksQ0FBRSxnQ0FBZ0MsQ0FBQyxDQUU5QyxLQUFNLENBQUFDLFNBQVMsRUFBQTNCLGNBQUEsR0FBQUUsQ0FBQSxPQUFHLEtBQU0sQ0FBQUksT0FBQSxDQUFBUSxHQUFHLENBQUNDLEdBQUcsQ0FBQ1MsY0FBYyxDQUM1Q2pCLE9BQUEsQ0FBQXFCLHVCQUF1QixDQUFDQyxVQUFVLENBQ25DLEVBQ0QsS0FBTSxDQUFFSixXQUFXLENBQUVLLHNCQUFzQixDQUFFSixJQUFJLENBQUVLLGVBQWUsQ0FBRSxFQUFBL0IsY0FBQSxHQUFBRSxDQUFBLE9BQ2xFeUIsU0FBUyxFQUFDM0IsY0FBQSxHQUFBRSxDQUFBLE9BQ1osR0FBQUMsTUFBQSxDQUFBYyxNQUFNLEVBQUNhLHNCQUFzQixDQUFDLENBQUMsQ0FBQyxDQUFFLCtCQUErQixDQUFDLENBQUM5QixjQUFBLEdBQUFFLENBQUEsT0FDbkUsR0FBQUMsTUFBQSxDQUFBYyxNQUFNLEVBQUNhLHNCQUFzQixDQUFDLENBQUMsQ0FBQyxDQUFDWixJQUFJLENBQUUsOEJBQThCLENBQUMsQ0FBQ2xCLGNBQUEsR0FBQUUsQ0FBQSxPQUN2RSxHQUFBQyxNQUFBLENBQUFjLE1BQU0sRUFBQ2MsZUFBZSxDQUFFLGdDQUFnQyxDQUFDLENBQUMvQixjQUFBLEdBQUFFLENBQUEsT0FFMUQsR0FBQUMsTUFBQSxDQUFBYyxNQUFNLEVBQ0phLHNCQUFzQixDQUFDLENBQUMsQ0FBQyxDQUFDWixJQUFJLEVBQUlPLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQ1AsSUFBSSxDQUNyRCxnQ0FBZ0MsQ0FDakMsQ0FDSCxDQUFDLENBQUMsQ0FBQ2xCLGNBQUEsR0FBQUUsQ0FBQSxPQUVILEdBQUFHLE9BQUEsQ0FBQU0sSUFBSSxFQUFDLHNCQUFzQixDQUFFLFNBQVcsQ0FBQVgsY0FBQSxHQUFBVSxDQUFBLE1BQ3RDLEtBQU0sQ0FBQUUsSUFBSSxFQUFBWixjQUFBLEdBQUFFLENBQUEsT0FBRyxlQUFlLEVBQzVCLEtBQU0sQ0FBQThCLEtBQUssRUFBQWhDLGNBQUEsR0FBQUUsQ0FBQSxPQUFHLEtBQU0sQ0FBQUksT0FBQSxDQUFBUSxHQUFHLENBQUNDLEdBQUcsQ0FBQ2tCLGtCQUFrQixDQUFDckIsSUFBSSxDQUFDLEVBQUNaLGNBQUEsR0FBQUUsQ0FBQSxPQUVyRCxHQUFBQyxNQUFBLENBQUFjLE1BQU0sRUFBQ2UsS0FBSyxDQUFFLDBCQUEwQixDQUFDLENBQUNoQyxjQUFBLEdBQUFFLENBQUEsT0FDMUMsR0FBQUMsTUFBQSxDQUFBYyxNQUFNLEVBQUNlLEtBQUssQ0FBQ0UsS0FBSyxDQUFDQyxNQUFNLENBQUUsMkJBQTJCLENBQUMsQ0FBQ25DLGNBQUEsR0FBQUUsQ0FBQSxPQUN4RCxHQUFBQyxNQUFBLENBQUFjLE1BQU0sRUFBQ2UsS0FBSyxDQUFDRSxLQUFLLENBQUNFLEtBQUssQ0FBRSwwQkFBMEIsQ0FBQyxDQUFDcEMsY0FBQSxHQUFBRSxDQUFBLE9BQ3RELEdBQUFDLE1BQUEsQ0FBQWMsTUFBTSxFQUFDZSxLQUFLLENBQUNLLFNBQVMsQ0FBRSx3QkFBd0IsQ0FBQyxDQUNuRCxDQUFDLENBQUMsQ0FDSixDQUFDLENBQUMsQyIsImlnbm9yZUxpc3QiOltdfQ==