{"version":3,"file":"/Users/rg/dev/opensea-js/src/orders/utils.ts","sources":["/Users/rg/dev/opensea-js/src/orders/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { CROSS_CHAIN_SEAPORT_V1_6_ADDRESS } from \"@opensea/seaport-js/lib/constants\";\nimport {\n  OrdersQueryOptions,\n  OrderV2,\n  SerializedOrderV2,\n  ProtocolData,\n} from \"./types\";\nimport { Chain, OrderSide } from \"../types\";\nimport { accountFromJSON } from \"../utils\";\n\nexport const DEFAULT_SEAPORT_CONTRACT_ADDRESS =\n  CROSS_CHAIN_SEAPORT_V1_6_ADDRESS;\n\nexport const getPostCollectionOfferPayload = (\n  collectionSlug: string,\n  protocol_data: ProtocolData,\n) => {\n  return {\n    criteria: {\n      collection: { slug: collectionSlug },\n    },\n    protocol_data,\n    protocol_address: DEFAULT_SEAPORT_CONTRACT_ADDRESS,\n  };\n};\n\nexport const getBuildCollectionOfferPayload = (\n  offererAddress: string,\n  quantity: number,\n  collectionSlug: string,\n  offerProtectionEnabled: boolean,\n) => {\n  return {\n    offerer: offererAddress,\n    quantity,\n    criteria: {\n      collection: {\n        slug: collectionSlug,\n      },\n    },\n    protocol_address: DEFAULT_SEAPORT_CONTRACT_ADDRESS,\n    offer_protection_enabled: offerProtectionEnabled,\n  };\n};\n\nexport const getFulfillmentDataPath = (side: OrderSide) => {\n  const sidePath = side === OrderSide.ASK ? \"listings\" : \"offers\";\n  return `/v2/${sidePath}/fulfillment_data`;\n};\n\nexport const getFulfillListingPayload = (\n  fulfillerAddress: string,\n  order_hash: string,\n  protocolAddress: string,\n  chain: Chain,\n) => {\n  return {\n    listing: {\n      hash: order_hash,\n      chain,\n      protocol_address: protocolAddress,\n    },\n    fulfiller: {\n      address: fulfillerAddress,\n    },\n  };\n};\n\nexport const getFulfillOfferPayload = (\n  fulfillerAddress: string,\n  order_hash: string,\n  protocolAddress: string,\n  chain: Chain,\n) => {\n  return {\n    offer: {\n      hash: order_hash,\n      chain,\n      protocol_address: protocolAddress,\n    },\n    fulfiller: {\n      address: fulfillerAddress,\n    },\n  };\n};\n\ntype OrdersQueryPathOptions = \"protocol\" | \"side\";\nexport const serializeOrdersQueryOptions = (\n  options: Omit<OrdersQueryOptions, OrdersQueryPathOptions>,\n) => {\n  return {\n    limit: options.limit,\n    cursor: options.cursor,\n\n    payment_token_address: options.paymentTokenAddress,\n    maker: options.maker,\n    taker: options.taker,\n    owner: options.owner,\n    listed_after: options.listedAfter,\n    listed_before: options.listedBefore,\n    token_ids: options.tokenIds ?? [options.tokenId],\n    asset_contract_address: options.assetContractAddress,\n    order_by: options.orderBy,\n    order_direction: options.orderDirection,\n    only_english: options.onlyEnglish,\n  };\n};\n\nexport const deserializeOrder = (order: SerializedOrderV2): OrderV2 => {\n  return {\n    createdDate: order.created_date,\n    closingDate: order.closing_date,\n    listingTime: order.listing_time,\n    expirationTime: order.expiration_time,\n    orderHash: order.order_hash,\n    maker: accountFromJSON(order.maker),\n    taker: order.taker ? accountFromJSON(order.taker) : null,\n    protocolData: order.protocol_data,\n    protocolAddress: order.protocol_address,\n    currentPrice: BigInt(order.current_price),\n    makerFees: order.maker_fees.map(({ account, basis_points }) => ({\n      account: accountFromJSON(account),\n      basisPoints: basis_points,\n    })),\n    takerFees: order.taker_fees.map(({ account, basis_points }) => ({\n      account: accountFromJSON(account),\n      basisPoints: basis_points,\n    })),\n    side: order.side,\n    orderType: order.order_type,\n    cancelled: order.cancelled,\n    finalized: order.finalized,\n    markedInvalid: order.marked_invalid,\n    clientSignature: order.client_signature,\n    remainingQuantity: order.remaining_quantity,\n  };\n};\n"]}