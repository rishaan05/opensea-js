{"version":3,"file":"/Users/rg/dev/opensea-js/test/utils.spec.ts","sources":["/Users/rg/dev/opensea-js/test/utils.spec.ts"],"names":[],"mappings":";;AAAA,iEAG2C;AAC3C,+BAA8B;AAC9B,mCAAgC;AAChC,iCAAoC;AACpC,8CAAqD;AAErD,IAAA,aAAK,EAAC,cAAc,EAAE,GAAG,EAAE;IACzB,IAAA,YAAI,EAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,aAAa,GAAG,eAAM,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC;QAE3D,gCAAgC;QAChC,MAAM,gBAAgB,GAAwB;YAC5C,CAAC,4CAAgC,EAAE,IAAI,CAAC;YACxC,CAAC,4CAAgC,EAAE,IAAI,CAAC;YACxC,CAAC,aAAa,EAAE,KAAK,CAAC;SACvB,CAAC;QAEF,mDAAmD;QACnD,MAAM,cAAc,GAAG,CAAC,OAAe,EAAE,EAAE,CAAC;YAC1C,OAAO;YACP,OAAO,CAAC,WAAW,EAAE;YACrB,eAAM,CAAC,UAAU,CAAC,OAAO,CAAC;SAC3B,CAAC;QAEF,KAAK,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,gBAAgB,EAAE,CAAC;YAClD,KAAK,MAAM,gBAAgB,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC;gBACvD,IAAA,aAAM,EAAC,IAAA,uBAAe,EAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC9D,CAAC;QACH,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {\n  CROSS_CHAIN_SEAPORT_V1_5_ADDRESS,\n  CROSS_CHAIN_SEAPORT_V1_6_ADDRESS,\n} from \"@opensea/seaport-js/lib/constants\";\nimport { expect } from \"chai\";\nimport { ethers } from \"ethers\";\nimport { suite, test } from \"mocha\";\nimport { isValidProtocol } from \"../src/utils/utils\";\n\nsuite(\"Utils: utils\", () => {\n  test(\"isValidProtocol works with all forms of address\", async () => {\n    const randomAddress = ethers.Wallet.createRandom().address;\n\n    // Mapping of [address, isValid]\n    const addressesToCheck: [string, boolean][] = [\n      [CROSS_CHAIN_SEAPORT_V1_5_ADDRESS, true],\n      [CROSS_CHAIN_SEAPORT_V1_6_ADDRESS, true],\n      [randomAddress, false],\n    ];\n\n    // Check default, lowercase, and checksum addresses\n    const formatsToCheck = (address: string) => [\n      address,\n      address.toLowerCase(),\n      ethers.getAddress(address),\n    ];\n\n    for (const [address, isValid] of addressesToCheck) {\n      for (const formattedAddress of formatsToCheck(address)) {\n        expect(isValidProtocol(formattedAddress)).to.equal(isValid);\n      }\n    }\n  });\n});\n"]}