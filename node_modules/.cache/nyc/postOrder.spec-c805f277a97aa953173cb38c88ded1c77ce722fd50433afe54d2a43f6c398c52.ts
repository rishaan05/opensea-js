"use strict";function cov_2k07mmh2bi(){var path="/Users/rg/dev/opensea-js/test/integration/postOrder.spec.ts";var hash="0a9c3d6971a6bae630cd9ea5621f2938184121bc";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/rg/dev/opensea-js/test/integration/postOrder.spec.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:15},end:{line:3,column:30}},"2":{start:{line:4,column:16},end:{line:4,column:32}},"3":{start:{line:5,column:16},end:{line:5,column:34}},"4":{start:{line:6,column:20},end:{line:6,column:50}},"5":{start:{line:7,column:16},end:{line:7,column:42}},"6":{start:{line:8,column:20},end:{line:8,column:49}},"7":{start:{line:9,column:16},end:{line:9,column:41}},"8":{start:{line:10,column:17},end:{line:10,column:53}},"9":{start:{line:11,column:23},end:{line:11,column:31}},"10":{start:{line:12,column:0},end:{line:161,column:3}},"11":{start:{line:13,column:4},end:{line:27,column:7}},"12":{start:{line:14,column:22},end:{line:22,column:9}},"13":{start:{line:23,column:22},end:{line:23,column:58}},"14":{start:{line:24,column:8},end:{line:24,column:45}},"15":{start:{line:25,column:8},end:{line:25,column:74}},"16":{start:{line:26,column:8},end:{line:26,column:106}},"17":{start:{line:28,column:4},end:{line:40,column:7}},"18":{start:{line:29,column:22},end:{line:37,column:9}},"19":{start:{line:38,column:22},end:{line:38,column:58}},"20":{start:{line:39,column:8},end:{line:39,column:45}},"21":{start:{line:41,column:4},end:{line:56,column:7}},"22":{start:{line:42,column:8},end:{line:44,column:9}},"23":{start:{line:43,column:12},end:{line:43,column:24}},"24":{start:{line:45,column:24},end:{line:53,column:9}},"25":{start:{line:54,column:22},end:{line:54,column:62}},"26":{start:{line:55,column:8},end:{line:55,column:45}},"27":{start:{line:57,column:4},end:{line:80,column:7}},"28":{start:{line:58,column:8},end:{line:60,column:9}},"29":{start:{line:59,column:12},end:{line:59,column:24}},"30":{start:{line:61,column:24},end:{line:70,column:9}},"31":{start:{line:71,column:8},end:{line:79,column:9}},"32":{start:{line:72,column:26},end:{line:72,column:66}},"33":{start:{line:73,column:12},end:{line:73,column:49}},"34":{start:{line:74,column:12},end:{line:74,column:133}},"35":{start:{line:78,column:12},end:{line:78,column:153}},"36":{start:{line:81,column:4},end:{line:96,column:7}},"37":{start:{line:82,column:8},end:{line:84,column:9}},"38":{start:{line:83,column:12},end:{line:83,column:24}},"39":{start:{line:85,column:24},end:{line:93,column:9}},"40":{start:{line:94,column:22},end:{line:94,column:69}},"41":{start:{line:95,column:8},end:{line:95,column:45}},"42":{start:{line:97,column:4},end:{line:120,column:7}},"43":{start:{line:98,column:27},end:{line:98,column:79}},"44":{start:{line:99,column:36},end:{line:99,column:82}},"45":{start:{line:100,column:33},end:{line:107,column:9}},"46":{start:{line:108,column:30},end:{line:108,column:87}},"47":{start:{line:109,column:8},end:{line:109,column:92}},"48":{start:{line:110,column:8},end:{line:110,column:89}},"49":{start:{line:111,column:8},end:{line:111,column:86}},"50":{start:{line:113,column:49},end:{line:113,column:62}},"51":{start:{line:114,column:31},end:{line:114,column:98}},"52":{start:{line:115,column:8},end:{line:115,column:110}},"53":{start:{line:121,column:4},end:{line:140,column:7}},"54":{start:{line:122,column:27},end:{line:122,column:88}},"55":{start:{line:123,column:36},end:{line:123,column:89}},"56":{start:{line:124,column:33},end:{line:131,column:9}},"57":{start:{line:132,column:30},end:{line:132,column:94}},"58":{start:{line:133,column:8},end:{line:133,column:92}},"59":{start:{line:134,column:8},end:{line:134,column:89}},"60":{start:{line:135,column:8},end:{line:135,column:86}},"61":{start:{line:137,column:49},end:{line:137,column:62}},"62":{start:{line:138,column:31},end:{line:138,column:133}},"63":{start:{line:139,column:8},end:{line:139,column:110}},"64":{start:{line:141,column:4},end:{line:160,column:7}},"65":{start:{line:142,column:27},end:{line:142,column:79}},"66":{start:{line:143,column:36},end:{line:143,column:82}},"67":{start:{line:144,column:33},end:{line:153,column:9}},"68":{start:{line:154,column:30},end:{line:154,column:87}},"69":{start:{line:155,column:8},end:{line:155,column:89}},"70":{start:{line:156,column:8},end:{line:159,column:11}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:41},end:{line:12,column:42}},loc:{start:{line:12,column:47},end:{line:161,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:46},end:{line:13,column:47}},loc:{start:{line:13,column:58},end:{line:27,column:5}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:28,column:46},end:{line:28,column:47}},loc:{start:{line:28,column:58},end:{line:40,column:5}},line:28},"3":{name:"(anonymous_3)",decl:{start:{line:41,column:48},end:{line:41,column:49}},loc:{start:{line:41,column:66},end:{line:56,column:5}},line:41},"4":{name:"(anonymous_4)",decl:{start:{line:57,column:64},end:{line:57,column:65}},loc:{start:{line:57,column:82},end:{line:80,column:5}},line:57},"5":{name:"(anonymous_5)",decl:{start:{line:81,column:48},end:{line:81,column:49}},loc:{start:{line:81,column:66},end:{line:96,column:5}},line:81},"6":{name:"(anonymous_6)",decl:{start:{line:97,column:57},end:{line:97,column:58}},loc:{start:{line:97,column:69},end:{line:120,column:5}},line:97},"7":{name:"(anonymous_7)",decl:{start:{line:121,column:57},end:{line:121,column:58}},loc:{start:{line:121,column:69},end:{line:140,column:5}},line:121},"8":{name:"(anonymous_8)",decl:{start:{line:141,column:53},end:{line:141,column:54}},loc:{start:{line:141,column:65},end:{line:160,column:5}},line:141}},branchMap:{"0":{loc:{start:{line:42,column:8},end:{line:44,column:9}},type:"if",locations:[{start:{line:42,column:8},end:{line:44,column:9}},{start:{line:42,column:8},end:{line:44,column:9}}],line:42},"1":{loc:{start:{line:42,column:12},end:{line:42,column:71}},type:"binary-expr",locations:[{start:{line:42,column:12},end:{line:42,column:42}},{start:{line:42,column:46},end:{line:42,column:71}}],line:42},"2":{loc:{start:{line:58,column:8},end:{line:60,column:9}},type:"if",locations:[{start:{line:58,column:8},end:{line:60,column:9}},{start:{line:58,column:8},end:{line:60,column:9}}],line:58},"3":{loc:{start:{line:58,column:12},end:{line:58,column:71}},type:"binary-expr",locations:[{start:{line:58,column:12},end:{line:58,column:42}},{start:{line:58,column:46},end:{line:58,column:71}}],line:58},"4":{loc:{start:{line:82,column:8},end:{line:84,column:9}},type:"if",locations:[{start:{line:82,column:8},end:{line:84,column:9}},{start:{line:82,column:8},end:{line:84,column:9}}],line:82},"5":{loc:{start:{line:82,column:12},end:{line:82,column:71}},type:"binary-expr",locations:[{start:{line:82,column:12},end:{line:82,column:42}},{start:{line:82,column:46},end:{line:82,column:71}}],line:82}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},inputSourceMap:{version:3,file:"/Users/rg/dev/opensea-js/test/integration/postOrder.spec.ts",sources:["/Users/rg/dev/opensea-js/test/integration/postOrder.spec.ts"],names:[],mappings:"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",sourcesContent:["import { expect } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport {\n  LISTING_AMOUNT,\n  TOKEN_ADDRESS_MAINNET,\n  TOKEN_ADDRESS_POLYGON,\n  TOKEN_ID_MAINNET,\n  TOKEN_ID_POLYGON,\n  sdk,\n  sdkPolygon,\n  walletAddress,\n} from \"./setup\";\nimport { ENGLISH_AUCTION_ZONE_MAINNETS } from \"../../src/constants\";\nimport { getWETHAddress } from \"../../src/utils\";\nimport { OFFER_AMOUNT } from \"../utils/constants\";\nimport { expectValidOrder } from \"../utils/utils\";\n\nconst ONE_HOUR = Math.floor(Date.now() / 1000) + 3600;\nconst expirationTime = ONE_HOUR;\n\nsuite(\"SDK: order posting\", () => {\n  test(\"Post Offer - Mainnet\", async () => {\n    const offer = {\n      accountAddress: walletAddress,\n      startAmount: +OFFER_AMOUNT,\n      asset: {\n        tokenAddress: \"0x1a92f7381b9f03921564a437210bb9396471050c\",\n        tokenId: \"2288\",\n      },\n      expirationTime,\n    };\n    const order = await sdk.createOffer(offer);\n    expectValidOrder(order);\n    expect(order.expirationTime).to.equal(expirationTime);\n    expect(order.protocolData.parameters.endTime).to.be.approximately(\n      2,\n      +expirationTime,\n    );\n  });\n\n  test(\"Post Offer - Polygon\", async () => {\n    const offer = {\n      accountAddress: walletAddress,\n      startAmount: +OFFER_AMOUNT,\n      asset: {\n        tokenAddress: \"0x1a92f7381b9f03921564a437210bb9396471050c\",\n        tokenId: \"2288\",\n      },\n      expirationTime,\n    };\n    const order = await sdk.createOffer(offer);\n    expectValidOrder(order);\n  });\n\n  test(\"Post Listing - Mainnet\", async function () {\n    if (!TOKEN_ADDRESS_MAINNET || !TOKEN_ID_MAINNET) {\n      this.skip();\n    }\n    const listing = {\n      accountAddress: walletAddress,\n      startAmount: LISTING_AMOUNT,\n      asset: {\n        tokenAddress: TOKEN_ADDRESS_MAINNET as string,\n        tokenId: TOKEN_ID_MAINNET as string,\n      },\n      expirationTime,\n    };\n    const order = await sdk.createListing(listing);\n    expectValidOrder(order);\n  });\n\n  test(\"Post English Auction Listing - Mainnet\", async function () {\n    if (!TOKEN_ADDRESS_MAINNET || !TOKEN_ID_MAINNET) {\n      this.skip();\n    }\n    const listing = {\n      accountAddress: walletAddress,\n      startAmount: LISTING_AMOUNT,\n      asset: {\n        tokenAddress: TOKEN_ADDRESS_MAINNET as string,\n        tokenId: TOKEN_ID_MAINNET as string,\n      },\n      englishAuction: true,\n      expirationTime,\n    };\n    try {\n      const order = await sdk.createListing(listing);\n      expectValidOrder(order);\n      expect(order.protocolData.parameters.zone.toLowerCase()).to.equal(\n        ENGLISH_AUCTION_ZONE_MAINNETS,\n      );\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (error: any) {\n      expect(\n        error.message.includes(\n          \"There is already a live auction for this item. You can only have one auction live at any time.\",\n        ),\n      );\n    }\n  });\n\n  test(\"Post Listing - Polygon\", async function () {\n    if (!TOKEN_ADDRESS_POLYGON || !TOKEN_ID_POLYGON) {\n      this.skip();\n    }\n    const listing = {\n      accountAddress: walletAddress,\n      startAmount: +LISTING_AMOUNT * 1_000_000,\n      asset: {\n        tokenAddress: TOKEN_ADDRESS_POLYGON,\n        tokenId: TOKEN_ID_POLYGON,\n      },\n      expirationTime,\n    };\n    const order = await sdkPolygon.createListing(listing);\n    expectValidOrder(order);\n  });\n\n  test(\"Post Collection Offer - Mainnet\", async () => {\n    const collection = await sdk.api.getCollection(\"cool-cats-nft\");\n    const paymentTokenAddress = getWETHAddress(sdk.chain);\n    const postOrderRequest = {\n      collectionSlug: collection.collection,\n      accountAddress: walletAddress,\n      amount: OFFER_AMOUNT,\n      quantity: 1,\n      paymentTokenAddress,\n      expirationTime,\n    };\n    const offerResponse = await sdk.createCollectionOffer(postOrderRequest);\n    expect(offerResponse).to.exist.and.to.have.property(\"protocol_address\");\n    expect(offerResponse).to.exist.and.to.have.property(\"protocol_data\");\n    expect(offerResponse).to.exist.and.to.have.property(\"order_hash\");\n\n    // Cancel the order using self serve API key tied to the offerer\n    const { protocol_address, order_hash } = offerResponse!;\n    const cancelResponse = await sdk.offchainCancelOrder(\n      protocol_address,\n      order_hash,\n    );\n    expect(cancelResponse).to.exist.and.to.have.property(\n      \"last_signature_issued_valid_until\",\n    );\n\n    // Ensure it is cancelled\n    // const order = await sdk.api.getOrder({ side: OrderSide.OFFER, order_hash });\n    // console.log(order)\n    // expect(order).to.exist.and.to.have.property(\"is_cancelled\", true);\n  });\n\n  test(\"Post Collection Offer - Polygon\", async () => {\n    const collection = await sdkPolygon.api.getCollection(\"arttoken-1155-4\");\n    const paymentTokenAddress = getWETHAddress(sdkPolygon.chain);\n    const postOrderRequest = {\n      collectionSlug: collection.collection,\n      accountAddress: walletAddress,\n      amount: 0.0001,\n      quantity: 1,\n      paymentTokenAddress,\n      expirationTime,\n    };\n    const offerResponse =\n      await sdkPolygon.createCollectionOffer(postOrderRequest);\n    expect(offerResponse).to.exist.and.to.have.property(\"protocol_address\");\n    expect(offerResponse).to.exist.and.to.have.property(\"protocol_data\");\n    expect(offerResponse).to.exist.and.to.have.property(\"order_hash\");\n\n    // Cancel the order using the offerer signature, deriving it from the ethers signer\n    const { protocol_address, order_hash } = offerResponse!;\n    const cancelResponse = await sdkPolygon.offchainCancelOrder(\n      protocol_address,\n      order_hash,\n      undefined,\n      undefined,\n      true,\n    );\n    expect(cancelResponse).to.exist.and.to.have.property(\n      \"last_signature_issued_valid_until\",\n    );\n  });\n\n  test(\"Post Trait Offer - Ethereum\", async () => {\n    const collection = await sdk.api.getCollection(\"cool-cats-nft\");\n    const paymentTokenAddress = getWETHAddress(sdk.chain);\n    const postOrderRequest = {\n      collectionSlug: collection.collection,\n      accountAddress: walletAddress,\n      amount: OFFER_AMOUNT,\n      quantity: 1,\n      paymentTokenAddress,\n      traitType: \"face\",\n      traitValue: \"tvface bobross\",\n      expirationTime,\n    };\n    const offerResponse = await sdk.createCollectionOffer(postOrderRequest);\n    expect(offerResponse).to.exist.and.to.have.property(\"protocol_data\");\n    expect(offerResponse?.criteria.trait).to.deep.equal({\n      type: \"face\",\n      value: \"tvface bobross\",\n    });\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0a9c3d6971a6bae630cd9ea5621f2938184121bc"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2k07mmh2bi=function(){return actualCoverage;};}return actualCoverage;}cov_2k07mmh2bi();cov_2k07mmh2bi().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const chai_1=(cov_2k07mmh2bi().s[1]++,require("chai"));const mocha_1=(cov_2k07mmh2bi().s[2]++,require("mocha"));const setup_1=(cov_2k07mmh2bi().s[3]++,require("./setup"));const constants_1=(cov_2k07mmh2bi().s[4]++,require("../../src/constants"));const utils_1=(cov_2k07mmh2bi().s[5]++,require("../../src/utils"));const constants_2=(cov_2k07mmh2bi().s[6]++,require("../utils/constants"));const utils_2=(cov_2k07mmh2bi().s[7]++,require("../utils/utils"));const ONE_HOUR=(cov_2k07mmh2bi().s[8]++,Math.floor(Date.now()/1000)+3600);const expirationTime=(cov_2k07mmh2bi().s[9]++,ONE_HOUR);cov_2k07mmh2bi().s[10]++;(0,mocha_1.suite)("SDK: order posting",()=>{cov_2k07mmh2bi().f[0]++;cov_2k07mmh2bi().s[11]++;(0,mocha_1.test)("Post Offer - Mainnet",async()=>{cov_2k07mmh2bi().f[1]++;const offer=(cov_2k07mmh2bi().s[12]++,{accountAddress:setup_1.walletAddress,startAmount:+constants_2.OFFER_AMOUNT,asset:{tokenAddress:"0x1a92f7381b9f03921564a437210bb9396471050c",tokenId:"2288"},expirationTime});const order=(cov_2k07mmh2bi().s[13]++,await setup_1.sdk.createOffer(offer));cov_2k07mmh2bi().s[14]++;(0,utils_2.expectValidOrder)(order);cov_2k07mmh2bi().s[15]++;(0,chai_1.expect)(order.expirationTime).to.equal(expirationTime);cov_2k07mmh2bi().s[16]++;(0,chai_1.expect)(order.protocolData.parameters.endTime).to.be.approximately(2,+expirationTime);});cov_2k07mmh2bi().s[17]++;(0,mocha_1.test)("Post Offer - Polygon",async()=>{cov_2k07mmh2bi().f[2]++;const offer=(cov_2k07mmh2bi().s[18]++,{accountAddress:setup_1.walletAddress,startAmount:+constants_2.OFFER_AMOUNT,asset:{tokenAddress:"0x1a92f7381b9f03921564a437210bb9396471050c",tokenId:"2288"},expirationTime});const order=(cov_2k07mmh2bi().s[19]++,await setup_1.sdk.createOffer(offer));cov_2k07mmh2bi().s[20]++;(0,utils_2.expectValidOrder)(order);});cov_2k07mmh2bi().s[21]++;(0,mocha_1.test)("Post Listing - Mainnet",async function(){cov_2k07mmh2bi().f[3]++;cov_2k07mmh2bi().s[22]++;if((cov_2k07mmh2bi().b[1][0]++,!setup_1.TOKEN_ADDRESS_MAINNET)||(cov_2k07mmh2bi().b[1][1]++,!setup_1.TOKEN_ID_MAINNET)){cov_2k07mmh2bi().b[0][0]++;cov_2k07mmh2bi().s[23]++;this.skip();}else{cov_2k07mmh2bi().b[0][1]++;}const listing=(cov_2k07mmh2bi().s[24]++,{accountAddress:setup_1.walletAddress,startAmount:setup_1.LISTING_AMOUNT,asset:{tokenAddress:setup_1.TOKEN_ADDRESS_MAINNET,tokenId:setup_1.TOKEN_ID_MAINNET},expirationTime});const order=(cov_2k07mmh2bi().s[25]++,await setup_1.sdk.createListing(listing));cov_2k07mmh2bi().s[26]++;(0,utils_2.expectValidOrder)(order);});cov_2k07mmh2bi().s[27]++;(0,mocha_1.test)("Post English Auction Listing - Mainnet",async function(){cov_2k07mmh2bi().f[4]++;cov_2k07mmh2bi().s[28]++;if((cov_2k07mmh2bi().b[3][0]++,!setup_1.TOKEN_ADDRESS_MAINNET)||(cov_2k07mmh2bi().b[3][1]++,!setup_1.TOKEN_ID_MAINNET)){cov_2k07mmh2bi().b[2][0]++;cov_2k07mmh2bi().s[29]++;this.skip();}else{cov_2k07mmh2bi().b[2][1]++;}const listing=(cov_2k07mmh2bi().s[30]++,{accountAddress:setup_1.walletAddress,startAmount:setup_1.LISTING_AMOUNT,asset:{tokenAddress:setup_1.TOKEN_ADDRESS_MAINNET,tokenId:setup_1.TOKEN_ID_MAINNET},englishAuction:true,expirationTime});cov_2k07mmh2bi().s[31]++;try{const order=(cov_2k07mmh2bi().s[32]++,await setup_1.sdk.createListing(listing));cov_2k07mmh2bi().s[33]++;(0,utils_2.expectValidOrder)(order);cov_2k07mmh2bi().s[34]++;(0,chai_1.expect)(order.protocolData.parameters.zone.toLowerCase()).to.equal(constants_1.ENGLISH_AUCTION_ZONE_MAINNETS);// eslint-disable-next-line @typescript-eslint/no-explicit-any
}catch(error){cov_2k07mmh2bi().s[35]++;(0,chai_1.expect)(error.message.includes("There is already a live auction for this item. You can only have one auction live at any time."));}});cov_2k07mmh2bi().s[36]++;(0,mocha_1.test)("Post Listing - Polygon",async function(){cov_2k07mmh2bi().f[5]++;cov_2k07mmh2bi().s[37]++;if((cov_2k07mmh2bi().b[5][0]++,!setup_1.TOKEN_ADDRESS_POLYGON)||(cov_2k07mmh2bi().b[5][1]++,!setup_1.TOKEN_ID_POLYGON)){cov_2k07mmh2bi().b[4][0]++;cov_2k07mmh2bi().s[38]++;this.skip();}else{cov_2k07mmh2bi().b[4][1]++;}const listing=(cov_2k07mmh2bi().s[39]++,{accountAddress:setup_1.walletAddress,startAmount:+setup_1.LISTING_AMOUNT*1000000,asset:{tokenAddress:setup_1.TOKEN_ADDRESS_POLYGON,tokenId:setup_1.TOKEN_ID_POLYGON},expirationTime});const order=(cov_2k07mmh2bi().s[40]++,await setup_1.sdkPolygon.createListing(listing));cov_2k07mmh2bi().s[41]++;(0,utils_2.expectValidOrder)(order);});cov_2k07mmh2bi().s[42]++;(0,mocha_1.test)("Post Collection Offer - Mainnet",async()=>{cov_2k07mmh2bi().f[6]++;const collection=(cov_2k07mmh2bi().s[43]++,await setup_1.sdk.api.getCollection("cool-cats-nft"));const paymentTokenAddress=(cov_2k07mmh2bi().s[44]++,(0,utils_1.getWETHAddress)(setup_1.sdk.chain));const postOrderRequest=(cov_2k07mmh2bi().s[45]++,{collectionSlug:collection.collection,accountAddress:setup_1.walletAddress,amount:constants_2.OFFER_AMOUNT,quantity:1,paymentTokenAddress,expirationTime});const offerResponse=(cov_2k07mmh2bi().s[46]++,await setup_1.sdk.createCollectionOffer(postOrderRequest));cov_2k07mmh2bi().s[47]++;(0,chai_1.expect)(offerResponse).to.exist.and.to.have.property("protocol_address");cov_2k07mmh2bi().s[48]++;(0,chai_1.expect)(offerResponse).to.exist.and.to.have.property("protocol_data");cov_2k07mmh2bi().s[49]++;(0,chai_1.expect)(offerResponse).to.exist.and.to.have.property("order_hash");// Cancel the order using self serve API key tied to the offerer
const{protocol_address,order_hash}=(cov_2k07mmh2bi().s[50]++,offerResponse);const cancelResponse=(cov_2k07mmh2bi().s[51]++,await setup_1.sdk.offchainCancelOrder(protocol_address,order_hash));cov_2k07mmh2bi().s[52]++;(0,chai_1.expect)(cancelResponse).to.exist.and.to.have.property("last_signature_issued_valid_until");// Ensure it is cancelled
// const order = await sdk.api.getOrder({ side: OrderSide.OFFER, order_hash });
// console.log(order)
// expect(order).to.exist.and.to.have.property("is_cancelled", true);
});cov_2k07mmh2bi().s[53]++;(0,mocha_1.test)("Post Collection Offer - Polygon",async()=>{cov_2k07mmh2bi().f[7]++;const collection=(cov_2k07mmh2bi().s[54]++,await setup_1.sdkPolygon.api.getCollection("arttoken-1155-4"));const paymentTokenAddress=(cov_2k07mmh2bi().s[55]++,(0,utils_1.getWETHAddress)(setup_1.sdkPolygon.chain));const postOrderRequest=(cov_2k07mmh2bi().s[56]++,{collectionSlug:collection.collection,accountAddress:setup_1.walletAddress,amount:0.0001,quantity:1,paymentTokenAddress,expirationTime});const offerResponse=(cov_2k07mmh2bi().s[57]++,await setup_1.sdkPolygon.createCollectionOffer(postOrderRequest));cov_2k07mmh2bi().s[58]++;(0,chai_1.expect)(offerResponse).to.exist.and.to.have.property("protocol_address");cov_2k07mmh2bi().s[59]++;(0,chai_1.expect)(offerResponse).to.exist.and.to.have.property("protocol_data");cov_2k07mmh2bi().s[60]++;(0,chai_1.expect)(offerResponse).to.exist.and.to.have.property("order_hash");// Cancel the order using the offerer signature, deriving it from the ethers signer
const{protocol_address,order_hash}=(cov_2k07mmh2bi().s[61]++,offerResponse);const cancelResponse=(cov_2k07mmh2bi().s[62]++,await setup_1.sdkPolygon.offchainCancelOrder(protocol_address,order_hash,undefined,undefined,true));cov_2k07mmh2bi().s[63]++;(0,chai_1.expect)(cancelResponse).to.exist.and.to.have.property("last_signature_issued_valid_until");});cov_2k07mmh2bi().s[64]++;(0,mocha_1.test)("Post Trait Offer - Ethereum",async()=>{cov_2k07mmh2bi().f[8]++;const collection=(cov_2k07mmh2bi().s[65]++,await setup_1.sdk.api.getCollection("cool-cats-nft"));const paymentTokenAddress=(cov_2k07mmh2bi().s[66]++,(0,utils_1.getWETHAddress)(setup_1.sdk.chain));const postOrderRequest=(cov_2k07mmh2bi().s[67]++,{collectionSlug:collection.collection,accountAddress:setup_1.walletAddress,amount:constants_2.OFFER_AMOUNT,quantity:1,paymentTokenAddress,traitType:"face",traitValue:"tvface bobross",expirationTime});const offerResponse=(cov_2k07mmh2bi().s[68]++,await setup_1.sdk.createCollectionOffer(postOrderRequest));cov_2k07mmh2bi().s[69]++;(0,chai_1.expect)(offerResponse).to.exist.and.to.have.property("protocol_data");cov_2k07mmh2bi().s[70]++;(0,chai_1.expect)(offerResponse?.criteria.trait).to.deep.equal({type:"face",value:"tvface bobross"});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,