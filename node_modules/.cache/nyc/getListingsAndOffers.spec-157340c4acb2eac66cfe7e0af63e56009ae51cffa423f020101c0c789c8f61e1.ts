"use strict";function cov_2nrc1g4rbc(){var path="/Users/rg/dev/opensea-js/test/integration/getListingsAndOffers.spec.ts";var hash="1a1f244d0e0b2890eeb9c3fb797609a5f18cc37c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/rg/dev/opensea-js/test/integration/getListingsAndOffers.spec.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:15},end:{line:3,column:30}},"2":{start:{line:4,column:16},end:{line:4,column:32}},"3":{start:{line:5,column:16},end:{line:5,column:34}},"4":{start:{line:6,column:0},end:{line:16,column:3}},"5":{start:{line:7,column:4},end:{line:15,column:7}},"6":{start:{line:8,column:21},end:{line:8,column:36}},"7":{start:{line:9,column:25},end:{line:9,column:65}},"8":{start:{line:10,column:8},end:{line:10,column:68}},"9":{start:{line:11,column:8},end:{line:11,column:91}},"10":{start:{line:12,column:8},end:{line:12,column:81}},"11":{start:{line:13,column:8},end:{line:13,column:103}},"12":{start:{line:14,column:8},end:{line:14,column:97}},"13":{start:{line:17,column:0},end:{line:33,column:3}},"14":{start:{line:18,column:4},end:{line:32,column:7}},"15":{start:{line:19,column:21},end:{line:19,column:36}},"16":{start:{line:20,column:25},end:{line:20,column:67}},"17":{start:{line:21,column:8},end:{line:21,column:68}},"18":{start:{line:22,column:8},end:{line:22,column:93}},"19":{start:{line:23,column:8},end:{line:23,column:83}},"20":{start:{line:24,column:8},end:{line:24,column:105}},"21":{start:{line:25,column:8},end:{line:25,column:99}},"22":{start:{line:26,column:8},end:{line:26,column:85}},"23":{start:{line:28,column:30},end:{line:28,column:98}},"24":{start:{line:29,column:8},end:{line:29,column:73}},"25":{start:{line:30,column:8},end:{line:30,column:149}},"26":{start:{line:31,column:8},end:{line:31,column:95}},"27":{start:{line:34,column:0},end:{line:45,column:3}},"28":{start:{line:35,column:4},end:{line:44,column:7}},"29":{start:{line:36,column:21},end:{line:36,column:36}},"30":{start:{line:37,column:24},end:{line:37,column:25}},"31":{start:{line:38,column:25},end:{line:38,column:74}},"32":{start:{line:39,column:8},end:{line:39,column:68}},"33":{start:{line:40,column:8},end:{line:40,column:81}},"34":{start:{line:41,column:8},end:{line:41,column:71}},"35":{start:{line:42,column:8},end:{line:42,column:93}},"36":{start:{line:43,column:8},end:{line:43,column:87}},"37":{start:{line:46,column:0},end:{line:61,column:3}},"38":{start:{line:47,column:4},end:{line:60,column:7}},"39":{start:{line:48,column:21},end:{line:48,column:36}},"40":{start:{line:49,column:29},end:{line:49,column:71}},"41":{start:{line:50,column:24},end:{line:50,column:35}},"42":{start:{line:51,column:24},end:{line:51,column:86}},"43":{start:{line:52,column:25},end:{line:52,column:76}},"44":{start:{line:53,column:8},end:{line:53,column:68}},"45":{start:{line:54,column:8},end:{line:54,column:81}},"46":{start:{line:55,column:8},end:{line:55,column:71}},"47":{start:{line:56,column:8},end:{line:56,column:93}},"48":{start:{line:57,column:8},end:{line:57,column:87}},"49":{start:{line:58,column:8},end:{line:58,column:98}},"50":{start:{line:59,column:8},end:{line:59,column:116}},"51":{start:{line:62,column:0},end:{line:69,column:3}},"52":{start:{line:63,column:4},end:{line:68,column:7}},"53":{start:{line:64,column:21},end:{line:64,column:36}},"54":{start:{line:65,column:25},end:{line:65,column:68}},"55":{start:{line:66,column:8},end:{line:66,column:68}},"56":{start:{line:67,column:8},end:{line:67,column:77}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:40},end:{line:6,column:41}},loc:{start:{line:6,column:46},end:{line:16,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:7,column:40},end:{line:7,column:41}},loc:{start:{line:7,column:52},end:{line:15,column:5}},line:7},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:42},end:{line:17,column:43}},loc:{start:{line:17,column:48},end:{line:33,column:1}},line:17},"3":{name:"(anonymous_3)",decl:{start:{line:18,column:42},end:{line:18,column:43}},loc:{start:{line:18,column:54},end:{line:32,column:5}},line:18},"4":{name:"(anonymous_4)",decl:{start:{line:34,column:40},end:{line:34,column:41}},loc:{start:{line:34,column:46},end:{line:45,column:1}},line:34},"5":{name:"(anonymous_5)",decl:{start:{line:35,column:40},end:{line:35,column:41}},loc:{start:{line:35,column:52},end:{line:44,column:5}},line:35},"6":{name:"(anonymous_6)",decl:{start:{line:46,column:42},end:{line:46,column:43}},loc:{start:{line:46,column:48},end:{line:61,column:1}},line:46},"7":{name:"(anonymous_7)",decl:{start:{line:47,column:42},end:{line:47,column:43}},loc:{start:{line:47,column:54},end:{line:60,column:5}},line:47},"8":{name:"(anonymous_8)",decl:{start:{line:62,column:43},end:{line:62,column:44}},loc:{start:{line:62,column:49},end:{line:69,column:1}},line:62},"9":{name:"(anonymous_9)",decl:{start:{line:63,column:42},end:{line:63,column:43}},loc:{start:{line:63,column:54},end:{line:68,column:5}},line:63}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{},inputSourceMap:{version:3,file:"/Users/rg/dev/opensea-js/test/integration/getListingsAndOffers.spec.ts",sources:["/Users/rg/dev/opensea-js/test/integration/getListingsAndOffers.spec.ts"],names:[],mappings:"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",sourcesContent:["import { assert } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport { sdk } from \"./setup\";\n\nsuite(\"SDK: getAllOffers\", () => {\n  test(\"Get All Offers\", async () => {\n    const slug = \"cool-cats-nft\";\n    const response = await sdk.api.getAllOffers(slug);\n\n    assert(response, \"Response should not be null\");\n    assert(response.offers[0].order_hash, \"Order hash should not be null\");\n    assert(response.offers[0].chain, \"Chain should not be null\");\n    assert(\n      response.offers[0].protocol_address,\n      \"Protocol address should not be null\",\n    );\n    assert(\n      response.offers[0].protocol_data,\n      \"Protocol data should not be null\",\n    );\n  });\n});\n\nsuite(\"SDK: getAllListings\", () => {\n  test(\"Get All Listings\", async () => {\n    const slug = \"cool-cats-nft\";\n    const response = await sdk.api.getAllListings(slug);\n\n    assert(response, \"Response should not be null\");\n    assert(response.listings[0].order_hash, \"Order hash should not be null\");\n    assert(response.listings[0].chain, \"Chain should not be null\");\n    assert(\n      response.listings[0].protocol_address,\n      \"Protocol address should not be null\",\n    );\n    assert(\n      response.listings[0].protocol_data,\n      \"Protocol data should not be null\",\n    );\n    assert(response.next, \"Cursor for next page should not be null\");\n\n    // Should get the next page of listings\n    const responsePage2 = await sdk.api.getAllListings(\n      slug,\n      undefined,\n      response.next,\n    );\n    assert(responsePage2, \"Response should not be null\");\n    assert.notDeepEqual(\n      response.listings,\n      responsePage2.listings,\n      \"Response of second page should not equal the response of first page\",\n    );\n    assert.notEqual(\n      response.next,\n      responsePage2.next,\n      \"Next cursor should change\",\n    );\n  });\n});\n\nsuite(\"SDK: getBestOffer\", () => {\n  test(\"Get Best Offer\", async () => {\n    const slug = \"cool-cats-nft\";\n    const tokenId = 1;\n    const response = await sdk.api.getBestOffer(slug, tokenId);\n\n    assert(response, \"Response should not be null\");\n    assert(response.order_hash, \"Order hash should not be null\");\n    assert(response.chain, \"Chain should not be null\");\n    assert(response.protocol_address, \"Protocol address should not be null\");\n    assert(response.protocol_data, \"Protocol data should not be null\");\n  });\n});\n\nsuite(\"SDK: getBestListing\", () => {\n  test(\"Get Best Listing\", async () => {\n    const slug = \"cool-cats-nft\";\n    const { listings } = await sdk.api.getAllListings(slug);\n    const listing = listings[0];\n    const tokenId =\n      listing.protocol_data.parameters.offer[0].identifierOrCriteria;\n    const response = await sdk.api.getBestListing(slug, tokenId);\n\n    assert(response, \"Response should not be null\");\n    assert(response.order_hash, \"Order hash should not be null\");\n    assert(response.chain, \"Chain should not be null\");\n    assert(response.protocol_address, \"Protocol address should not be null\");\n    assert(response.protocol_data, \"Protocol data should not be null\");\n    assert.equal(\n      listing.order_hash,\n      response.order_hash,\n      \"Order hashes should match\",\n    );\n    assert.equal(\n      listing.protocol_address,\n      response.protocol_address,\n      \"Protocol addresses should match\",\n    );\n  });\n});\n\nsuite(\"SDK: getBestListings\", () => {\n  test(\"Get Best Listing\", async () => {\n    const slug = \"cool-cats-nft\";\n    const response = await sdk.api.getBestListings(slug);\n\n    assert(response, \"Response should not be null\");\n    assert(response.listings, \"Listings should not be null\");\n  });\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"1a1f244d0e0b2890eeb9c3fb797609a5f18cc37c"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2nrc1g4rbc=function(){return actualCoverage;};}return actualCoverage;}cov_2nrc1g4rbc();cov_2nrc1g4rbc().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const chai_1=(cov_2nrc1g4rbc().s[1]++,require("chai"));const mocha_1=(cov_2nrc1g4rbc().s[2]++,require("mocha"));const setup_1=(cov_2nrc1g4rbc().s[3]++,require("./setup"));cov_2nrc1g4rbc().s[4]++;(0,mocha_1.suite)("SDK: getAllOffers",()=>{cov_2nrc1g4rbc().f[0]++;cov_2nrc1g4rbc().s[5]++;(0,mocha_1.test)("Get All Offers",async()=>{cov_2nrc1g4rbc().f[1]++;const slug=(cov_2nrc1g4rbc().s[6]++,"cool-cats-nft");const response=(cov_2nrc1g4rbc().s[7]++,await setup_1.sdk.api.getAllOffers(slug));cov_2nrc1g4rbc().s[8]++;(0,chai_1.assert)(response,"Response should not be null");cov_2nrc1g4rbc().s[9]++;(0,chai_1.assert)(response.offers[0].order_hash,"Order hash should not be null");cov_2nrc1g4rbc().s[10]++;(0,chai_1.assert)(response.offers[0].chain,"Chain should not be null");cov_2nrc1g4rbc().s[11]++;(0,chai_1.assert)(response.offers[0].protocol_address,"Protocol address should not be null");cov_2nrc1g4rbc().s[12]++;(0,chai_1.assert)(response.offers[0].protocol_data,"Protocol data should not be null");});});cov_2nrc1g4rbc().s[13]++;(0,mocha_1.suite)("SDK: getAllListings",()=>{cov_2nrc1g4rbc().f[2]++;cov_2nrc1g4rbc().s[14]++;(0,mocha_1.test)("Get All Listings",async()=>{cov_2nrc1g4rbc().f[3]++;const slug=(cov_2nrc1g4rbc().s[15]++,"cool-cats-nft");const response=(cov_2nrc1g4rbc().s[16]++,await setup_1.sdk.api.getAllListings(slug));cov_2nrc1g4rbc().s[17]++;(0,chai_1.assert)(response,"Response should not be null");cov_2nrc1g4rbc().s[18]++;(0,chai_1.assert)(response.listings[0].order_hash,"Order hash should not be null");cov_2nrc1g4rbc().s[19]++;(0,chai_1.assert)(response.listings[0].chain,"Chain should not be null");cov_2nrc1g4rbc().s[20]++;(0,chai_1.assert)(response.listings[0].protocol_address,"Protocol address should not be null");cov_2nrc1g4rbc().s[21]++;(0,chai_1.assert)(response.listings[0].protocol_data,"Protocol data should not be null");cov_2nrc1g4rbc().s[22]++;(0,chai_1.assert)(response.next,"Cursor for next page should not be null");// Should get the next page of listings
const responsePage2=(cov_2nrc1g4rbc().s[23]++,await setup_1.sdk.api.getAllListings(slug,undefined,response.next));cov_2nrc1g4rbc().s[24]++;(0,chai_1.assert)(responsePage2,"Response should not be null");cov_2nrc1g4rbc().s[25]++;chai_1.assert.notDeepEqual(response.listings,responsePage2.listings,"Response of second page should not equal the response of first page");cov_2nrc1g4rbc().s[26]++;chai_1.assert.notEqual(response.next,responsePage2.next,"Next cursor should change");});});cov_2nrc1g4rbc().s[27]++;(0,mocha_1.suite)("SDK: getBestOffer",()=>{cov_2nrc1g4rbc().f[4]++;cov_2nrc1g4rbc().s[28]++;(0,mocha_1.test)("Get Best Offer",async()=>{cov_2nrc1g4rbc().f[5]++;const slug=(cov_2nrc1g4rbc().s[29]++,"cool-cats-nft");const tokenId=(cov_2nrc1g4rbc().s[30]++,1);const response=(cov_2nrc1g4rbc().s[31]++,await setup_1.sdk.api.getBestOffer(slug,tokenId));cov_2nrc1g4rbc().s[32]++;(0,chai_1.assert)(response,"Response should not be null");cov_2nrc1g4rbc().s[33]++;(0,chai_1.assert)(response.order_hash,"Order hash should not be null");cov_2nrc1g4rbc().s[34]++;(0,chai_1.assert)(response.chain,"Chain should not be null");cov_2nrc1g4rbc().s[35]++;(0,chai_1.assert)(response.protocol_address,"Protocol address should not be null");cov_2nrc1g4rbc().s[36]++;(0,chai_1.assert)(response.protocol_data,"Protocol data should not be null");});});cov_2nrc1g4rbc().s[37]++;(0,mocha_1.suite)("SDK: getBestListing",()=>{cov_2nrc1g4rbc().f[6]++;cov_2nrc1g4rbc().s[38]++;(0,mocha_1.test)("Get Best Listing",async()=>{cov_2nrc1g4rbc().f[7]++;const slug=(cov_2nrc1g4rbc().s[39]++,"cool-cats-nft");const{listings}=(cov_2nrc1g4rbc().s[40]++,await setup_1.sdk.api.getAllListings(slug));const listing=(cov_2nrc1g4rbc().s[41]++,listings[0]);const tokenId=(cov_2nrc1g4rbc().s[42]++,listing.protocol_data.parameters.offer[0].identifierOrCriteria);const response=(cov_2nrc1g4rbc().s[43]++,await setup_1.sdk.api.getBestListing(slug,tokenId));cov_2nrc1g4rbc().s[44]++;(0,chai_1.assert)(response,"Response should not be null");cov_2nrc1g4rbc().s[45]++;(0,chai_1.assert)(response.order_hash,"Order hash should not be null");cov_2nrc1g4rbc().s[46]++;(0,chai_1.assert)(response.chain,"Chain should not be null");cov_2nrc1g4rbc().s[47]++;(0,chai_1.assert)(response.protocol_address,"Protocol address should not be null");cov_2nrc1g4rbc().s[48]++;(0,chai_1.assert)(response.protocol_data,"Protocol data should not be null");cov_2nrc1g4rbc().s[49]++;chai_1.assert.equal(listing.order_hash,response.order_hash,"Order hashes should match");cov_2nrc1g4rbc().s[50]++;chai_1.assert.equal(listing.protocol_address,response.protocol_address,"Protocol addresses should match");});});cov_2nrc1g4rbc().s[51]++;(0,mocha_1.suite)("SDK: getBestListings",()=>{cov_2nrc1g4rbc().f[8]++;cov_2nrc1g4rbc().s[52]++;(0,mocha_1.test)("Get Best Listing",async()=>{cov_2nrc1g4rbc().f[9]++;const slug=(cov_2nrc1g4rbc().s[53]++,"cool-cats-nft");const response=(cov_2nrc1g4rbc().s[54]++,await setup_1.sdk.api.getBestListings(slug));cov_2nrc1g4rbc().s[55]++;(0,chai_1.assert)(response,"Response should not be null");cov_2nrc1g4rbc().s[56]++;(0,chai_1.assert)(response.listings,"Listings should not be null");});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,