{"version":3,"file":"/Users/rg/dev/opensea-js/test/sdk/getBalance.spec.ts","sources":["/Users/rg/dev/opensea-js/test/sdk/getBalance.spec.ts"],"names":[],"mappings":";;AAAA,+BAA8B;AAC9B,mCAAgC;AAChC,iCAAoC;AACpC,2CAAgD;AAChD,kDAA2C;AAE3C,IAAA,aAAK,EAAC,iBAAiB,EAAE,GAAG,EAAE;IAC5B,MAAM,cAAc,GAAG,4CAA4C,CAAC;IAEpE,IAAA,YAAI,EAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,KAAK,GAAG;YACZ,aAAa,EAAE,qBAAa,CAAC,KAAK;YAClC,OAAO;YACP,YAAY,EAAE,4CAA4C;YAC1D,OAAO,EAAE,IAAI;SACd,CAAC;QACF,MAAM,OAAO,GAAG,MAAM,kBAAM,CAAC,UAAU,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;QACnE,IAAA,aAAM,EAAC,OAAO,GAAG,eAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,KAAK,GAAG;YACZ,aAAa,EAAE,qBAAa,CAAC,MAAM;YACnC,YAAY,EAAE,4CAA4C;YAC1D,OAAO,EAAE,KAAK;SACf,CAAC;QACF,MAAM,OAAO,GAAG,MAAM,kBAAM,CAAC,UAAU,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;QACnE,IAAA,aAAM,EAAC,OAAO,KAAK,EAAE,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,KAAK,GAAG;YACZ,aAAa,EAAE,qBAAa,CAAC,OAAO;YACpC,YAAY,EAAE,4CAA4C;YAC1D,OAAO,EAAE,IAAI;SACd,CAAC;QACF,MAAM,OAAO,GAAG,MAAM,kBAAM,CAAC,UAAU,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;QACnE,IAAA,aAAM,EAAC,OAAO,IAAI,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from \"chai\";\nimport { ethers } from \"ethers\";\nimport { suite, test } from \"mocha\";\nimport { TokenStandard } from \"../../src/types\";\nimport { client} from \"../utils/constants\";\n\nsuite(\"SDK: getBalance\", () => {\n  const accountAddress = \"0x000000000000000000000000000000000000dEaD\";\n\n  test(\"Returns balance for ERC20\", async () => {\n    const asset = {\n      tokenStandard: TokenStandard.ERC20,\n      // WETH\n      tokenAddress: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n      tokenId: null,\n    };\n    const balance = await client.getBalance({ accountAddress, asset });\n    assert(balance > ethers.parseEther(\"0.05\"));\n  });\n\n  test(\"Returns balance for ERC721\", async () => {\n    const asset = {\n      tokenStandard: TokenStandard.ERC721,\n      tokenAddress: \"0x0cdd3cb3bcd969c2b389488b51fb093cc0d703b1\",\n      tokenId: \"183\",\n    };\n    const balance = await client.getBalance({ accountAddress, asset });\n    assert(balance === 1n);\n  });\n\n  test(\"Returns balance for ERC1155\", async () => {\n    const asset = {\n      tokenStandard: TokenStandard.ERC1155,\n      tokenAddress: \"0x1e196b7873b8456437309ba3fa748fa6f1602da8\",\n      tokenId: \"21\",\n    };\n    const balance = await client.getBalance({ accountAddress, asset });\n    assert(balance >= 2n);\n  });\n});\n"]}