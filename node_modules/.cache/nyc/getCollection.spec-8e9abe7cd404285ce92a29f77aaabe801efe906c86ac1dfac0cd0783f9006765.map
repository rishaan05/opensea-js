{"version":3,"file":"/Users/rg/dev/opensea-js/test/integration/getCollection.spec.ts","sources":["/Users/rg/dev/opensea-js/test/integration/getCollection.spec.ts"],"names":[],"mappings":";;AAAA,+BAA8B;AAC9B,iCAAoC;AACpC,mCAA8B;AAC9B,2CAAiD;AAEjD,IAAA,aAAK,EAAC,oBAAoB,EAAE,GAAG,EAAE;IAC/B,IAAA,YAAI,EAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,UAAU,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAErD,IAAA,aAAM,EAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;QACpD,IAAA,aAAM,EAAC,UAAU,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAC;QACxD,aAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,EAAE,+BAA+B,CAAC,CAAC;QAC3E,aAAM,CAAC,KAAK,CACV,UAAU,CAAC,cAAc,EACzB,sBAAc,CAAC,QAAQ,EACvB,gCAAgC,CACjC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,KAAK,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAErD,IAAA,aAAM,EAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QAC1C,IAAA,aAAM,EAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC;QACxD,IAAA,aAAM,EAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QACtD,IAAA,aAAM,EAAC,KAAK,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport { sdk } from \"./setup\";\nimport { SafelistStatus } from \"../../src/types\";\n\nsuite(\"SDK: getCollection\", () => {\n  test(\"Get Verified Collection\", async () => {\n    const slug = \"cool-cats-nft\";\n    const collection = await sdk.api.getCollection(slug);\n\n    assert(collection, \"Collection should not be null\");\n    assert(collection.name, \"Collection name should exist\");\n    assert.equal(collection.collection, slug, \"Collection slug should match.\");\n    assert.equal(\n      collection.safelistStatus,\n      SafelistStatus.VERIFIED,\n      \"Collection should be verified.\",\n    );\n  });\n\n  test(\"Get Collection Stats\", async () => {\n    const slug = \"cool-cats-nft\";\n    const stats = await sdk.api.getCollectionStats(slug);\n\n    assert(stats, \"Stats should not be null\");\n    assert(stats.total.volume, \"Volume should not be null\");\n    assert(stats.total.sales, \"Sales should not be null\");\n    assert(stats.intervals, \"Intervals should exist\");\n  });\n});\n"]}