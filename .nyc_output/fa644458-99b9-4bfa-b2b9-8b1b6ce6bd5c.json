{"/Users/rg/dev/opensea-js/test/integration/getAccount.spec.ts":{"path":"/Users/rg/dev/opensea-js/test/integration/getAccount.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":0},"end":{"line":13,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":12,"column":7}},"6":{"start":{"line":8,"column":24},"end":{"line":8,"column":68}},"7":{"start":{"line":9,"column":24},"end":{"line":9,"column":65}},"8":{"start":{"line":10,"column":8},"end":{"line":10,"column":66}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":78}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":44},"end":{"line":13,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":37},"end":{"line":7,"column":38}},"loc":{"start":{"line":7,"column":49},"end":{"line":12,"column":5}},"line":7}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/test/integration/getAccount.spec.ts","sources":["/Users/rg/dev/opensea-js/test/integration/getAccount.spec.ts"],"names":[],"mappings":";;AAAA,+BAA8B;AAC9B,iCAAoC;AACpC,mCAA8B;AAE9B,IAAA,aAAK,EAAC,iBAAiB,EAAE,GAAG,EAAE;IAC5B,IAAA,YAAI,EAAC,aAAa,EAAE,KAAK,IAAI,EAAE;QAC7B,MAAM,OAAO,GAAG,4CAA4C,CAAC;QAC7D,MAAM,OAAO,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAElD,IAAA,aAAM,EAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC;QAC9C,aAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,sBAAsB,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport { sdk } from \"./setup\";\n\nsuite(\"SDK: getAccount\", () => {\n  test(\"Get Account\", async () => {\n    const address = \"0xfba662e1a8e91a350702cf3b87d0c2d2fb4ba57f\";\n    const account = await sdk.api.getAccount(address);\n\n    assert(account, \"Account should not be null\");\n    assert.equal(account.address, address, \"Address should match\");\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"33bb041947da4aa70dd2a305c74bd123a46a7660","contentHash":"14e2b56449d11d29dc2b290edae2f87426c350b8decf75df8f3170cf9f0f7652"},"/Users/rg/dev/opensea-js/test/integration/setup.ts":{"path":"/Users/rg/dev/opensea-js/test/integration/setup.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":231}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":42}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":49}},"6":{"start":{"line":8,"column":0},"end":{"line":12,"column":1}},"7":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"8":{"start":{"line":10,"column":8},"end":{"line":10,"column":71}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":72}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":59}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":80}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":67}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":60}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":46}},"15":{"start":{"line":19,"column":22},"end":{"line":19,"column":111}},"16":{"start":{"line":20,"column":22},"end":{"line":20,"column":111}},"17":{"start":{"line":21,"column":0},"end":{"line":21,"column":46}},"18":{"start":{"line":22,"column":0},"end":{"line":25,"column":47}},"19":{"start":{"line":25,"column":13},"end":{"line":25,"column":45}},"20":{"start":{"line":26,"column":0},"end":{"line":29,"column":47}},"21":{"start":{"line":29,"column":13},"end":{"line":29,"column":45}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":25,"column":3},"end":{"line":25,"column":4}},"loc":{"start":{"line":25,"column":13},"end":{"line":25,"column":45}},"line":25},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":3},"end":{"line":29,"column":4}},"loc":{"start":{"line":29,"column":13},"end":{"line":29,"column":45}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},{"start":{},"end":{}}],"line":9},"1":{"loc":{"start":{"line":17,"column":25},"end":{"line":17,"column":59}},"type":"binary-expr","locations":[{"start":{"line":17,"column":25},"end":{"line":17,"column":51}},{"start":{"line":17,"column":55},"end":{"line":17,"column":59}}],"line":17}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":1,"21":0},"f":{"0":0,"1":0},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/test/integration/setup.ts","sources":["/Users/rg/dev/opensea-js/test/integration/setup.ts"],"names":[],"mappings":";;;AAAA,mCAAgC;AAChC,uCAA2C;AAC3C,2CAAwC;AACxC,kDAK4B;AAE5B,KAAK,MAAM,MAAM,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC;IACzC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,GAAG,MAAM,oCAAoC,CAAC,CAAC;IACjE,CAAC;AACH,CAAC;AAEY,QAAA,qBAAqB,GAAG,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;AAChE,QAAA,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;AACnD,QAAA,qBAAqB,GAChC,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC;AACrC,QAAA,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;AAC3D,QAAA,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,IAAI,CAAC;AACpD,QAAA,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;AAEnD,MAAM,aAAa,GAAG,IAAI,eAAM,CAAC,MAAM,CACrC,2BAAyB,EACzB,gCAAoB,CACrB,CAAC;AACF,MAAM,aAAa,GAAG,IAAI,eAAM,CAAC,MAAM,CACrC,2BAAyB,EACzB,gCAAoB,CACrB,CAAC;AACW,QAAA,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC;AAEtC,QAAA,GAAG,GAAG,IAAI,gBAAU,CAC/B,aAAa,EACb;IACE,KAAK,EAAE,aAAK,CAAC,OAAO;IACpB,MAAM,EAAE,2BAAe;CACxB,EACD,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAC3C,CAAC;AAEW,QAAA,UAAU,GAAG,IAAI,gBAAU,CACtC,aAAa,EACb;IACE,KAAK,EAAE,aAAK,CAAC,OAAO;IACpB,MAAM,EAAE,2BAAe;CACxB,EACD,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAC3C,CAAC","sourcesContent":["import { ethers } from \"ethers\";\nimport { OpenSeaSDK } from \"../../src/sdk\";\nimport { Chain } from \"../../src/types\";\nimport {\n  OPENSEA_API_KEY,\n  RPC_PROVIDER_MAINNET,\n  RPC_PROVIDER_POLYGON,\n  WALLET_PRIV_KEY,\n} from \"../utils/constants\";\n\nfor (const envVar of [\"WALLET_PRIV_KEY\"]) {\n  if (!process.env[envVar]) {\n    throw new Error(`${envVar} must be set for integration tests`);\n  }\n}\n\nexport const TOKEN_ADDRESS_MAINNET = process.env.SELL_ORDER_CONTRACT_ADDRESS;\nexport const TOKEN_ID_MAINNET = process.env.SELL_ORDER_TOKEN_ID;\nexport const TOKEN_ADDRESS_POLYGON =\n  process.env.SELL_ORDER_CONTRACT_ADDRESS_POLYGON;\nexport const TOKEN_ID_POLYGON = process.env.SELL_ORDER_TOKEN_ID_POLYGON;\nexport const LISTING_AMOUNT = process.env.LISTING_AMOUNT ?? \"40\";\nexport const ETH_TO_WRAP = process.env.ETH_TO_WRAP;\n\nconst walletMainnet = new ethers.Wallet(\n  WALLET_PRIV_KEY as string,\n  RPC_PROVIDER_MAINNET,\n);\nconst walletPolygon = new ethers.Wallet(\n  WALLET_PRIV_KEY as string,\n  RPC_PROVIDER_POLYGON,\n);\nexport const walletAddress = walletMainnet.address;\n\nexport const sdk = new OpenSeaSDK(\n  walletMainnet,\n  {\n    chain: Chain.Mainnet,\n    apiKey: OPENSEA_API_KEY,\n  },\n  (line) => console.info(`MAINNET: ${line}`),\n);\n\nexport const sdkPolygon = new OpenSeaSDK(\n  walletPolygon,\n  {\n    chain: Chain.Polygon,\n    apiKey: OPENSEA_API_KEY,\n  },\n  (line) => console.info(`POLYGON: ${line}`),\n);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"42db14c9fba2aa1fe4f581f9276bd4c9ca36c1fb","contentHash":"b57a92e31e46fa3d4c98af05b10b7d8b8bd97292744f99fd98a666903cd04aba"},"/Users/rg/dev/opensea-js/src/sdk.ts":{"path":"/Users/rg/dev/opensea-js/src/sdk.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":51}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":64}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":34}},"6":{"start":{"line":8,"column":14},"end":{"line":8,"column":34}},"7":{"start":{"line":9,"column":20},"end":{"line":9,"column":42}},"8":{"start":{"line":10,"column":26},"end":{"line":10,"column":61}},"9":{"start":{"line":11,"column":16},"end":{"line":11,"column":41}},"10":{"start":{"line":12,"column":16},"end":{"line":12,"column":41}},"11":{"start":{"line":13,"column":20},"end":{"line":13,"column":52}},"12":{"start":{"line":14,"column":16},"end":{"line":14,"column":34}},"13":{"start":{"line":15,"column":16},"end":{"line":15,"column":40}},"14":{"start":{"line":31,"column":8},"end":{"line":31,"column":46}},"15":{"start":{"line":32,"column":8},"end":{"line":34,"column":10}},"16":{"start":{"line":33,"column":12},"end":{"line":33,"column":89}},"17":{"start":{"line":36,"column":8},"end":{"line":36,"column":69}},"18":{"start":{"line":37,"column":8},"end":{"line":37,"column":37}},"19":{"start":{"line":38,"column":8},"end":{"line":38,"column":51}},"20":{"start":{"line":39,"column":8},"end":{"line":40,"column":30}},"21":{"start":{"line":41,"column":8},"end":{"line":41,"column":67}},"22":{"start":{"line":43,"column":8},"end":{"line":45,"column":11}},"23":{"start":{"line":47,"column":8},"end":{"line":47,"column":43}},"24":{"start":{"line":49,"column":8},"end":{"line":49,"column":47}},"25":{"start":{"line":49,"column":42},"end":{"line":49,"column":45}},"26":{"start":{"line":51,"column":8},"end":{"line":63,"column":9}},"27":{"start":{"line":52,"column":32},"end":{"line":52,"column":85}},"28":{"start":{"line":53,"column":12},"end":{"line":53,"column":63}},"29":{"start":{"line":57,"column":12},"end":{"line":62,"column":13}},"30":{"start":{"line":61,"column":16},"end":{"line":61,"column":37}},"31":{"start":{"line":72,"column":8},"end":{"line":77,"column":9}},"32":{"start":{"line":73,"column":12},"end":{"line":73,"column":48}},"33":{"start":{"line":76,"column":12},"end":{"line":76,"column":55}},"34":{"start":{"line":85,"column":8},"end":{"line":85,"column":54}},"35":{"start":{"line":93,"column":8},"end":{"line":93,"column":48}},"36":{"start":{"line":103,"column":8},"end":{"line":103,"column":62}},"37":{"start":{"line":104,"column":22},"end":{"line":104,"column":70}},"38":{"start":{"line":105,"column":8},"end":{"line":105,"column":85}},"39":{"start":{"line":106,"column":29},"end":{"line":106,"column":147}},"40":{"start":{"line":107,"column":8},"end":{"line":114,"column":9}},"41":{"start":{"line":108,"column":32},"end":{"line":108,"column":69}},"42":{"start":{"line":109,"column":12},"end":{"line":109,"column":104}},"43":{"start":{"line":112,"column":12},"end":{"line":112,"column":33}},"44":{"start":{"line":113,"column":12},"end":{"line":113,"column":91}},"45":{"start":{"line":124,"column":8},"end":{"line":124,"column":62}},"46":{"start":{"line":125,"column":23},"end":{"line":125,"column":71}},"47":{"start":{"line":126,"column":8},"end":{"line":126,"column":81}},"48":{"start":{"line":127,"column":29},"end":{"line":127,"column":155}},"49":{"start":{"line":128,"column":8},"end":{"line":135,"column":9}},"50":{"start":{"line":129,"column":32},"end":{"line":129,"column":67}},"51":{"start":{"line":130,"column":12},"end":{"line":130,"column":111}},"52":{"start":{"line":133,"column":12},"end":{"line":133,"column":33}},"53":{"start":{"line":134,"column":12},"end":{"line":134,"column":91}},"54":{"start":{"line":138,"column":29},"end":{"line":138,"column":44}},"55":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"56":{"start":{"line":140,"column":12},"end":{"line":140,"column":74}},"57":{"start":{"line":140,"column":60},"end":{"line":140,"column":72}},"58":{"start":{"line":142,"column":42},"end":{"line":142,"column":94}},"59":{"start":{"line":143,"column":34},"end":{"line":143,"column":93}},"60":{"start":{"line":144,"column":37},"end":{"line":151,"column":9}},"61":{"start":{"line":145,"column":12},"end":{"line":150,"column":14}},"62":{"start":{"line":152,"column":35},"end":{"line":152,"column":37}},"63":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"64":{"start":{"line":154,"column":12},"end":{"line":154,"column":85}},"65":{"start":{"line":156,"column":8},"end":{"line":160,"column":9}},"66":{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},"67":{"start":{"line":158,"column":16},"end":{"line":158,"column":114}},"68":{"start":{"line":161,"column":8},"end":{"line":161,"column":34}},"69":{"start":{"line":164,"column":8},"end":{"line":169,"column":12}},"70":{"start":{"line":164,"column":41},"end":{"line":169,"column":9}},"71":{"start":{"line":193,"column":8},"end":{"line":193,"column":62}},"72":{"start":{"line":194,"column":24},"end":{"line":194,"column":80}},"73":{"start":{"line":195,"column":40},"end":{"line":195,"column":88}},"74":{"start":{"line":196,"column":30},"end":{"line":196,"column":184}},"75":{"start":{"line":197,"column":27},"end":{"line":197,"column":71}},"76":{"start":{"line":198,"column":38},"end":{"line":203,"column":10}},"77":{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},"78":{"start":{"line":205,"column":12},"end":{"line":205,"column":43}},"79":{"start":{"line":207,"column":38},"end":{"line":223,"column":26}},"80":{"start":{"line":224,"column":22},"end":{"line":224,"column":47}},"81":{"start":{"line":225,"column":8},"end":{"line":229,"column":11}},"82":{"start":{"line":256,"column":8},"end":{"line":256,"column":62}},"83":{"start":{"line":257,"column":24},"end":{"line":257,"column":80}},"84":{"start":{"line":258,"column":32},"end":{"line":258,"column":80}},"85":{"start":{"line":259,"column":8},"end":{"line":261,"column":9}},"86":{"start":{"line":260,"column":12},"end":{"line":260,"column":83}},"87":{"start":{"line":262,"column":8},"end":{"line":264,"column":9}},"88":{"start":{"line":263,"column":12},"end":{"line":263,"column":89}},"89":{"start":{"line":265,"column":40},"end":{"line":265,"column":220}},"90":{"start":{"line":266,"column":27},"end":{"line":266,"column":71}},"91":{"start":{"line":267,"column":38},"end":{"line":274,"column":10}},"92":{"start":{"line":275,"column":8},"end":{"line":277,"column":9}},"93":{"start":{"line":276,"column":12},"end":{"line":276,"column":129}},"94":{"start":{"line":278,"column":8},"end":{"line":285,"column":9}},"95":{"start":{"line":279,"column":12},"end":{"line":281,"column":60}},"96":{"start":{"line":283,"column":13},"end":{"line":285,"column":9}},"97":{"start":{"line":284,"column":12},"end":{"line":284,"column":43}},"98":{"start":{"line":286,"column":38},"end":{"line":297,"column":26}},"99":{"start":{"line":298,"column":22},"end":{"line":298,"column":47}},"100":{"start":{"line":299,"column":8},"end":{"line":303,"column":11}},"101":{"start":{"line":323,"column":8},"end":{"line":323,"column":62}},"102":{"start":{"line":324,"column":27},"end":{"line":324,"column":71}},"103":{"start":{"line":325,"column":33},"end":{"line":325,"column":147}},"104":{"start":{"line":326,"column":21},"end":{"line":326,"column":72}},"105":{"start":{"line":327,"column":43},"end":{"line":332,"column":9}},"106":{"start":{"line":333,"column":30},"end":{"line":333,"column":181}},"107":{"start":{"line":334,"column":38},"end":{"line":340,"column":10}},"108":{"start":{"line":341,"column":35},"end":{"line":344,"column":9}},"109":{"start":{"line":345,"column":24},"end":{"line":361,"column":9}},"110":{"start":{"line":362,"column":38},"end":{"line":362,"column":98}},"111":{"start":{"line":363,"column":22},"end":{"line":363,"column":47}},"112":{"start":{"line":364,"column":8},"end":{"line":364,"column":90}},"113":{"start":{"line":377,"column":8},"end":{"line":379,"column":9}},"114":{"start":{"line":378,"column":12},"end":{"line":378,"column":90}},"115":{"start":{"line":380,"column":29},"end":{"line":380,"column":128}},"116":{"start":{"line":381,"column":29},"end":{"line":381,"column":101}},"117":{"start":{"line":382,"column":24},"end":{"line":382,"column":62}},"118":{"start":{"line":383,"column":28},"end":{"line":394,"column":23}},"119":{"start":{"line":395,"column":35},"end":{"line":395,"column":59}},"120":{"start":{"line":396,"column":8},"end":{"line":398,"column":9}},"121":{"start":{"line":397,"column":12},"end":{"line":397,"column":59}},"122":{"start":{"line":399,"column":8},"end":{"line":399,"column":115}},"123":{"start":{"line":400,"column":8},"end":{"line":400,"column":39}},"124":{"start":{"line":417,"column":8},"end":{"line":417,"column":62}},"125":{"start":{"line":418,"column":32},"end":{"line":418,"column":79}},"126":{"start":{"line":419,"column":8},"end":{"line":419,"column":59}},"127":{"start":{"line":420,"column":26},"end":{"line":420,"column":61}},"128":{"start":{"line":421,"column":21},"end":{"line":424,"column":42}},"129":{"start":{"line":425,"column":24},"end":{"line":425,"column":33}},"130":{"start":{"line":426,"column":29},"end":{"line":426,"column":70}},"131":{"start":{"line":427,"column":8},"end":{"line":437,"column":9}},"132":{"start":{"line":428,"column":27},"end":{"line":428,"column":115}},"133":{"start":{"line":431,"column":30},"end":{"line":431,"column":76}},"134":{"start":{"line":432,"column":12},"end":{"line":434,"column":13}},"135":{"start":{"line":433,"column":16},"end":{"line":433,"column":58}},"136":{"start":{"line":435,"column":30},"end":{"line":435,"column":73}},"137":{"start":{"line":436,"column":12},"end":{"line":436,"column":47}},"138":{"start":{"line":438,"column":33},"end":{"line":438,"column":73}},"139":{"start":{"line":439,"column":8},"end":{"line":449,"column":9}},"140":{"start":{"line":440,"column":12},"end":{"line":442,"column":13}},"141":{"start":{"line":441,"column":16},"end":{"line":441,"column":97}},"142":{"start":{"line":443,"column":12},"end":{"line":448,"column":15}},"143":{"start":{"line":450,"column":24},"end":{"line":450,"column":56}},"144":{"start":{"line":451,"column":38},"end":{"line":458,"column":10}},"145":{"start":{"line":459,"column":28},"end":{"line":459,"column":53}},"146":{"start":{"line":460,"column":32},"end":{"line":460,"column":82}},"147":{"start":{"line":461,"column":8},"end":{"line":463,"column":9}},"148":{"start":{"line":462,"column":12},"end":{"line":462,"column":56}},"149":{"start":{"line":464,"column":8},"end":{"line":464,"column":107}},"150":{"start":{"line":465,"column":8},"end":{"line":465,"column":31}},"151":{"start":{"line":472,"column":43},"end":{"line":472,"column":86}},"152":{"start":{"line":473,"column":8},"end":{"line":478,"column":9}},"153":{"start":{"line":475,"column":16},"end":{"line":475,"column":41}},"154":{"start":{"line":477,"column":16},"end":{"line":477,"column":84}},"155":{"start":{"line":491,"column":24},"end":{"line":491,"column":56}},"156":{"start":{"line":492,"column":28},"end":{"line":494,"column":23}},"157":{"start":{"line":495,"column":8},"end":{"line":495,"column":32}},"158":{"start":{"line":508,"column":8},"end":{"line":508,"column":62}},"159":{"start":{"line":509,"column":8},"end":{"line":509,"column":65}},"160":{"start":{"line":510,"column":8},"end":{"line":510,"column":90}},"161":{"start":{"line":512,"column":32},"end":{"line":517,"column":10}},"162":{"start":{"line":519,"column":8},"end":{"line":519,"column":107}},"163":{"start":{"line":522,"column":43},"end":{"line":522,"column":86}},"164":{"start":{"line":523,"column":8},"end":{"line":528,"column":9}},"165":{"start":{"line":525,"column":16},"end":{"line":525,"column":29}},"166":{"start":{"line":527,"column":16},"end":{"line":527,"column":75}},"167":{"start":{"line":535,"column":24},"end":{"line":535,"column":54}},"168":{"start":{"line":536,"column":21},"end":{"line":536,"column":30}},"169":{"start":{"line":537,"column":24},"end":{"line":537,"column":64}},"170":{"start":{"line":538,"column":8},"end":{"line":540,"column":9}},"171":{"start":{"line":539,"column":12},"end":{"line":539,"column":105}},"172":{"start":{"line":541,"column":8},"end":{"line":541,"column":188}},"173":{"start":{"line":559,"column":8},"end":{"line":561,"column":9}},"174":{"start":{"line":560,"column":12},"end":{"line":560,"column":98}},"175":{"start":{"line":562,"column":8},"end":{"line":562,"column":97}},"176":{"start":{"line":577,"column":8},"end":{"line":577,"column":65}},"177":{"start":{"line":578,"column":24},"end":{"line":578,"column":62}},"178":{"start":{"line":579,"column":8},"end":{"line":590,"column":9}},"179":{"start":{"line":580,"column":28},"end":{"line":582,"column":29}},"180":{"start":{"line":583,"column":12},"end":{"line":583,"column":29}},"181":{"start":{"line":586,"column":12},"end":{"line":588,"column":13}},"182":{"start":{"line":587,"column":16},"end":{"line":587,"column":29}},"183":{"start":{"line":589,"column":12},"end":{"line":589,"column":24}},"184":{"start":{"line":602,"column":8},"end":{"line":631,"column":9}},"185":{"start":{"line":604,"column":33},"end":{"line":604,"column":102}},"186":{"start":{"line":605,"column":16},"end":{"line":605,"column":75}},"187":{"start":{"line":608,"column":16},"end":{"line":610,"column":17}},"188":{"start":{"line":609,"column":20},"end":{"line":609,"column":78}},"189":{"start":{"line":611,"column":33},"end":{"line":611,"column":104}},"190":{"start":{"line":612,"column":16},"end":{"line":612,"column":90}},"191":{"start":{"line":615,"column":16},"end":{"line":617,"column":17}},"192":{"start":{"line":616,"column":20},"end":{"line":616,"column":77}},"193":{"start":{"line":618,"column":33},"end":{"line":618,"column":103}},"194":{"start":{"line":619,"column":16},"end":{"line":627,"column":17}},"195":{"start":{"line":620,"column":34},"end":{"line":620,"column":82}},"196":{"start":{"line":621,"column":20},"end":{"line":621,"column":87}},"197":{"start":{"line":625,"column":20},"end":{"line":625,"column":91}},"198":{"start":{"line":626,"column":20},"end":{"line":626,"column":30}},"199":{"start":{"line":630,"column":16},"end":{"line":630,"column":77}},"200":{"start":{"line":643,"column":8},"end":{"line":643,"column":59}},"201":{"start":{"line":644,"column":8},"end":{"line":644,"column":56}},"202":{"start":{"line":646,"column":8},"end":{"line":676,"column":9}},"203":{"start":{"line":648,"column":16},"end":{"line":650,"column":17}},"204":{"start":{"line":649,"column":20},"end":{"line":649,"column":73}},"205":{"start":{"line":651,"column":33},"end":{"line":651,"column":111}},"206":{"start":{"line":652,"column":16},"end":{"line":652,"column":78}},"207":{"start":{"line":653,"column":16},"end":{"line":653,"column":22}},"208":{"start":{"line":656,"column":16},"end":{"line":658,"column":17}},"209":{"start":{"line":657,"column":20},"end":{"line":657,"column":76}},"210":{"start":{"line":659,"column":16},"end":{"line":661,"column":17}},"211":{"start":{"line":660,"column":20},"end":{"line":660,"column":75}},"212":{"start":{"line":662,"column":33},"end":{"line":662,"column":113}},"213":{"start":{"line":663,"column":16},"end":{"line":663,"column":118}},"214":{"start":{"line":664,"column":16},"end":{"line":664,"column":22}},"215":{"start":{"line":667,"column":16},"end":{"line":669,"column":17}},"216":{"start":{"line":668,"column":20},"end":{"line":668,"column":75}},"217":{"start":{"line":670,"column":33},"end":{"line":670,"column":112}},"218":{"start":{"line":671,"column":16},"end":{"line":671,"column":102}},"219":{"start":{"line":672,"column":16},"end":{"line":672,"column":22}},"220":{"start":{"line":675,"column":16},"end":{"line":675,"column":75}},"221":{"start":{"line":677,"column":8},"end":{"line":687,"column":9}},"222":{"start":{"line":678,"column":40},"end":{"line":678,"column":57}},"223":{"start":{"line":679,"column":12},"end":{"line":679,"column":119}},"224":{"start":{"line":682,"column":12},"end":{"line":682,"column":33}},"225":{"start":{"line":683,"column":12},"end":{"line":686,"column":15}},"226":{"start":{"line":700,"column":8},"end":{"line":700,"column":67}},"227":{"start":{"line":701,"column":8},"end":{"line":701,"column":65}},"228":{"start":{"line":702,"column":8},"end":{"line":705,"column":11}},"229":{"start":{"line":706,"column":24},"end":{"line":706,"column":62}},"230":{"start":{"line":707,"column":28},"end":{"line":709,"column":23}},"231":{"start":{"line":710,"column":8},"end":{"line":710,"column":108}},"232":{"start":{"line":711,"column":8},"end":{"line":711,"column":32}},"233":{"start":{"line":722,"column":8},"end":{"line":722,"column":50}},"234":{"start":{"line":723,"column":24},"end":{"line":723,"column":68}},"235":{"start":{"line":724,"column":23},"end":{"line":724,"column":25}},"236":{"start":{"line":725,"column":8},"end":{"line":734,"column":9}},"237":{"start":{"line":726,"column":12},"end":{"line":733,"column":13}},"238":{"start":{"line":727,"column":16},"end":{"line":727,"column":74}},"239":{"start":{"line":730,"column":37},"end":{"line":730,"column":81}},"240":{"start":{"line":731,"column":16},"end":{"line":731,"column":87}},"241":{"start":{"line":732,"column":16},"end":{"line":732,"column":49}},"242":{"start":{"line":735,"column":31},"end":{"line":735,"column":91}},"243":{"start":{"line":736,"column":29},"end":{"line":738,"column":23}},"244":{"start":{"line":739,"column":29},"end":{"line":739,"column":92}},"245":{"start":{"line":740,"column":26},"end":{"line":740,"column":40}},"246":{"start":{"line":741,"column":25},"end":{"line":741,"column":37}},"247":{"start":{"line":743,"column":8},"end":{"line":745,"column":9}},"248":{"start":{"line":744,"column":12},"end":{"line":744,"column":68}},"249":{"start":{"line":746,"column":8},"end":{"line":748,"column":9}},"250":{"start":{"line":747,"column":12},"end":{"line":747,"column":79}},"251":{"start":{"line":749,"column":8},"end":{"line":751,"column":9}},"252":{"start":{"line":750,"column":12},"end":{"line":750,"column":88}},"253":{"start":{"line":752,"column":8},"end":{"line":754,"column":9}},"254":{"start":{"line":753,"column":12},"end":{"line":753,"column":90}},"255":{"start":{"line":755,"column":8},"end":{"line":755,"column":39}},"256":{"start":{"line":758,"column":8},"end":{"line":758,"column":40}},"257":{"start":{"line":762,"column":34},"end":{"line":762,"column":36}},"258":{"start":{"line":763,"column":8},"end":{"line":772,"column":9}},"259":{"start":{"line":764,"column":12},"end":{"line":764,"column":67}},"260":{"start":{"line":766,"column":13},"end":{"line":772,"column":9}},"261":{"start":{"line":767,"column":30},"end":{"line":767,"column":103}},"262":{"start":{"line":767,"column":90},"end":{"line":767,"column":102}},"263":{"start":{"line":768,"column":12},"end":{"line":768,"column":49}},"264":{"start":{"line":770,"column":13},"end":{"line":772,"column":9}},"265":{"start":{"line":771,"column":12},"end":{"line":771,"column":78}},"266":{"start":{"line":773,"column":8},"end":{"line":773,"column":33}},"267":{"start":{"line":780,"column":42},"end":{"line":780,"column":84}},"268":{"start":{"line":781,"column":34},"end":{"line":781,"column":68}},"269":{"start":{"line":782,"column":8},"end":{"line":784,"column":9}},"270":{"start":{"line":783,"column":12},"end":{"line":783,"column":19}},"271":{"start":{"line":785,"column":8},"end":{"line":785,"column":219}},"272":{"start":{"line":794,"column":37},"end":{"line":794,"column":63}},"273":{"start":{"line":795,"column":8},"end":{"line":795,"column":59}},"274":{"start":{"line":796,"column":8},"end":{"line":809,"column":9}},"275":{"start":{"line":797,"column":12},"end":{"line":797,"column":87}},"276":{"start":{"line":798,"column":12},"end":{"line":798,"column":68}},"277":{"start":{"line":799,"column":12},"end":{"line":799,"column":65}},"278":{"start":{"line":800,"column":12},"end":{"line":800,"column":89}},"279":{"start":{"line":803,"column":12},"end":{"line":803,"column":62}},"280":{"start":{"line":804,"column":12},"end":{"line":807,"column":15}},"281":{"start":{"line":808,"column":12},"end":{"line":808,"column":24}},"282":{"start":{"line":812,"column":0},"end":{"line":812,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":58},"end":{"line":64,"column":5}},"line":29},"1":{"name":"(anonymous_1)","decl":{"start":{"line":32,"column":47},"end":{"line":32,"column":48}},"loc":{"start":{"line":32,"column":72},"end":{"line":34,"column":9}},"line":32},"2":{"name":"(anonymous_2)","decl":{"start":{"line":49,"column":33},"end":{"line":49,"column":34}},"loc":{"start":{"line":49,"column":42},"end":{"line":49,"column":45}},"line":49},"3":{"name":"(anonymous_3)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":47},"end":{"line":78,"column":5}},"line":71},"4":{"name":"(anonymous_4)","decl":{"start":{"line":84,"column":4},"end":{"line":84,"column":5}},"loc":{"start":{"line":84,"column":36},"end":{"line":86,"column":5}},"line":84},"5":{"name":"(anonymous_5)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":30},"end":{"line":94,"column":5}},"line":92},"6":{"name":"(anonymous_6)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":52},"end":{"line":115,"column":5}},"line":102},"7":{"name":"(anonymous_7)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":55},"end":{"line":136,"column":5}},"line":123},"8":{"name":"(anonymous_8)","decl":{"start":{"line":137,"column":4},"end":{"line":137,"column":5}},"loc":{"start":{"line":137,"column":116},"end":{"line":162,"column":5}},"line":137},"9":{"name":"(anonymous_9)","decl":{"start":{"line":140,"column":51},"end":{"line":140,"column":52}},"loc":{"start":{"line":140,"column":60},"end":{"line":140,"column":72}},"line":140},"10":{"name":"(anonymous_10)","decl":{"start":{"line":144,"column":37},"end":{"line":144,"column":38}},"loc":{"start":{"line":144,"column":65},"end":{"line":151,"column":9}},"line":144},"11":{"name":"(anonymous_11)","decl":{"start":{"line":163,"column":4},"end":{"line":163,"column":5}},"loc":{"start":{"line":163,"column":39},"end":{"line":170,"column":5}},"line":163},"12":{"name":"(anonymous_12)","decl":{"start":{"line":164,"column":24},"end":{"line":164,"column":25}},"loc":{"start":{"line":164,"column":41},"end":{"line":169,"column":9}},"line":164},"13":{"name":"(anonymous_13)","decl":{"start":{"line":192,"column":4},"end":{"line":192,"column":5}},"loc":{"start":{"line":192,"column":234},"end":{"line":230,"column":5}},"line":192},"14":{"name":"(anonymous_14)","decl":{"start":{"line":255,"column":4},"end":{"line":255,"column":5}},"loc":{"start":{"line":255,"column":279},"end":{"line":304,"column":5}},"line":255},"15":{"name":"(anonymous_15)","decl":{"start":{"line":322,"column":4},"end":{"line":322,"column":5}},"loc":{"start":{"line":322,"column":270},"end":{"line":365,"column":5}},"line":322},"16":{"name":"(anonymous_16)","decl":{"start":{"line":376,"column":4},"end":{"line":376,"column":5}},"loc":{"start":{"line":376,"column":77},"end":{"line":401,"column":5}},"line":376},"17":{"name":"(anonymous_17)","decl":{"start":{"line":416,"column":4},"end":{"line":416,"column":5}},"loc":{"start":{"line":416,"column":88},"end":{"line":466,"column":5}},"line":416},"18":{"name":"(anonymous_18)","decl":{"start":{"line":471,"column":4},"end":{"line":471,"column":5}},"loc":{"start":{"line":471,"column":32},"end":{"line":479,"column":5}},"line":471},"19":{"name":"(anonymous_19)","decl":{"start":{"line":490,"column":4},"end":{"line":490,"column":5}},"loc":{"start":{"line":490,"column":138},"end":{"line":496,"column":5}},"line":490},"20":{"name":"(anonymous_20)","decl":{"start":{"line":507,"column":4},"end":{"line":507,"column":5}},"loc":{"start":{"line":507,"column":58},"end":{"line":520,"column":5}},"line":507},"21":{"name":"(anonymous_21)","decl":{"start":{"line":521,"column":4},"end":{"line":521,"column":5}},"loc":{"start":{"line":521,"column":40},"end":{"line":529,"column":5}},"line":521},"22":{"name":"(anonymous_22)","decl":{"start":{"line":534,"column":4},"end":{"line":534,"column":5}},"loc":{"start":{"line":534,"column":66},"end":{"line":542,"column":5}},"line":534},"23":{"name":"(anonymous_23)","decl":{"start":{"line":558,"column":4},"end":{"line":558,"column":5}},"loc":{"start":{"line":558,"column":131},"end":{"line":563,"column":5}},"line":558},"24":{"name":"(anonymous_24)","decl":{"start":{"line":576,"column":4},"end":{"line":576,"column":5}},"loc":{"start":{"line":576,"column":57},"end":{"line":591,"column":5}},"line":576},"25":{"name":"(anonymous_25)","decl":{"start":{"line":601,"column":4},"end":{"line":601,"column":5}},"loc":{"start":{"line":601,"column":49},"end":{"line":632,"column":5}},"line":601},"26":{"name":"(anonymous_26)","decl":{"start":{"line":642,"column":4},"end":{"line":642,"column":5}},"loc":{"start":{"line":642,"column":74},"end":{"line":688,"column":5}},"line":642},"27":{"name":"(anonymous_27)","decl":{"start":{"line":699,"column":4},"end":{"line":699,"column":5}},"loc":{"start":{"line":699,"column":38},"end":{"line":712,"column":5}},"line":699},"28":{"name":"(anonymous_28)","decl":{"start":{"line":721,"column":4},"end":{"line":721,"column":5}},"loc":{"start":{"line":721,"column":95},"end":{"line":756,"column":5}},"line":721},"29":{"name":"(anonymous_29)","decl":{"start":{"line":757,"column":4},"end":{"line":757,"column":5}},"loc":{"start":{"line":757,"column":27},"end":{"line":759,"column":5}},"line":757},"30":{"name":"(anonymous_30)","decl":{"start":{"line":761,"column":4},"end":{"line":761,"column":5}},"loc":{"start":{"line":761,"column":34},"end":{"line":774,"column":5}},"line":761},"31":{"name":"(anonymous_31)","decl":{"start":{"line":767,"column":80},"end":{"line":767,"column":81}},"loc":{"start":{"line":767,"column":90},"end":{"line":767,"column":102}},"line":767},"32":{"name":"(anonymous_32)","decl":{"start":{"line":779,"column":4},"end":{"line":779,"column":5}},"loc":{"start":{"line":779,"column":53},"end":{"line":786,"column":5}},"line":779},"33":{"name":"(anonymous_33)","decl":{"start":{"line":793,"column":4},"end":{"line":793,"column":5}},"loc":{"start":{"line":793,"column":67},"end":{"line":810,"column":5}},"line":793}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":34},"end":{"line":29,"column":48}},"type":"default-arg","locations":[{"start":{"line":29,"column":46},"end":{"line":29,"column":48}}],"line":29},"1":{"loc":{"start":{"line":36,"column":8},"end":{"line":36,"column":68}},"type":"binary-expr","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":23}},{"start":{"line":36,"column":28},"end":{"line":36,"column":67}}],"line":36},"2":{"loc":{"start":{"line":39,"column":25},"end":{"line":40,"column":28}},"type":"binary-expr","locations":[{"start":{"line":39,"column":25},"end":{"line":39,"column":50}},{"start":{"line":40,"column":12},"end":{"line":40,"column":28}}],"line":39},"3":{"loc":{"start":{"line":41,"column":33},"end":{"line":41,"column":66}},"type":"binary-expr","locations":[{"start":{"line":41,"column":33},"end":{"line":41,"column":49}},{"start":{"line":41,"column":53},"end":{"line":41,"column":66}}],"line":41},"4":{"loc":{"start":{"line":49,"column":22},"end":{"line":49,"column":46}},"type":"binary-expr","locations":[{"start":{"line":49,"column":22},"end":{"line":49,"column":28}},{"start":{"line":49,"column":33},"end":{"line":49,"column":45}}],"line":49},"5":{"loc":{"start":{"line":57,"column":12},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":62,"column":13}},{"start":{"line":60,"column":17},"end":{"line":62,"column":13}}],"line":57},"6":{"loc":{"start":{"line":71,"column":33},"end":{"line":71,"column":45}},"type":"default-arg","locations":[{"start":{"line":71,"column":40},"end":{"line":71,"column":45}}],"line":71},"7":{"loc":{"start":{"line":72,"column":8},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":77,"column":9}},{"start":{"line":75,"column":13},"end":{"line":77,"column":9}}],"line":72},"8":{"loc":{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":141,"column":9}},{"start":{},"end":{}}],"line":139},"9":{"loc":{"start":{"line":148,"column":64},"end":{"line":148,"column":88}},"type":"binary-expr","locations":[{"start":{"line":148,"column":64},"end":{"line":148,"column":73}},{"start":{"line":148,"column":77},"end":{"line":148,"column":88}}],"line":148},"10":{"loc":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},{"start":{},"end":{}}],"line":153},"11":{"loc":{"start":{"line":156,"column":8},"end":{"line":160,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":160,"column":9}},{"start":{},"end":{}}],"line":156},"12":{"loc":{"start":{"line":163,"column":22},"end":{"line":163,"column":37}},"type":"default-arg","locations":[{"start":{"line":163,"column":35},"end":{"line":163,"column":37}}],"line":163},"13":{"loc":{"start":{"line":167,"column":24},"end":{"line":167,"column":51}},"type":"binary-expr","locations":[{"start":{"line":167,"column":24},"end":{"line":167,"column":38}},{"start":{"line":167,"column":42},"end":{"line":167,"column":51}}],"line":167},"14":{"loc":{"start":{"line":168,"column":20},"end":{"line":168,"column":55}},"type":"binary-expr","locations":[{"start":{"line":168,"column":20},"end":{"line":168,"column":48}},{"start":{"line":168,"column":52},"end":{"line":168,"column":55}}],"line":168},"15":{"loc":{"start":{"line":192,"column":60},"end":{"line":192,"column":72}},"type":"default-arg","locations":[{"start":{"line":192,"column":71},"end":{"line":192,"column":72}}],"line":192},"16":{"loc":{"start":{"line":192,"column":104},"end":{"line":192,"column":165}},"type":"default-arg","locations":[{"start":{"line":192,"column":126},"end":{"line":192,"column":165}}],"line":192},"17":{"loc":{"start":{"line":192,"column":167},"end":{"line":192,"column":200}},"type":"default-arg","locations":[{"start":{"line":192,"column":196},"end":{"line":192,"column":200}}],"line":192},"18":{"loc":{"start":{"line":192,"column":202},"end":{"line":192,"column":229}},"type":"default-arg","locations":[{"start":{"line":192,"column":209},"end":{"line":192,"column":229}}],"line":192},"19":{"loc":{"start":{"line":195,"column":72},"end":{"line":195,"column":85}},"type":"binary-expr","locations":[{"start":{"line":195,"column":72},"end":{"line":195,"column":80}},{"start":{"line":195,"column":84},"end":{"line":195,"column":85}}],"line":195},"20":{"loc":{"start":{"line":196,"column":107},"end":{"line":196,"column":170}},"type":"binary-expr","locations":[{"start":{"line":196,"column":107},"end":{"line":196,"column":121}},{"start":{"line":196,"column":125},"end":{"line":196,"column":170}}],"line":196},"21":{"loc":{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},"type":"if","locations":[{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},{"start":{},"end":{}}],"line":204},"22":{"loc":{"start":{"line":215,"column":21},"end":{"line":217,"column":74}},"type":"cond-expr","locations":[{"start":{"line":216,"column":18},"end":{"line":216,"column":51}},{"start":{"line":217,"column":18},"end":{"line":217,"column":74}}],"line":215},"23":{"loc":{"start":{"line":220,"column":25},"end":{"line":220,"column":34}},"type":"binary-expr","locations":[{"start":{"line":220,"column":25},"end":{"line":220,"column":29}},{"start":{"line":220,"column":33},"end":{"line":220,"column":34}}],"line":220},"24":{"loc":{"start":{"line":255,"column":73},"end":{"line":255,"column":85}},"type":"default-arg","locations":[{"start":{"line":255,"column":84},"end":{"line":255,"column":85}}],"line":255},"25":{"loc":{"start":{"line":255,"column":130},"end":{"line":255,"column":179}},"type":"default-arg","locations":[{"start":{"line":255,"column":152},"end":{"line":255,"column":179}}],"line":255},"26":{"loc":{"start":{"line":255,"column":211},"end":{"line":255,"column":245}},"type":"default-arg","locations":[{"start":{"line":255,"column":240},"end":{"line":255,"column":245}}],"line":255},"27":{"loc":{"start":{"line":255,"column":247},"end":{"line":255,"column":274}},"type":"default-arg","locations":[{"start":{"line":255,"column":254},"end":{"line":255,"column":274}}],"line":255},"28":{"loc":{"start":{"line":258,"column":64},"end":{"line":258,"column":77}},"type":"binary-expr","locations":[{"start":{"line":258,"column":64},"end":{"line":258,"column":72}},{"start":{"line":258,"column":76},"end":{"line":258,"column":77}}],"line":258},"29":{"loc":{"start":{"line":259,"column":8},"end":{"line":261,"column":9}},"type":"if","locations":[{"start":{"line":259,"column":8},"end":{"line":261,"column":9}},{"start":{},"end":{}}],"line":259},"30":{"loc":{"start":{"line":262,"column":8},"end":{"line":264,"column":9}},"type":"if","locations":[{"start":{"line":262,"column":8},"end":{"line":264,"column":9}},{"start":{},"end":{}}],"line":262},"31":{"loc":{"start":{"line":262,"column":12},"end":{"line":262,"column":80}},"type":"binary-expr","locations":[{"start":{"line":262,"column":12},"end":{"line":262,"column":26}},{"start":{"line":262,"column":30},"end":{"line":262,"column":80}}],"line":262},"32":{"loc":{"start":{"line":265,"column":119},"end":{"line":265,"column":182}},"type":"binary-expr","locations":[{"start":{"line":265,"column":119},"end":{"line":265,"column":133}},{"start":{"line":265,"column":137},"end":{"line":265,"column":182}}],"line":265},"33":{"loc":{"start":{"line":265,"column":197},"end":{"line":265,"column":219}},"type":"binary-expr","locations":[{"start":{"line":265,"column":197},"end":{"line":265,"column":206}},{"start":{"line":265,"column":210},"end":{"line":265,"column":219}}],"line":265},"34":{"loc":{"start":{"line":275,"column":8},"end":{"line":277,"column":9}},"type":"if","locations":[{"start":{"line":275,"column":8},"end":{"line":277,"column":9}},{"start":{},"end":{}}],"line":275},"35":{"loc":{"start":{"line":278,"column":8},"end":{"line":285,"column":9}},"type":"if","locations":[{"start":{"line":278,"column":8},"end":{"line":285,"column":9}},{"start":{"line":283,"column":13},"end":{"line":285,"column":9}}],"line":278},"36":{"loc":{"start":{"line":279,"column":19},"end":{"line":281,"column":59}},"type":"cond-expr","locations":[{"start":{"line":280,"column":18},"end":{"line":280,"column":59}},{"start":{"line":281,"column":18},"end":{"line":281,"column":59}}],"line":279},"37":{"loc":{"start":{"line":283,"column":13},"end":{"line":285,"column":9}},"type":"if","locations":[{"start":{"line":283,"column":13},"end":{"line":285,"column":9}},{"start":{},"end":{}}],"line":283},"38":{"loc":{"start":{"line":290,"column":21},"end":{"line":291,"column":72}},"type":"binary-expr","locations":[{"start":{"line":290,"column":21},"end":{"line":290,"column":47}},{"start":{"line":291,"column":16},"end":{"line":291,"column":72}}],"line":290},"39":{"loc":{"start":{"line":294,"column":25},"end":{"line":294,"column":34}},"type":"binary-expr","locations":[{"start":{"line":294,"column":25},"end":{"line":294,"column":29}},{"start":{"line":294,"column":33},"end":{"line":294,"column":34}}],"line":294},"40":{"loc":{"start":{"line":296,"column":31},"end":{"line":296,"column":60}},"type":"cond-expr","locations":[{"start":{"line":296,"column":48},"end":{"line":296,"column":53}},{"start":{"line":296,"column":56},"end":{"line":296,"column":60}}],"line":296},"41":{"loc":{"start":{"line":322,"column":114},"end":{"line":322,"column":175}},"type":"default-arg","locations":[{"start":{"line":322,"column":136},"end":{"line":322,"column":175}}],"line":322},"42":{"loc":{"start":{"line":322,"column":177},"end":{"line":322,"column":211}},"type":"default-arg","locations":[{"start":{"line":322,"column":206},"end":{"line":322,"column":211}}],"line":322},"43":{"loc":{"start":{"line":322,"column":213},"end":{"line":322,"column":242}},"type":"default-arg","locations":[{"start":{"line":322,"column":238},"end":{"line":322,"column":242}}],"line":322},"44":{"loc":{"start":{"line":333,"column":109},"end":{"line":333,"column":172}},"type":"binary-expr","locations":[{"start":{"line":333,"column":109},"end":{"line":333,"column":123}},{"start":{"line":333,"column":127},"end":{"line":333,"column":172}}],"line":333},"45":{"loc":{"start":{"line":354,"column":21},"end":{"line":355,"column":72}},"type":"binary-expr","locations":[{"start":{"line":354,"column":21},"end":{"line":354,"column":47}},{"start":{"line":355,"column":16},"end":{"line":355,"column":72}}],"line":354},"46":{"loc":{"start":{"line":358,"column":25},"end":{"line":358,"column":34}},"type":"binary-expr","locations":[{"start":{"line":358,"column":25},"end":{"line":358,"column":29}},{"start":{"line":358,"column":33},"end":{"line":358,"column":34}}],"line":358},"47":{"loc":{"start":{"line":377,"column":8},"end":{"line":379,"column":9}},"type":"if","locations":[{"start":{"line":377,"column":8},"end":{"line":379,"column":9}},{"start":{},"end":{}}],"line":377},"48":{"loc":{"start":{"line":396,"column":8},"end":{"line":398,"column":9}},"type":"if","locations":[{"start":{"line":396,"column":8},"end":{"line":398,"column":9}},{"start":{},"end":{}}],"line":396},"49":{"loc":{"start":{"line":418,"column":32},"end":{"line":418,"column":79}},"type":"binary-expr","locations":[{"start":{"line":418,"column":32},"end":{"line":418,"column":53}},{"start":{"line":418,"column":57},"end":{"line":418,"column":79}}],"line":418},"50":{"loc":{"start":{"line":420,"column":26},"end":{"line":420,"column":61}},"type":"binary-expr","locations":[{"start":{"line":420,"column":26},"end":{"line":420,"column":41}},{"start":{"line":420,"column":45},"end":{"line":420,"column":61}}],"line":420},"51":{"loc":{"start":{"line":421,"column":21},"end":{"line":424,"column":42}},"type":"binary-expr","locations":[{"start":{"line":421,"column":21},"end":{"line":421,"column":31}},{"start":{"line":422,"column":13},"end":{"line":424,"column":41}}],"line":421},"52":{"loc":{"start":{"line":422,"column":13},"end":{"line":424,"column":41}},"type":"cond-expr","locations":[{"start":{"line":423,"column":18},"end":{"line":423,"column":43}},{"start":{"line":424,"column":18},"end":{"line":424,"column":41}}],"line":422},"53":{"loc":{"start":{"line":426,"column":29},"end":{"line":426,"column":70}},"type":"binary-expr","locations":[{"start":{"line":426,"column":29},"end":{"line":426,"column":47}},{"start":{"line":426,"column":51},"end":{"line":426,"column":70}}],"line":426},"54":{"loc":{"start":{"line":427,"column":8},"end":{"line":437,"column":9}},"type":"if","locations":[{"start":{"line":427,"column":8},"end":{"line":437,"column":9}},{"start":{},"end":{}}],"line":427},"55":{"loc":{"start":{"line":432,"column":12},"end":{"line":434,"column":13}},"type":"if","locations":[{"start":{"line":432,"column":12},"end":{"line":434,"column":13}},{"start":{},"end":{}}],"line":432},"56":{"loc":{"start":{"line":432,"column":16},"end":{"line":432,"column":75}},"type":"binary-expr","locations":[{"start":{"line":432,"column":16},"end":{"line":432,"column":37}},{"start":{"line":432,"column":41},"end":{"line":432,"column":75}}],"line":432},"57":{"loc":{"start":{"line":438,"column":33},"end":{"line":438,"column":73}},"type":"cond-expr","locations":[{"start":{"line":438,"column":52},"end":{"line":438,"column":65}},{"start":{"line":438,"column":68},"end":{"line":438,"column":73}}],"line":438},"58":{"loc":{"start":{"line":439,"column":8},"end":{"line":449,"column":9}},"type":"if","locations":[{"start":{"line":439,"column":8},"end":{"line":449,"column":9}},{"start":{},"end":{}}],"line":439},"59":{"loc":{"start":{"line":440,"column":12},"end":{"line":442,"column":13}},"type":"if","locations":[{"start":{"line":440,"column":12},"end":{"line":442,"column":13}},{"start":{},"end":{}}],"line":440},"60":{"loc":{"start":{"line":461,"column":8},"end":{"line":463,"column":9}},"type":"if","locations":[{"start":{"line":461,"column":8},"end":{"line":463,"column":9}},{"start":{},"end":{}}],"line":461},"61":{"loc":{"start":{"line":473,"column":8},"end":{"line":478,"column":9}},"type":"switch","locations":[{"start":{"line":474,"column":12},"end":{"line":475,"column":41}},{"start":{"line":476,"column":12},"end":{"line":477,"column":84}}],"line":473},"62":{"loc":{"start":{"line":490,"column":64},"end":{"line":490,"column":122}},"type":"default-arg","locations":[{"start":{"line":490,"column":82},"end":{"line":490,"column":122}}],"line":490},"63":{"loc":{"start":{"line":523,"column":8},"end":{"line":528,"column":9}},"type":"switch","locations":[{"start":{"line":524,"column":12},"end":{"line":525,"column":29}},{"start":{"line":526,"column":12},"end":{"line":527,"column":75}}],"line":523},"64":{"loc":{"start":{"line":538,"column":8},"end":{"line":540,"column":9}},"type":"if","locations":[{"start":{"line":538,"column":8},"end":{"line":540,"column":9}},{"start":{},"end":{}}],"line":538},"65":{"loc":{"start":{"line":558,"column":58},"end":{"line":558,"column":76}},"type":"default-arg","locations":[{"start":{"line":558,"column":66},"end":{"line":558,"column":76}}],"line":558},"66":{"loc":{"start":{"line":559,"column":8},"end":{"line":561,"column":9}},"type":"if","locations":[{"start":{"line":559,"column":8},"end":{"line":561,"column":9}},{"start":{},"end":{}}],"line":559},"67":{"loc":{"start":{"line":586,"column":12},"end":{"line":588,"column":13}},"type":"if","locations":[{"start":{"line":586,"column":12},"end":{"line":588,"column":13}},{"start":{},"end":{}}],"line":586},"68":{"loc":{"start":{"line":586,"column":16},"end":{"line":586,"column":83}},"type":"binary-expr","locations":[{"start":{"line":586,"column":16},"end":{"line":586,"column":48}},{"start":{"line":586,"column":52},"end":{"line":586,"column":83}}],"line":586},"69":{"loc":{"start":{"line":602,"column":8},"end":{"line":631,"column":9}},"type":"switch","locations":[{"start":{"line":603,"column":12},"end":{"line":606,"column":13}},{"start":{"line":607,"column":12},"end":{"line":613,"column":13}},{"start":{"line":614,"column":12},"end":{"line":628,"column":13}},{"start":{"line":629,"column":12},"end":{"line":630,"column":77}}],"line":602},"70":{"loc":{"start":{"line":608,"column":16},"end":{"line":610,"column":17}},"type":"if","locations":[{"start":{"line":608,"column":16},"end":{"line":610,"column":17}},{"start":{},"end":{}}],"line":608},"71":{"loc":{"start":{"line":608,"column":20},"end":{"line":608,"column":73}},"type":"binary-expr","locations":[{"start":{"line":608,"column":20},"end":{"line":608,"column":47}},{"start":{"line":608,"column":51},"end":{"line":608,"column":73}}],"line":608},"72":{"loc":{"start":{"line":615,"column":16},"end":{"line":617,"column":17}},"type":"if","locations":[{"start":{"line":615,"column":16},"end":{"line":617,"column":17}},{"start":{},"end":{}}],"line":615},"73":{"loc":{"start":{"line":615,"column":20},"end":{"line":615,"column":73}},"type":"binary-expr","locations":[{"start":{"line":615,"column":20},"end":{"line":615,"column":47}},{"start":{"line":615,"column":51},"end":{"line":615,"column":73}}],"line":615},"74":{"loc":{"start":{"line":625,"column":65},"end":{"line":625,"column":87}},"type":"binary-expr","locations":[{"start":{"line":625,"column":65},"end":{"line":625,"column":78}},{"start":{"line":625,"column":82},"end":{"line":625,"column":87}}],"line":625},"75":{"loc":{"start":{"line":646,"column":8},"end":{"line":676,"column":9}},"type":"switch","locations":[{"start":{"line":647,"column":12},"end":{"line":654,"column":13}},{"start":{"line":655,"column":12},"end":{"line":665,"column":13}},{"start":{"line":666,"column":12},"end":{"line":673,"column":13}},{"start":{"line":674,"column":12},"end":{"line":675,"column":75}}],"line":646},"76":{"loc":{"start":{"line":648,"column":16},"end":{"line":650,"column":17}},"type":"if","locations":[{"start":{"line":648,"column":16},"end":{"line":650,"column":17}},{"start":{},"end":{}}],"line":648},"77":{"loc":{"start":{"line":656,"column":16},"end":{"line":658,"column":17}},"type":"if","locations":[{"start":{"line":656,"column":16},"end":{"line":658,"column":17}},{"start":{},"end":{}}],"line":656},"78":{"loc":{"start":{"line":656,"column":20},"end":{"line":656,"column":73}},"type":"binary-expr","locations":[{"start":{"line":656,"column":20},"end":{"line":656,"column":47}},{"start":{"line":656,"column":51},"end":{"line":656,"column":73}}],"line":656},"79":{"loc":{"start":{"line":659,"column":16},"end":{"line":661,"column":17}},"type":"if","locations":[{"start":{"line":659,"column":16},"end":{"line":661,"column":17}},{"start":{},"end":{}}],"line":659},"80":{"loc":{"start":{"line":667,"column":16},"end":{"line":669,"column":17}},"type":"if","locations":[{"start":{"line":667,"column":16},"end":{"line":669,"column":17}},{"start":{},"end":{}}],"line":667},"81":{"loc":{"start":{"line":667,"column":20},"end":{"line":667,"column":73}},"type":"binary-expr","locations":[{"start":{"line":667,"column":20},"end":{"line":667,"column":47}},{"start":{"line":667,"column":51},"end":{"line":667,"column":73}}],"line":667},"82":{"loc":{"start":{"line":725,"column":8},"end":{"line":734,"column":9}},"type":"if","locations":[{"start":{"line":725,"column":8},"end":{"line":734,"column":9}},{"start":{},"end":{}}],"line":725},"83":{"loc":{"start":{"line":726,"column":12},"end":{"line":733,"column":13}},"type":"if","locations":[{"start":{"line":726,"column":12},"end":{"line":733,"column":13}},{"start":{"line":729,"column":17},"end":{"line":733,"column":13}}],"line":726},"84":{"loc":{"start":{"line":736,"column":29},"end":{"line":738,"column":23}},"type":"cond-expr","locations":[{"start":{"line":737,"column":14},"end":{"line":737,"column":72}},{"start":{"line":738,"column":14},"end":{"line":738,"column":23}}],"line":736},"85":{"loc":{"start":{"line":739,"column":29},"end":{"line":739,"column":92}},"type":"cond-expr","locations":[{"start":{"line":739,"column":58},"end":{"line":739,"column":87}},{"start":{"line":739,"column":90},"end":{"line":739,"column":92}}],"line":739},"86":{"loc":{"start":{"line":743,"column":8},"end":{"line":745,"column":9}},"type":"if","locations":[{"start":{"line":743,"column":8},"end":{"line":745,"column":9}},{"start":{},"end":{}}],"line":743},"87":{"loc":{"start":{"line":743,"column":12},"end":{"line":743,"column":53}},"type":"binary-expr","locations":[{"start":{"line":743,"column":12},"end":{"line":743,"column":31}},{"start":{"line":743,"column":35},"end":{"line":743,"column":53}}],"line":743},"88":{"loc":{"start":{"line":746,"column":8},"end":{"line":748,"column":9}},"type":"if","locations":[{"start":{"line":746,"column":8},"end":{"line":748,"column":9}},{"start":{},"end":{}}],"line":746},"89":{"loc":{"start":{"line":746,"column":12},"end":{"line":746,"column":60}},"type":"binary-expr","locations":[{"start":{"line":746,"column":12},"end":{"line":746,"column":19}},{"start":{"line":746,"column":23},"end":{"line":746,"column":60}}],"line":746},"90":{"loc":{"start":{"line":749,"column":8},"end":{"line":751,"column":9}},"type":"if","locations":[{"start":{"line":749,"column":8},"end":{"line":751,"column":9}},{"start":{},"end":{}}],"line":749},"91":{"loc":{"start":{"line":752,"column":8},"end":{"line":754,"column":9}},"type":"if","locations":[{"start":{"line":752,"column":8},"end":{"line":754,"column":9}},{"start":{},"end":{}}],"line":752},"92":{"loc":{"start":{"line":752,"column":12},"end":{"line":752,"column":61}},"type":"binary-expr","locations":[{"start":{"line":752,"column":12},"end":{"line":752,"column":28}},{"start":{"line":752,"column":32},"end":{"line":752,"column":61}}],"line":752},"93":{"loc":{"start":{"line":763,"column":8},"end":{"line":772,"column":9}},"type":"if","locations":[{"start":{"line":763,"column":8},"end":{"line":772,"column":9}},{"start":{"line":766,"column":13},"end":{"line":772,"column":9}}],"line":763},"94":{"loc":{"start":{"line":766,"column":13},"end":{"line":772,"column":9}},"type":"if","locations":[{"start":{"line":766,"column":13},"end":{"line":772,"column":9}},{"start":{"line":770,"column":13},"end":{"line":772,"column":9}}],"line":766},"95":{"loc":{"start":{"line":770,"column":13},"end":{"line":772,"column":9}},"type":"if","locations":[{"start":{"line":770,"column":13},"end":{"line":772,"column":9}},{"start":{},"end":{}}],"line":770},"96":{"loc":{"start":{"line":782,"column":8},"end":{"line":784,"column":9}},"type":"if","locations":[{"start":{"line":782,"column":8},"end":{"line":784,"column":9}},{"start":{},"end":{}}],"line":782},"97":{"loc":{"start":{"line":785,"column":147},"end":{"line":785,"column":215}},"type":"cond-expr","locations":[{"start":{"line":785,"column":178},"end":{"line":785,"column":206}},{"start":{"line":785,"column":209},"end":{"line":785,"column":215}}],"line":785}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":3,"15":3,"16":16,"17":3,"18":3,"19":3,"20":3,"21":3,"22":3,"23":3,"24":3,"25":0,"26":3,"27":3,"28":3,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":4,"55":4,"56":2,"57":4,"58":4,"59":4,"60":4,"61":8,"62":4,"63":4,"64":1,"65":4,"66":4,"67":7,"68":4,"69":3,"70":3,"71":2,"72":2,"73":2,"74":2,"75":2,"76":2,"77":2,"78":0,"79":2,"80":2,"81":2,"82":1,"83":1,"84":1,"85":1,"86":0,"87":1,"88":0,"89":1,"90":1,"91":1,"92":1,"93":0,"94":1,"95":0,"96":1,"97":0,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":4,"234":4,"235":4,"236":4,"237":3,"238":3,"239":0,"240":0,"241":0,"242":4,"243":4,"244":4,"245":4,"246":4,"247":4,"248":0,"249":4,"250":0,"251":4,"252":0,"253":4,"254":0,"255":4,"256":0,"257":4,"258":4,"259":4,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":4,"267":4,"268":4,"269":4,"270":4,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":1},"f":{"0":3,"1":16,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":4,"9":4,"10":8,"11":3,"12":3,"13":2,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":4,"29":0,"30":4,"31":0,"32":4,"33":0},"b":{"0":[0],"1":[3,0],"2":[3,0],"3":[3,0],"4":[3,0],"5":[0,0],"6":[0],"7":[0,0],"8":[2,2],"9":[8,6],"10":[1,3],"11":[4,0],"12":[0],"13":[3,0],"14":[3,0],"15":[2],"16":[2],"17":[2],"18":[2],"19":[2,0],"20":[2,0],"21":[0,2],"22":[2,0],"23":[2,2],"24":[1],"25":[1],"26":[1],"27":[1],"28":[1,0],"29":[0,1],"30":[0,1],"31":[1,0],"32":[1,0],"33":[1,1],"34":[0,1],"35":[0,1],"36":[0,0],"37":[0,1],"38":[1,0],"39":[1,1],"40":[0,1],"41":[0],"42":[1],"43":[1],"44":[1,0],"45":[1,0],"46":[1,1],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0],"63":[0,0],"64":[0,0],"65":[0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0,0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0,0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[3,1],"83":[3,0],"84":[0,4],"85":[0,4],"86":[0,4],"87":[4,4],"88":[0,4],"89":[4,1],"90":[0,4],"91":[0,4],"92":[4,0],"93":[4,0],"94":[0,0],"95":[0,0],"96":[4,0],"97":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/sdk.ts","sources":["/Users/rg/dev/opensea-js/src/sdk.ts"],"names":[],"mappings":"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","sourcesContent":["import EventEmitter = require(\"events\");\nimport { Seaport } from \"@opensea/seaport-js\";\nimport {\n  CROSS_CHAIN_SEAPORT_V1_6_ADDRESS,\n  OPENSEA_CONDUIT_KEY,\n} from \"@opensea/seaport-js/lib/constants\";\nimport {\n  AdvancedOrder,\n  ConsiderationInputItem,\n  CreateInputItem,\n  OrderComponents,\n} from \"@opensea/seaport-js/lib/types\";\nimport {\n  BigNumberish,\n  Contract,\n  Overrides,\n  Signer,\n  ethers,\n  parseEther,\n  JsonRpcProvider,\n  ContractTransactionResponse,\n  ZeroAddress,\n} from \"ethers\";\nimport { OpenSeaAPI } from \"./api/api\";\nimport { CollectionOffer, Listing, NFT, Order } from \"./api/types\";\nimport {\n  INVERSE_BASIS_POINT,\n  ENGLISH_AUCTION_ZONE_MAINNETS,\n  ENGLISH_AUCTION_ZONE_TESTNETS,\n} from \"./constants\";\nimport {\n  constructPrivateListingCounterOrder,\n  getPrivateListingConsiderations,\n  getPrivateListingFulfillments,\n} from \"./orders/privateListings\";\nimport { OrderType, OrderV2 } from \"./orders/types\";\nimport { DEFAULT_SEAPORT_CONTRACT_ADDRESS } from \"./orders/utils\";\nimport {\n  ERC1155__factory,\n  ERC20__factory,\n  ERC721__factory,\n} from \"./typechain/contracts\";\nimport {\n  EventData,\n  EventType,\n  Chain,\n  OpenSeaAPIConfig,\n  OpenSeaCollection,\n  OrderSide,\n  TokenStandard,\n  AssetWithTokenStandard,\n  AssetWithTokenId,\n} from \"./types\";\nimport {\n  getMaxOrderExpirationTimestamp,\n  hasErrorCode,\n  getAssetItemType,\n  getAddressAfterRemappingSharedStorefrontAddressToLazyMintAdapterAddress,\n  requireValidProtocol,\n  getWETHAddress,\n  isTestChain,\n  basisPointsForFee,\n  totalBasisPointsForFees,\n  getChainId,\n} from \"./utils/utils\";\n\n/**\n * The OpenSea SDK main class.\n * @category Main Classes\n */\nexport class OpenSeaSDK {\n  /** Provider to use for transactions. */\n  public provider: JsonRpcProvider;\n  /** Seaport v1.6 client @see {@link https://github.com/ProjectOpenSea/seaport-js} */\n  public seaport_v1_6: Seaport;\n  /** Logger function to use when debugging */\n  public logger: (arg: string) => void;\n  /** API instance */\n  public readonly api: OpenSeaAPI;\n  /** The configured chain */\n  public readonly chain: Chain;\n  /** Internal cache of decimals for payment tokens to save network requests */\n  private _cachedPaymentTokenDecimals: { [address: string]: number } = {};\n\n  private _emitter: EventEmitter;\n  private _signerOrProvider: Signer | JsonRpcProvider;\n\n  /**\n   * Create a new instance of OpenSeaSDK.\n   * @param signerOrProvider Signer or provider to use for transactions. For example:\n   * `new ethers.providers.JsonRpcProvider('https://mainnet.infura.io')` or\n   * `new ethers.Wallet(privKey, provider)`\n   * @param apiConfig configuration options, including `chain`\n   * @param logger optional function for logging debug strings. defaults to no logging\n   */\n  constructor(\n    signerOrProvider: Signer | JsonRpcProvider,\n    apiConfig: OpenSeaAPIConfig = {},\n    logger?: (arg: string) => void,\n  ) {\n    // API config\n    apiConfig.chain ??= Chain.Mainnet;\n    this.chain = apiConfig.chain;\n    this.api = new OpenSeaAPI(apiConfig);\n\n    this.provider = ((signerOrProvider as Signer).provider ??\n      signerOrProvider) as JsonRpcProvider;\n    this._signerOrProvider = signerOrProvider ?? this.provider;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.seaport_v1_6 = new Seaport(this._signerOrProvider as any, {\n      overrides: { defaultConduitKey: OPENSEA_CONDUIT_KEY },\n    });\n\n    // Emit events\n    this._emitter = new EventEmitter();\n\n    // Logger: default to no logging if fn not provided\n    this.logger = logger ?? ((arg: string) => arg);\n\n    // Cache decimals for WETH payment token to skip network request\n    try {\n      const wethAddress = getWETHAddress(this.chain).toLowerCase();\n      this._cachedPaymentTokenDecimals[wethAddress] = 18;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (error: any) {\n      if (error.message.includes(\"Unknown WETH address\")) {\n        // Ignore\n      } else {\n        console.error(error);\n      }\n    }\n  }\n\n  /**\n   * Add a listener for events emitted by the SDK.\n   * @param event The {@link EventType} to listen to.\n   * @param listener A callback that will accept an object with {@link EventData}\\\n   * @param once Whether the listener should only be called once, or continue listening until removed.\n   */\n  public addListener(\n    event: EventType,\n    listener: (data: EventData) => void,\n    once = false,\n  ) {\n    if (once) {\n      this._emitter.once(event, listener);\n    } else {\n      this._emitter.addListener(event, listener);\n    }\n  }\n\n  /**\n   * Remove an event listener by calling `.removeListener()` on an event and listener.\n   * @param event The {@link EventType} to remove a listener for\\\n   * @param listener The listener to remove\n   */\n  public removeListener(event: EventType, listener: (data: EventData) => void) {\n    this._emitter.removeListener(event, listener);\n  }\n\n  /**\n   * Remove all event listeners. This should be called when you're unmounting\n   * a component that listens to events to make UI updates.\n   * @param event Optional EventType to remove listeners for\n   */\n  public removeAllListeners(event?: EventType) {\n    this._emitter.removeAllListeners(event);\n  }\n\n  /**\n   * Wrap ETH into WETH.\n   * W-ETH is needed for making offers.\n   * @param options\n   * @param options.amountInEth Amount of ether to wrap\n   * @param options.accountAddress Address of the user's wallet containing the ether\n   */\n  public async wrapEth({\n    amountInEth,\n    accountAddress,\n  }: {\n    amountInEth: BigNumberish;\n    accountAddress: string;\n  }) {\n    await this._requireAccountIsAvailable(accountAddress);\n\n    const value = parseEther(amountInEth.toString());\n\n    this._dispatch(EventType.WrapEth, { accountAddress, amount: value });\n\n    const wethContract = new Contract(\n      getWETHAddress(this.chain),\n      [\"function deposit() payable\"],\n      this._signerOrProvider,\n    );\n\n    try {\n      const transaction = await wethContract.deposit({ value });\n      await this._confirmTransaction(\n        transaction.hash,\n        EventType.WrapEth,\n        \"Wrapping ETH\",\n      );\n    } catch (error) {\n      console.error(error);\n      this._dispatch(EventType.TransactionDenied, { error, accountAddress });\n    }\n  }\n\n  /**\n   * Unwrap WETH into ETH.\n   * Emits the `UnwrapWeth` event when the transaction is prompted.\n   * @param options\n   * @param options.amountInEth How much WETH to unwrap\n   * @param options.accountAddress Address of the user's wallet containing the WETH\n   */\n  public async unwrapWeth({\n    amountInEth,\n    accountAddress,\n  }: {\n    amountInEth: BigNumberish;\n    accountAddress: string;\n  }) {\n    await this._requireAccountIsAvailable(accountAddress);\n\n    const amount = parseEther(amountInEth.toString());\n\n    this._dispatch(EventType.UnwrapWeth, { accountAddress, amount });\n\n    const wethContract = new Contract(\n      getWETHAddress(this.chain),\n      [\"function withdraw(uint wad) public\"],\n      this._signerOrProvider,\n    );\n\n    try {\n      const transaction = await wethContract.withdraw(amount);\n      await this._confirmTransaction(\n        transaction.hash,\n        EventType.UnwrapWeth,\n        \"Unwrapping W-ETH\",\n      );\n    } catch (error) {\n      console.error(error);\n      this._dispatch(EventType.TransactionDenied, { error, accountAddress });\n    }\n  }\n\n  private getAmountWithBasisPointsApplied = (\n    amount: bigint,\n    basisPoints: bigint,\n  ): string => {\n    return ((amount * basisPoints) / INVERSE_BASIS_POINT).toString();\n  };\n\n  private async getFees({\n    collection,\n    seller,\n    paymentTokenAddress,\n    startAmount,\n    endAmount,\n    excludeOptionalCreatorFees,\n  }: {\n    collection: OpenSeaCollection;\n    seller?: string;\n    paymentTokenAddress: string;\n    startAmount: bigint;\n    endAmount?: bigint;\n    excludeOptionalCreatorFees?: boolean;\n  }): Promise<ConsiderationInputItem[]> {\n    let collectionFees = collection.fees;\n    if (excludeOptionalCreatorFees) {\n      collectionFees = collectionFees.filter((fee) => fee.required);\n    }\n    const collectionFeesBasisPoints = totalBasisPointsForFees(collectionFees);\n    const sellerBasisPoints = INVERSE_BASIS_POINT - collectionFeesBasisPoints;\n\n    const getConsiderationItem = (basisPoints: bigint, recipient?: string) => {\n      return {\n        token: paymentTokenAddress,\n        amount: this.getAmountWithBasisPointsApplied(startAmount, basisPoints),\n        endAmount: this.getAmountWithBasisPointsApplied(\n          endAmount ?? startAmount,\n          basisPoints,\n        ),\n        recipient,\n      };\n    };\n\n    const considerationItems: ConsiderationInputItem[] = [];\n\n    if (seller) {\n      considerationItems.push(getConsiderationItem(sellerBasisPoints, seller));\n    }\n    if (collectionFeesBasisPoints > 0) {\n      for (const fee of collectionFees) {\n        considerationItems.push(\n          getConsiderationItem(basisPointsForFee(fee), fee.recipient),\n        );\n      }\n    }\n    return considerationItems;\n  }\n\n  private getNFTItems(\n    nfts: NFT[],\n    quantities: bigint[] = [],\n  ): CreateInputItem[] {\n    return nfts.map((nft, index) => ({\n      itemType: getAssetItemType(\n        nft.token_standard.toUpperCase() as TokenStandard,\n      ),\n      token:\n        getAddressAfterRemappingSharedStorefrontAddressToLazyMintAdapterAddress(\n          nft.contract,\n        ),\n      identifier: nft.identifier ?? undefined,\n      amount: quantities[index].toString() ?? \"1\",\n    }));\n  }\n\n  /**\n   * Create and submit an offer on an asset.\n   * @param options\n   * @param options.asset The asset to trade. tokenAddress and tokenId must be defined.\n   * @param options.accountAddress Address of the wallet making the offer.\n   * @param options.startAmount Value of the offer in units, not base units e.g. not wei, of the payment token (or WETH if no payment token address specified)\n   * @param options.quantity The number of assets to bid for (if fungible or semi-fungible). Defaults to 1.\n   * @param options.domain An optional domain to be hashed and included in the first four bytes of the random salt.\n   * @param options.salt Arbitrary salt. If not passed in, a random salt will be generated with the first four bytes being the domain hash or empty.\n   * @param options.expirationTime Expiration time for the order, in UTC seconds\n   * @param options.paymentTokenAddress ERC20 address for the payment token in the order. If unspecified, defaults to WETH\n   * @param options.excludeOptionalCreatorFees If true, optional creator fees will be excluded from the offer. Default: true.\n   * @param options.zone The zone to use for the order. For order protection, pass SIGNED_ZONE. If unspecified, defaults to no zone.\n   *\n   * @returns The {@link OrderV2} that was created.\n   *\n   * @throws Error if the asset does not contain a token id.\n   * @throws Error if the accountAddress is not available through wallet or provider.\n   * @throws Error if the startAmount is not greater than 0.\n   * @throws Error if paymentTokenAddress is not WETH on anything other than Ethereum mainnet.\n   */\n  public async createOffer({\n    asset,\n    accountAddress,\n    startAmount,\n    quantity = 1,\n    domain,\n    salt,\n    expirationTime,\n    paymentTokenAddress = getWETHAddress(this.chain),\n    excludeOptionalCreatorFees = true,\n    zone = ZeroAddress,\n  }: {\n    asset: AssetWithTokenId;\n    accountAddress: string;\n    startAmount: BigNumberish;\n    quantity?: BigNumberish;\n    domain?: string;\n    salt?: BigNumberish;\n    expirationTime?: BigNumberish;\n    paymentTokenAddress?: string;\n    excludeOptionalCreatorFees?: boolean;\n    zone?: string;\n  }): Promise<OrderV2> {\n    await this._requireAccountIsAvailable(accountAddress);\n\n    const { nft } = await this.api.getNFT(asset.tokenAddress, asset.tokenId);\n    const considerationAssetItems = this.getNFTItems(\n      [nft],\n      [BigInt(quantity ?? 1)],\n    );\n\n    const { basePrice } = await this._getPriceParameters(\n      OrderSide.OFFER,\n      paymentTokenAddress,\n      expirationTime ?? getMaxOrderExpirationTimestamp(),\n      startAmount,\n    );\n\n    const collection = await this.api.getCollection(nft.collection);\n\n    const considerationFeeItems = await this.getFees({\n      collection,\n      paymentTokenAddress,\n      startAmount: basePrice,\n      excludeOptionalCreatorFees,\n    });\n\n    if (collection.requiredZone) {\n      zone = collection.requiredZone;\n    }\n\n    const { executeAllActions } = await this.seaport_v1_6.createOrder(\n      {\n        offer: [\n          {\n            token: paymentTokenAddress,\n            amount: basePrice.toString(),\n          },\n        ],\n        consideration: [...considerationAssetItems, ...considerationFeeItems],\n        endTime:\n          expirationTime !== undefined\n            ? BigInt(expirationTime).toString()\n            : getMaxOrderExpirationTimestamp().toString(),\n        zone,\n        domain,\n        salt: BigInt(salt ?? 0).toString(),\n        restrictedByZone: zone !== ZeroAddress,\n        allowPartialFills: true,\n      },\n      accountAddress,\n    );\n    const order = await executeAllActions();\n\n    return this.api.postOrder(order, {\n      protocol: \"seaport\",\n      protocolAddress: DEFAULT_SEAPORT_CONTRACT_ADDRESS,\n      side: OrderSide.OFFER,\n    });\n  }\n\n  /**\n   * Create and submit a listing for an asset.\n   * @param options\n   * @param options.asset The asset to trade. tokenAddress and tokenId must be defined.\n   * @param options.accountAddress  Address of the wallet making the listing\n   * @param options.startAmount Value of the listing at the start of the auction in units, not base units e.g. not wei, of the payment token (or WETH if no payment token address specified)\n   * @param options.endAmount Value of the listing at the end of the auction. If specified, price will change linearly between startAmount and endAmount as time progresses.\n   * @param options.quantity The number of assets to list (if fungible or semi-fungible). Defaults to 1.\n   * @param options.domain An optional domain to be hashed and included in the first four bytes of the random salt. This can be used for on-chain order attribution to assist with analytics.\n   * @param options.salt Arbitrary salt. If not passed in, a random salt will be generated with the first four bytes being the domain hash or empty.\n   * @param options.listingTime Optional time when the order will become fulfillable, in UTC seconds. Undefined means it will start now.\n   * @param options.expirationTime Expiration time for the order, in UTC seconds.\n   * @param options.paymentTokenAddress ERC20 address for the payment token in the order. If unspecified, defaults to ETH\n   * @param options.buyerAddress Optional address that's allowed to purchase this item. If specified, no other address will be able to take the order, unless its value is the null address.\n   * @param options.englishAuction If true, the order will be listed as an English auction.\n   * @param options.excludeOptionalCreatorFees If true, optional creator fees will be excluded from the listing. Default: false.\n   * @param options.zone The zone to use for the order. For order protection, pass SIGNED_ZONE. If unspecified, defaults to no zone.\n   * @returns The {@link OrderV2} that was created.\n   *\n   * @throws Error if the asset does not contain a token id.\n   * @throws Error if the accountAddress is not available through wallet or provider.\n   * @throws Error if the startAmount is not greater than 0.\n   * @throws Error if paymentTokenAddress is not WETH on anything other than Ethereum mainnet.\n   */\n  public async createListing({\n    asset,\n    accountAddress,\n    startAmount,\n    endAmount,\n    quantity = 1,\n    domain,\n    salt,\n    listingTime,\n    expirationTime,\n    paymentTokenAddress = ethers.ZeroAddress,\n    buyerAddress,\n    englishAuction,\n    excludeOptionalCreatorFees = false,\n    zone = ZeroAddress,\n  }: {\n    asset: AssetWithTokenId;\n    accountAddress: string;\n    startAmount: BigNumberish;\n    endAmount?: BigNumberish;\n    quantity?: BigNumberish;\n    domain?: string;\n    salt?: BigNumberish;\n    listingTime?: number;\n    expirationTime?: number;\n    paymentTokenAddress?: string;\n    buyerAddress?: string;\n    englishAuction?: boolean;\n    excludeOptionalCreatorFees?: boolean;\n    zone?: string;\n  }): Promise<OrderV2> {\n    await this._requireAccountIsAvailable(accountAddress);\n\n    const { nft } = await this.api.getNFT(asset.tokenAddress, asset.tokenId);\n    const offerAssetItems = this.getNFTItems([nft], [BigInt(quantity ?? 1)]);\n\n    if (englishAuction) {\n      throw new Error(\"English auctions are no longer supported on OpenSea\");\n    }\n    if (englishAuction && paymentTokenAddress == ethers.ZeroAddress) {\n      throw new Error(\n        `English auctions must use wrapped ETH or an ERC-20 token.`,\n      );\n    }\n\n    const { basePrice, endPrice } = await this._getPriceParameters(\n      OrderSide.LISTING,\n      paymentTokenAddress,\n      expirationTime ?? getMaxOrderExpirationTimestamp(),\n      startAmount,\n      endAmount ?? undefined,\n    );\n\n    const collection = await this.api.getCollection(nft.collection);\n\n    const considerationFeeItems = await this.getFees({\n      collection,\n      seller: accountAddress,\n      paymentTokenAddress,\n      startAmount: basePrice,\n      endAmount: endPrice,\n      excludeOptionalCreatorFees,\n    });\n\n    if (buyerAddress) {\n      considerationFeeItems.push(\n        ...getPrivateListingConsiderations(offerAssetItems, buyerAddress),\n      );\n    }\n\n    if (englishAuction) {\n      zone = isTestChain(this.chain)\n        ? ENGLISH_AUCTION_ZONE_TESTNETS\n        : ENGLISH_AUCTION_ZONE_MAINNETS;\n    } else if (collection.requiredZone) {\n      zone = collection.requiredZone;\n    }\n\n    const { executeAllActions } = await this.seaport_v1_6.createOrder(\n      {\n        offer: offerAssetItems,\n        consideration: considerationFeeItems,\n        startTime: listingTime?.toString(),\n        endTime:\n          expirationTime?.toString() ??\n          getMaxOrderExpirationTimestamp().toString(),\n        zone,\n        domain,\n        salt: BigInt(salt ?? 0).toString(),\n        restrictedByZone: zone !== ZeroAddress,\n        allowPartialFills: englishAuction ? false : true,\n      },\n      accountAddress,\n    );\n    const order = await executeAllActions();\n\n    return this.api.postOrder(order, {\n      protocol: \"seaport\",\n      protocolAddress: DEFAULT_SEAPORT_CONTRACT_ADDRESS,\n      side: OrderSide.LISTING,\n    });\n  }\n\n  /**\n   * Create and submit a collection offer.\n   * @param options\n   * @param options.collectionSlug Identifier for the collection.\n   * @param options.accountAddress Address of the wallet making the offer.\n   * @param options.amount Value of the offer in units, not base units e.g. not wei, of the payment token (or WETH if no payment token address specified).\n   * @param options.quantity The number of assets to bid for (if fungible or semi-fungible).\n   * @param options.domain An optional domain to be hashed and included in the first four bytes of the random salt. This can be used for on-chain order attribution to assist with analytics.\n   * @param options.salt Arbitrary salt. If not passed in, a random salt will be generated with the first four bytes being the domain hash or empty.\n   * @param options.expirationTime Expiration time for the order, in UTC seconds.\n   * @param options.paymentTokenAddress ERC20 address for the payment token in the order. If unspecified, defaults to WETH.\n   * @param options.excludeOptionalCreatorFees If true, optional creator fees will be excluded from the offer. Default: false.\n   * @param options.offerProtectionEnabled Build the offer on OpenSea's signed zone to provide offer protections from receiving an item which is disabled from trading.\n   * @param options.traitType If defined, the trait name to create the collection offer for.\n   * @param options.traitValue If defined, the trait value to create the collection offer for.\n   * @returns The {@link CollectionOffer} that was created.\n   */\n  public async createCollectionOffer({\n    collectionSlug,\n    accountAddress,\n    amount,\n    quantity,\n    domain,\n    salt,\n    expirationTime,\n    paymentTokenAddress = getWETHAddress(this.chain),\n    excludeOptionalCreatorFees = false,\n    offerProtectionEnabled = true,\n    traitType,\n    traitValue,\n  }: {\n    collectionSlug: string;\n    accountAddress: string;\n    amount: BigNumberish;\n    quantity: number;\n    domain?: string;\n    salt?: BigNumberish;\n    expirationTime?: number | string;\n    paymentTokenAddress: string;\n    excludeOptionalCreatorFees?: boolean;\n    offerProtectionEnabled?: boolean;\n    traitType?: string;\n    traitValue?: string;\n  }): Promise<CollectionOffer | null> {\n    await this._requireAccountIsAvailable(accountAddress);\n\n    const collection = await this.api.getCollection(collectionSlug);\n    const buildOfferResult = await this.api.buildOffer(\n      accountAddress,\n      quantity,\n      collectionSlug,\n      offerProtectionEnabled,\n      traitType,\n      traitValue,\n    );\n    const item = buildOfferResult.partialParameters.consideration[0];\n    const convertedConsiderationItem = {\n      itemType: item.itemType,\n      token: item.token,\n      identifier: item.identifierOrCriteria,\n      amount: item.startAmount,\n    };\n\n    const { basePrice } = await this._getPriceParameters(\n      OrderSide.LISTING,\n      paymentTokenAddress,\n      expirationTime ?? getMaxOrderExpirationTimestamp(),\n      amount,\n    );\n    const considerationFeeItems = await this.getFees({\n      collection,\n      paymentTokenAddress,\n      startAmount: basePrice,\n      endAmount: basePrice,\n      excludeOptionalCreatorFees,\n    });\n\n    const considerationItems = [\n      convertedConsiderationItem,\n      ...considerationFeeItems,\n    ];\n\n    const payload = {\n      offerer: accountAddress,\n      offer: [\n        {\n          token: paymentTokenAddress,\n          amount: basePrice.toString(),\n        },\n      ],\n      consideration: considerationItems,\n      endTime:\n        expirationTime?.toString() ??\n        getMaxOrderExpirationTimestamp().toString(),\n      zone: buildOfferResult.partialParameters.zone,\n      domain,\n      salt: BigInt(salt ?? 0).toString(),\n      restrictedByZone: true,\n      allowPartialFills: true,\n    };\n\n    const { executeAllActions } = await this.seaport_v1_6.createOrder(\n      payload,\n      accountAddress,\n    );\n    const order = await executeAllActions();\n\n    return this.api.postCollectionOffer(\n      order,\n      collectionSlug,\n      traitType,\n      traitValue,\n    );\n  }\n\n  /**\n   * Fulfill a private order for a designated address.\n   * @param options\n   * @param options.order The order to fulfill\n   * @param options.accountAddress Address of the wallet taking the order.\n   * @param options.domain An optional domain to be hashed and included at the end of fulfillment calldata.\n   *                       This can be used for on-chain order attribution to assist with analytics.\n   * @param options.overrides Transaction overrides, ignored if not set.\n   * @returns Transaction hash of the order.\n   */\n  private async fulfillPrivateOrder({\n    order,\n    accountAddress,\n    domain,\n    overrides,\n  }: {\n    order: OrderV2;\n    accountAddress: string;\n    domain?: string;\n    overrides?: Overrides;\n  }): Promise<string> {\n    if (!order.taker?.address) {\n      throw new Error(\n        \"Order is not a private listing - must have a taker address\",\n      );\n    }\n    const counterOrder = constructPrivateListingCounterOrder(\n      order.protocolData,\n      order.taker.address,\n    );\n    const fulfillments = getPrivateListingFulfillments(order.protocolData);\n    const seaport = this.getSeaport(order.protocolAddress);\n    const transaction = await seaport\n      .matchOrders({\n        orders: [order.protocolData, counterOrder],\n        fulfillments,\n        overrides: {\n          ...overrides,\n          value: counterOrder.parameters.offer[0].startAmount,\n        },\n        accountAddress,\n        domain,\n      })\n      .transact();\n    const transactionReceipt = await transaction.wait();\n    if (!transactionReceipt) {\n      throw new Error(\"Missing transaction receipt\");\n    }\n\n    await this._confirmTransaction(\n      transactionReceipt.hash,\n      EventType.MatchOrders,\n      \"Fulfilling order\",\n    );\n    return transactionReceipt.hash;\n  }\n\n  /**\n   * Fulfill an order for an asset. The order can be either a listing or an offer.\n   * @param options\n   * @param options.order The order to fulfill, a.k.a. \"take\"\n   * @param options.accountAddress Address of the wallet taking the offer.\n   * @param options.recipientAddress The optional address to receive the order's item(s) or currencies. If not specified, defaults to accountAddress.\n   * @param options.domain An optional domain to be hashed and included at the end of fulfillment calldata.  This can be used for on-chain order attribution to assist with analytics.\n   * @param options.overrides Transaction overrides, ignored if not set.\n   * @returns Transaction hash of the order.\n   *\n   * @throws Error if the accountAddress is not available through wallet or provider.\n   * @throws Error if the order's protocol address is not supported by OpenSea. See {@link isValidProtocol}.\n   * @throws Error if attempting to fulfill the order with a recipient address which does not match a private listing.\n   */\n  public async fulfillOrder({\n    order,\n    accountAddress,\n    recipientAddress,\n    domain,\n    overrides,\n  }: {\n    order: OrderV2 | Order;\n    accountAddress: string;\n    recipientAddress?: string;\n    domain?: string;\n    overrides?: Overrides;\n  }): Promise<string> {\n    await this._requireAccountIsAvailable(accountAddress);\n\n    const protocolAddress =\n      (order as OrderV2).protocolAddress ?? (order as Order).protocol_address;\n    requireValidProtocol(protocolAddress);\n\n    const orderHash =\n      (order as OrderV2).orderHash ?? (order as Order).order_hash;\n\n    const side =\n      (order as OrderV2).side ??\n      ([OrderType.BASIC, OrderType.ENGLISH].includes((order as Listing).type)\n        ? OrderSide.LISTING\n        : OrderSide.OFFER);\n\n    let extraData: string | undefined = undefined;\n\n    const protocolData =\n      (order as OrderV2).protocolData ?? (order as Order).protocol_data;\n\n    if (orderHash) {\n      const result = await this.api.generateFulfillmentData(\n        accountAddress,\n        orderHash,\n        protocolAddress,\n        side,\n      );\n\n      // If the order is using offer protection, the extraData\n      // must be included with the order to successfully fulfill.\n      const inputData = result.fulfillment_data.transaction.input_data;\n      if (\"orders\" in inputData && \"extraData\" in inputData.orders[0]) {\n        extraData = (inputData.orders[0] as AdvancedOrder).extraData;\n      }\n      const signature = result.fulfillment_data.orders[0].signature;\n      protocolData.signature = signature;\n    }\n\n    const isPrivateListing = \"taker\" in order ? !!order.taker : false;\n    if (isPrivateListing) {\n      if (recipientAddress) {\n        throw new Error(\n          \"Private listings cannot be fulfilled with a recipient address\",\n        );\n      }\n      return this.fulfillPrivateOrder({\n        order: order as OrderV2,\n        accountAddress,\n        domain,\n        overrides,\n      });\n    }\n\n    const seaport = this.getSeaport(protocolAddress);\n    const { executeAllActions } = await seaport.fulfillOrder({\n      order: protocolData,\n      accountAddress,\n      recipientAddress,\n      extraData,\n      domain,\n      overrides,\n    });\n    const transaction = await executeAllActions();\n\n    const transactionHash = ethers.Transaction.from(transaction).hash;\n    if (!transactionHash) {\n      throw new Error(\"Missing transaction hash\");\n    }\n\n    await this._confirmTransaction(\n      transactionHash,\n      EventType.MatchOrders,\n      \"Fulfilling order\",\n    );\n    return transactionHash;\n  }\n\n  /**\n   * Utility function to get the Seaport client based on the address.\n   * @param protocolAddress The Seaport address.\n   */\n  private getSeaport(protocolAddress: string): Seaport {\n    const checksummedProtocolAddress = ethers.getAddress(protocolAddress);\n    switch (checksummedProtocolAddress) {\n      case CROSS_CHAIN_SEAPORT_V1_6_ADDRESS:\n        return this.seaport_v1_6;\n      default:\n        throw new Error(`Unsupported protocol address: ${protocolAddress}`);\n    }\n  }\n\n  /**\n   * Cancel orders onchain, preventing them from being fulfilled.\n   * @param options\n   * @param options.orders The orders to cancel\n   * @param options.accountAddress The account address cancelling the orders.\n   * @param options.domain An optional domain to be hashed and included at the end of fulfillment calldata.\n   *                       This can be used for on-chain order attribution to assist with analytics.\n   * @param options.overrides Transaction overrides, ignored if not set.\n   * @returns Transaction hash of the order.\n   */\n  private async cancelSeaportOrders({\n    orders,\n    accountAddress,\n    domain,\n    protocolAddress = DEFAULT_SEAPORT_CONTRACT_ADDRESS,\n    overrides,\n  }: {\n    orders: OrderComponents[];\n    accountAddress: string;\n    domain?: string;\n    protocolAddress?: string;\n    overrides?: Overrides;\n  }): Promise<string> {\n    const seaport = this.getSeaport(protocolAddress);\n\n    const transaction = await seaport\n      .cancelOrders(orders, accountAddress, domain, overrides)\n      .transact();\n\n    return transaction.hash;\n  }\n\n  /**\n   * Cancel an order onchain, preventing it from ever being fulfilled.\n   * @param options\n   * @param options.order The order to cancel\n   * @param options.accountAddress The account address that will be cancelling the order.\n   * @param options.domain An optional domain to be hashed and included at the end of fulfillment calldata.  This can be used for on-chain order attribution to assist with analytics.\n   *\n   * @throws Error if the accountAddress is not available through wallet or provider.\n   * @throws Error if the order's protocol address is not supported by OpenSea. See {@link isValidProtocol}.\n   */\n  public async cancelOrder({\n    order,\n    accountAddress,\n    domain,\n  }: {\n    order: OrderV2;\n    accountAddress: string;\n    domain?: string;\n  }) {\n    await this._requireAccountIsAvailable(accountAddress);\n    requireValidProtocol(order.protocolAddress);\n\n    this._dispatch(EventType.CancelOrder, { orderV2: order, accountAddress });\n\n    // Transact and get the transaction hash\n    const transactionHash = await this.cancelSeaportOrders({\n      orders: [order.protocolData.parameters],\n      accountAddress,\n      domain,\n      protocolAddress: order.protocolAddress,\n    });\n\n    // Await transaction confirmation\n    await this._confirmTransaction(\n      transactionHash,\n      EventType.CancelOrder,\n      \"Cancelling order\",\n    );\n  }\n\n  private _getSeaportVersion(protocolAddress: string) {\n    const protocolAddressChecksummed = ethers.getAddress(protocolAddress);\n    switch (protocolAddressChecksummed) {\n      case CROSS_CHAIN_SEAPORT_V1_6_ADDRESS:\n        return \"1.6\";\n      default:\n        throw new Error(\"Unknown or unsupported protocol address\");\n    }\n  }\n\n  /**\n   * Get the offerer signature for canceling an order offchain.\n   * The signature will only be valid if the signer address is the address of the order's offerer.\n   */\n  private async _getOffererSignature(\n    protocolAddress: string,\n    orderHash: string,\n    chain: Chain,\n  ) {\n    const chainId = getChainId(chain);\n    const name = \"Seaport\";\n    const version = this._getSeaportVersion(protocolAddress);\n\n    if (\n      typeof (this._signerOrProvider as Signer).signTypedData == \"undefined\"\n    ) {\n      throw new Error(\n        \"Please pass an ethers Signer into this sdk to derive an offerer signature\",\n      );\n    }\n\n    return (this._signerOrProvider as Signer).signTypedData(\n      { chainId, name, version, verifyingContract: protocolAddress },\n      { OrderHash: [{ name: \"orderHash\", type: \"bytes32\" }] },\n      { orderHash },\n    );\n  }\n\n  /**\n   * Offchain cancel an order, offer or listing, by its order hash when protected by the SignedZone.\n   * Protocol and Chain are required to prevent hash collisions.\n   * Please note cancellation is only assured if a fulfillment signature was not vended prior to cancellation.\n   * @param protocolAddress The Seaport address for the order.\n   * @param orderHash The order hash, or external identifier, of the order.\n   * @param chain The chain where the order is located.\n   * @param offererSignature An EIP-712 signature from the offerer of the order.\n   *                         If this is not provided, the user associated with the API Key will be checked instead.\n   *                         The signature must be a EIP-712 signature consisting of the order's Seaport contract's\n   *                         name, version, address, and chain. The struct to sign is `OrderHash` containing a\n   *                         single bytes32 field.\n   * @param useSignerToDeriveOffererSignature Derive the offererSignature from the Ethers signer passed into this sdk.\n   * @returns The response from the API.\n   */\n  public async offchainCancelOrder(\n    protocolAddress: string,\n    orderHash: string,\n    chain: Chain = this.chain,\n    offererSignature?: string,\n    useSignerToDeriveOffererSignature?: boolean,\n  ) {\n    if (useSignerToDeriveOffererSignature) {\n      offererSignature = await this._getOffererSignature(\n        protocolAddress,\n        orderHash,\n        chain,\n      );\n    }\n    return this.api.offchainCancelOrder(\n      protocolAddress,\n      orderHash,\n      chain,\n      offererSignature,\n    );\n  }\n\n  /**\n   * Returns whether an order is fulfillable.\n   * An order may not be fulfillable if a target item's transfer function\n   * is locked for some reason, e.g. an item is being rented within a game\n   * or trading has been locked for an item type.\n   * @param options\n   * @param options.order Order to check\n   * @param options.accountAddress The account address that will be fulfilling the order\n   * @returns True if the order is fulfillable, else False.\n   *\n   * @throws Error if the order's protocol address is not supported by OpenSea. See {@link isValidProtocol}.\n   */\n  public async isOrderFulfillable({\n    order,\n    accountAddress,\n  }: {\n    order: OrderV2;\n    accountAddress: string;\n  }): Promise<boolean> {\n    requireValidProtocol(order.protocolAddress);\n\n    const seaport = this.getSeaport(order.protocolAddress);\n\n    try {\n      const isValid = await seaport\n        .validate([order.protocolData], accountAddress)\n        .staticCall();\n      return !!isValid;\n    } catch (error) {\n      if (hasErrorCode(error) && error.code === \"CALL_EXCEPTION\") {\n        return false;\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Get an account's balance of any Asset. This asset can be an ERC20, ERC1155, or ERC721.\n   * @param options\n   * @param options.accountAddress Account address to check\n   * @param options.asset The Asset to check balance for. tokenStandard must be set.\n   * @returns The balance of the asset for the account.\n   *\n   * @throws Error if the token standard does not support balanceOf.\n   */\n  public async getBalance({\n    accountAddress,\n    asset,\n  }: {\n    accountAddress: string;\n    asset: AssetWithTokenStandard;\n  }): Promise<bigint> {\n    switch (asset.tokenStandard) {\n      case TokenStandard.ERC20: {\n        const contract = ERC20__factory.connect(\n          asset.tokenAddress,\n          this.provider,\n        );\n        return await contract.balanceOf.staticCall(accountAddress);\n      }\n      case TokenStandard.ERC1155: {\n        if (asset.tokenId === undefined || asset.tokenId === null) {\n          throw new Error(\"Missing ERC1155 tokenId for getBalance\");\n        }\n        const contract = ERC1155__factory.connect(\n          asset.tokenAddress,\n          this.provider,\n        );\n        return await contract.balanceOf.staticCall(\n          accountAddress,\n          asset.tokenId,\n        );\n      }\n      case TokenStandard.ERC721: {\n        if (asset.tokenId === undefined || asset.tokenId === null) {\n          throw new Error(\"Missing ERC721 tokenId for getBalance\");\n        }\n        const contract = ERC721__factory.connect(\n          asset.tokenAddress,\n          this.provider,\n        );\n        try {\n          const owner = await contract.ownerOf.staticCall(asset.tokenId);\n          return BigInt(owner.toLowerCase() == accountAddress.toLowerCase());\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        } catch (error: any) {\n          this.logger(\n            `Failed to get ownerOf ERC721: ${error.message ?? error}`,\n          );\n          return 0n;\n        }\n      }\n      default:\n        throw new Error(\"Unsupported token standard for getBalance\");\n    }\n  }\n\n  /**\n   * Transfer an asset. This asset can be an ERC20, ERC1155, or ERC721.\n   * @param options\n   * @param options.asset The Asset to transfer. tokenStandard must be set.\n   * @param options.amount Amount of asset to transfer. Not used for ERC721.\n   * @param options.fromAddress The address to transfer from\n   * @param options.toAddress The address to transfer to\n   * @param options.overrides Transaction overrides, ignored if not set.\n   */\n  public async transfer({\n    asset,\n    amount,\n    fromAddress,\n    toAddress,\n    overrides,\n  }: {\n    asset: AssetWithTokenStandard;\n    amount?: BigNumberish;\n    fromAddress: string;\n    toAddress: string;\n    overrides?: Overrides;\n  }): Promise<void> {\n    await this._requireAccountIsAvailable(fromAddress);\n    overrides = { ...overrides, from: fromAddress };\n    let transaction: Promise<ContractTransactionResponse>;\n\n    switch (asset.tokenStandard) {\n      case TokenStandard.ERC20: {\n        if (!amount) {\n          throw new Error(\"Missing ERC20 amount for transfer\");\n        }\n        const contract = ERC20__factory.connect(\n          asset.tokenAddress,\n          this._signerOrProvider,\n        );\n        transaction = contract.transfer(toAddress, amount, overrides);\n        break;\n      }\n      case TokenStandard.ERC1155: {\n        if (asset.tokenId === undefined || asset.tokenId === null) {\n          throw new Error(\"Missing ERC1155 tokenId for transfer\");\n        }\n        if (!amount) {\n          throw new Error(\"Missing ERC1155 amount for transfer\");\n        }\n        const contract = ERC1155__factory.connect(\n          asset.tokenAddress,\n          this._signerOrProvider,\n        );\n        transaction = contract.safeTransferFrom(\n          fromAddress,\n          toAddress,\n          asset.tokenId,\n          amount,\n          \"\",\n          overrides,\n        );\n        break;\n      }\n      case TokenStandard.ERC721: {\n        if (asset.tokenId === undefined || asset.tokenId === null) {\n          throw new Error(\"Missing ERC721 tokenId for transfer\");\n        }\n        const contract = ERC721__factory.connect(\n          asset.tokenAddress,\n          this._signerOrProvider,\n        );\n        transaction = contract.transferFrom(\n          fromAddress,\n          toAddress,\n          asset.tokenId,\n          overrides,\n        );\n        break;\n      }\n      default:\n        throw new Error(\"Unsupported token standard for transfer\");\n    }\n\n    try {\n      const transactionResponse = await transaction;\n      await this._confirmTransaction(\n        transactionResponse.hash,\n        EventType.Transfer,\n        \"Transferring asset\",\n      );\n    } catch (error) {\n      console.error(error);\n      this._dispatch(EventType.TransactionDenied, {\n        error,\n        accountAddress: fromAddress,\n      });\n    }\n  }\n\n  /**\n   * Instead of signing an off-chain order, this methods allows you to approve an order\n   * with an on-chain transaction.\n   * @param order Order to approve\n   * @param domain An optional domain to be hashed and included at the end of fulfillment calldata.  This can be used for on-chain order attribution to assist with analytics.\n   * @returns Transaction hash of the approval transaction\n   *\n   * @throws Error if the accountAddress is not available through wallet or provider.\n   * @throws Error if the order's protocol address is not supported by OpenSea. See {@link isValidProtocol}.\n   */\n  public async approveOrder(order: OrderV2, domain?: string) {\n    await this._requireAccountIsAvailable(order.maker.address);\n    requireValidProtocol(order.protocolAddress);\n\n    this._dispatch(EventType.ApproveOrder, {\n      orderV2: order,\n      accountAddress: order.maker.address,\n    });\n\n    const seaport = this.getSeaport(order.protocolAddress);\n    const transaction = await seaport\n      .validate([order.protocolData], order.maker.address, domain)\n      .transact();\n\n    await this._confirmTransaction(\n      transaction.hash,\n      EventType.ApproveOrder,\n      \"Approving order\",\n    );\n\n    return transaction.hash;\n  }\n\n  /**\n   * Compute the `basePrice` and `endPrice` parameters to be used to price an order.\n   * Also validates the expiration time and auction type.\n   * @param tokenAddress Address of the ERC-20 token to use for trading. Use the null address for ETH.\n   * @param expirationTime When the auction expires, or 0 if never.\n   * @param startAmount The base value for the order, in the token's main units (e.g. ETH instead of wei)\n   * @param endAmount The end value for the order, in the token's main units (e.g. ETH instead of wei)\n   */\n  private async _getPriceParameters(\n    orderSide: OrderSide,\n    tokenAddress: string,\n    expirationTime: BigNumberish,\n    startAmount: BigNumberish,\n    endAmount?: BigNumberish,\n  ) {\n    tokenAddress = tokenAddress.toLowerCase();\n    const isEther = tokenAddress === ethers.ZeroAddress;\n    let decimals = 18;\n    if (!isEther) {\n      if (tokenAddress in this._cachedPaymentTokenDecimals) {\n        decimals = this._cachedPaymentTokenDecimals[tokenAddress];\n      } else {\n        const paymentToken = await this.api.getPaymentToken(tokenAddress);\n        this._cachedPaymentTokenDecimals[tokenAddress] = paymentToken.decimals;\n        decimals = paymentToken.decimals;\n      }\n    }\n\n    const startAmountWei = ethers.parseUnits(startAmount.toString(), decimals);\n    const endAmountWei = endAmount\n      ? ethers.parseUnits(endAmount.toString(), decimals)\n      : undefined;\n    const priceDiffWei =\n      endAmountWei !== undefined ? startAmountWei - endAmountWei : 0n;\n\n    const basePrice = startAmountWei;\n    const endPrice = endAmountWei;\n\n    // Validation\n    if (startAmount == null || startAmountWei < 0) {\n      throw new Error(\"Starting price must be a number >= 0\");\n    }\n    if (isEther && orderSide === OrderSide.OFFER) {\n      throw new Error(\"Offers must use wrapped ETH or an ERC-20 token.\");\n    }\n    if (priceDiffWei < 0) {\n      throw new Error(\n        \"End price must be less than or equal to the start price.\",\n      );\n    }\n    if (priceDiffWei > 0 && BigInt(expirationTime) === 0n) {\n      throw new Error(\n        \"Expiration time must be set if order will change in price.\",\n      );\n    }\n    return { basePrice, endPrice };\n  }\n\n  private _dispatch(event: EventType, data: EventData) {\n    this._emitter.emit(event, data);\n  }\n\n  /** Get the accounts available from the signer or provider. */\n  private async _getAvailableAccounts() {\n    const availableAccounts: string[] = [];\n\n    if (\"address\" in this._signerOrProvider) {\n      availableAccounts.push(this._signerOrProvider.address as string);\n    } else if (\"listAccounts\" in this._signerOrProvider) {\n      const addresses = (await this._signerOrProvider.listAccounts()).map(\n        (acct) => acct.address,\n      );\n      availableAccounts.push(...addresses);\n    } else if (\"getAddress\" in this._signerOrProvider) {\n      availableAccounts.push(await this._signerOrProvider.getAddress());\n    }\n\n    return availableAccounts;\n  }\n\n  /**\n   * Throws an error if an account is not available through the provider.\n   * @param accountAddress The account address to check is available.\n   */\n  private async _requireAccountIsAvailable(accountAddress: string) {\n    const accountAddressChecksummed = ethers.getAddress(accountAddress);\n    const availableAccounts = await this._getAvailableAccounts();\n\n    if (availableAccounts.includes(accountAddressChecksummed)) {\n      return;\n    }\n\n    throw new Error(\n      `Specified accountAddress is not available through wallet or provider: ${accountAddressChecksummed}. Accounts available: ${\n        availableAccounts.length > 0 ? availableAccounts.join(\", \") : \"none\"\n      }`,\n    );\n  }\n\n  /**\n   * Wait for a transaction to confirm and log the success or failure.\n   * @param transactionHash The transaction hash to wait for.\n   * @param event The event type to log.\n   * @param description The description of the transaction.\n   */\n  private async _confirmTransaction(\n    transactionHash: string,\n    event: EventType,\n    description: string,\n  ): Promise<void> {\n    const transactionEventData = { transactionHash, event };\n    this.logger(`Transaction started: ${description}`);\n\n    try {\n      this._dispatch(EventType.TransactionCreated, transactionEventData);\n      await this.provider.waitForTransaction(transactionHash);\n      this.logger(`Transaction succeeded: ${description}`);\n      this._dispatch(EventType.TransactionConfirmed, transactionEventData);\n    } catch (error) {\n      this.logger(`Transaction failed: ${description}`);\n      this._dispatch(EventType.TransactionFailed, {\n        ...transactionEventData,\n        error,\n      });\n      throw error;\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"107c72931fcc1cfd285aa4f8eaead51dc58f1b32","contentHash":"b829e78c086c52872823c961daafd319ee0e131967307f4ff15578e601fa1e0e"},"/Users/rg/dev/opensea-js/src/api/api.ts":{"path":"/Users/rg/dev/opensea-js/src/api/api.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":40}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":34}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":43}},"6":{"start":{"line":8,"column":16},"end":{"line":8,"column":42}},"7":{"start":{"line":9,"column":16},"end":{"line":9,"column":35}},"8":{"start":{"line":10,"column":16},"end":{"line":10,"column":41}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":27}},"10":{"start":{"line":26,"column":8},"end":{"line":26,"column":36}},"11":{"start":{"line":27,"column":8},"end":{"line":27,"column":59}},"12":{"start":{"line":28,"column":8},"end":{"line":35,"column":9}},"13":{"start":{"line":29,"column":12},"end":{"line":29,"column":48}},"14":{"start":{"line":32,"column":12},"end":{"line":34,"column":47}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":47}},"16":{"start":{"line":37,"column":42},"end":{"line":37,"column":45}},"17":{"start":{"line":58,"column":27},"end":{"line":63,"column":11}},"18":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"19":{"start":{"line":65,"column":12},"end":{"line":65,"column":66}},"20":{"start":{"line":67,"column":8},"end":{"line":67,"column":56}},"21":{"start":{"line":86,"column":25},"end":{"line":91,"column":11}},"22":{"start":{"line":92,"column":8},"end":{"line":95,"column":10}},"23":{"start":{"line":105,"column":25},"end":{"line":108,"column":10}},"24":{"start":{"line":109,"column":8},"end":{"line":109,"column":24}},"25":{"start":{"line":119,"column":25},"end":{"line":122,"column":10}},"26":{"start":{"line":123,"column":8},"end":{"line":123,"column":24}},"27":{"start":{"line":132,"column":25},"end":{"line":132,"column":101}},"28":{"start":{"line":133,"column":8},"end":{"line":133,"column":24}},"29":{"start":{"line":142,"column":25},"end":{"line":142,"column":103}},"30":{"start":{"line":143,"column":8},"end":{"line":143,"column":24}},"31":{"start":{"line":153,"column":25},"end":{"line":156,"column":10}},"32":{"start":{"line":157,"column":8},"end":{"line":157,"column":24}},"33":{"start":{"line":168,"column":22},"end":{"line":168,"column":26}},"34":{"start":{"line":169,"column":8},"end":{"line":174,"column":9}},"35":{"start":{"line":170,"column":12},"end":{"line":170,"column":118}},"36":{"start":{"line":173,"column":12},"end":{"line":173,"column":116}},"37":{"start":{"line":175,"column":25},"end":{"line":175,"column":92}},"38":{"start":{"line":176,"column":8},"end":{"line":176,"column":24}},"39":{"start":{"line":189,"column":64},"end":{"line":189,"column":74}},"40":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"41":{"start":{"line":192,"column":12},"end":{"line":192,"column":59}},"42":{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},"43":{"start":{"line":195,"column":12},"end":{"line":195,"column":70}},"44":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"45":{"start":{"line":198,"column":12},"end":{"line":198,"column":54}},"46":{"start":{"line":201,"column":8},"end":{"line":203,"column":9}},"47":{"start":{"line":202,"column":12},"end":{"line":202,"column":78}},"48":{"start":{"line":205,"column":8},"end":{"line":207,"column":9}},"49":{"start":{"line":206,"column":12},"end":{"line":206,"column":66}},"50":{"start":{"line":209,"column":8},"end":{"line":211,"column":9}},"51":{"start":{"line":210,"column":12},"end":{"line":210,"column":63}},"52":{"start":{"line":212,"column":25},"end":{"line":212,"column":151}},"53":{"start":{"line":213,"column":8},"end":{"line":213,"column":61}},"54":{"start":{"line":226,"column":8},"end":{"line":230,"column":9}},"55":{"start":{"line":227,"column":12},"end":{"line":229,"column":13}},"56":{"start":{"line":228,"column":16},"end":{"line":228,"column":100}},"57":{"start":{"line":231,"column":24},"end":{"line":231,"column":156}},"58":{"start":{"line":232,"column":25},"end":{"line":232,"column":86}},"59":{"start":{"line":233,"column":8},"end":{"line":233,"column":24}},"60":{"start":{"line":241,"column":8},"end":{"line":241,"column":77}},"61":{"start":{"line":252,"column":24},"end":{"line":252,"column":102}},"62":{"start":{"line":253,"column":8},"end":{"line":253,"column":86}},"63":{"start":{"line":263,"column":25},"end":{"line":266,"column":10}},"64":{"start":{"line":267,"column":8},"end":{"line":267,"column":24}},"65":{"start":{"line":278,"column":25},"end":{"line":281,"column":10}},"66":{"start":{"line":282,"column":8},"end":{"line":282,"column":24}},"67":{"start":{"line":293,"column":25},"end":{"line":296,"column":10}},"68":{"start":{"line":297,"column":8},"end":{"line":297,"column":24}},"69":{"start":{"line":307,"column":25},"end":{"line":307,"column":95}},"70":{"start":{"line":308,"column":8},"end":{"line":308,"column":24}},"71":{"start":{"line":316,"column":21},"end":{"line":316,"column":60}},"72":{"start":{"line":317,"column":25},"end":{"line":317,"column":45}},"73":{"start":{"line":318,"column":8},"end":{"line":318,"column":57}},"74":{"start":{"line":331,"column":21},"end":{"line":331,"column":57}},"75":{"start":{"line":332,"column":21},"end":{"line":339,"column":9}},"76":{"start":{"line":340,"column":25},"end":{"line":340,"column":51}},"77":{"start":{"line":341,"column":8},"end":{"line":341,"column":117}},"78":{"start":{"line":341,"column":72},"end":{"line":341,"column":115}},"79":{"start":{"line":342,"column":8},"end":{"line":342,"column":24}},"80":{"start":{"line":350,"column":21},"end":{"line":350,"column":65}},"81":{"start":{"line":351,"column":25},"end":{"line":351,"column":45}},"82":{"start":{"line":352,"column":8},"end":{"line":352,"column":24}},"83":{"start":{"line":361,"column":21},"end":{"line":361,"column":88}},"84":{"start":{"line":362,"column":8},"end":{"line":362,"column":55}},"85":{"start":{"line":371,"column":21},"end":{"line":371,"column":76}},"86":{"start":{"line":372,"column":8},"end":{"line":372,"column":50}},"87":{"start":{"line":382,"column":25},"end":{"line":382,"column":112}},"88":{"start":{"line":383,"column":8},"end":{"line":383,"column":24}},"89":{"start":{"line":400,"column":25},"end":{"line":400,"column":133}},"90":{"start":{"line":401,"column":8},"end":{"line":401,"column":24}},"91":{"start":{"line":410,"column":19},"end":{"line":410,"column":51}},"92":{"start":{"line":411,"column":20},"end":{"line":411,"column":56}},"93":{"start":{"line":412,"column":8},"end":{"line":412,"column":38}},"94":{"start":{"line":422,"column":20},"end":{"line":422,"column":50}},"95":{"start":{"line":423,"column":8},"end":{"line":423,"column":50}},"96":{"start":{"line":426,"column":32},"end":{"line":426,"column":53}},"97":{"start":{"line":427,"column":8},"end":{"line":434,"column":11}},"98":{"start":{"line":428,"column":12},"end":{"line":433,"column":13}},"99":{"start":{"line":429,"column":16},"end":{"line":429,"column":83}},"100":{"start":{"line":429,"column":40},"end":{"line":429,"column":81}},"101":{"start":{"line":431,"column":17},"end":{"line":433,"column":13}},"102":{"start":{"line":432,"column":16},"end":{"line":432,"column":51}},"103":{"start":{"line":435,"column":8},"end":{"line":435,"column":42}},"104":{"start":{"line":444,"column":20},"end":{"line":444,"column":57}},"105":{"start":{"line":446,"column":8},"end":{"line":450,"column":10}},"106":{"start":{"line":451,"column":8},"end":{"line":453,"column":9}},"107":{"start":{"line":452,"column":12},"end":{"line":452,"column":38}},"108":{"start":{"line":455,"column":8},"end":{"line":457,"column":9}},"109":{"start":{"line":456,"column":12},"end":{"line":456,"column":28}},"110":{"start":{"line":459,"column":8},"end":{"line":459,"column":54}},"111":{"start":{"line":460,"column":8},"end":{"line":463,"column":14}},"112":{"start":{"line":464,"column":25},"end":{"line":464,"column":41}},"113":{"start":{"line":465,"column":8},"end":{"line":480,"column":9}},"114":{"start":{"line":467,"column":27},"end":{"line":467,"column":52}},"115":{"start":{"line":468,"column":12},"end":{"line":479,"column":13}},"116":{"start":{"line":469,"column":35},"end":{"line":469,"column":52}},"117":{"start":{"line":470,"column":16},"end":{"line":472,"column":17}},"118":{"start":{"line":471,"column":20},"end":{"line":471,"column":58}},"119":{"start":{"line":473,"column":16},"end":{"line":473,"column":65}},"120":{"start":{"line":478,"column":16},"end":{"line":478,"column":36}},"121":{"start":{"line":481,"column":8},"end":{"line":481,"column":33}},"122":{"start":{"line":484,"column":0},"end":{"line":484,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":32},"end":{"line":38,"column":5}},"line":21},"1":{"name":"(anonymous_1)","decl":{"start":{"line":37,"column":33},"end":{"line":37,"column":34}},"loc":{"start":{"line":37,"column":42},"end":{"line":37,"column":45}},"line":37},"2":{"name":"(anonymous_2)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":118},"end":{"line":68,"column":5}},"line":57},"3":{"name":"(anonymous_3)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":119},"end":{"line":96,"column":5}},"line":85},"4":{"name":"(anonymous_4)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":52},"end":{"line":110,"column":5}},"line":104},"5":{"name":"(anonymous_5)","decl":{"start":{"line":118,"column":4},"end":{"line":118,"column":5}},"loc":{"start":{"line":118,"column":54},"end":{"line":124,"column":5}},"line":118},"6":{"name":"(anonymous_6)","decl":{"start":{"line":131,"column":4},"end":{"line":131,"column":5}},"loc":{"start":{"line":131,"column":48},"end":{"line":134,"column":5}},"line":131},"7":{"name":"(anonymous_7)","decl":{"start":{"line":141,"column":4},"end":{"line":141,"column":5}},"loc":{"start":{"line":141,"column":50},"end":{"line":144,"column":5}},"line":141},"8":{"name":"(anonymous_8)","decl":{"start":{"line":152,"column":4},"end":{"line":152,"column":5}},"loc":{"start":{"line":152,"column":55},"end":{"line":158,"column":5}},"line":152},"9":{"name":"(anonymous_9)","decl":{"start":{"line":167,"column":4},"end":{"line":167,"column":5}},"loc":{"start":{"line":167,"column":86},"end":{"line":177,"column":5}},"line":167},"10":{"name":"(anonymous_10)","decl":{"start":{"line":188,"column":4},"end":{"line":188,"column":5}},"loc":{"start":{"line":188,"column":39},"end":{"line":214,"column":5}},"line":188},"11":{"name":"(anonymous_11)","decl":{"start":{"line":225,"column":4},"end":{"line":225,"column":5}},"loc":{"start":{"line":225,"column":117},"end":{"line":234,"column":5}},"line":225},"12":{"name":"(anonymous_12)","decl":{"start":{"line":240,"column":4},"end":{"line":240,"column":5}},"loc":{"start":{"line":240,"column":36},"end":{"line":242,"column":5}},"line":240},"13":{"name":"(anonymous_13)","decl":{"start":{"line":251,"column":4},"end":{"line":251,"column":5}},"loc":{"start":{"line":251,"column":66},"end":{"line":254,"column":5}},"line":251},"14":{"name":"(anonymous_14)","decl":{"start":{"line":262,"column":4},"end":{"line":262,"column":5}},"loc":{"start":{"line":262,"column":73},"end":{"line":268,"column":5}},"line":262},"15":{"name":"(anonymous_15)","decl":{"start":{"line":277,"column":4},"end":{"line":277,"column":5}},"loc":{"start":{"line":277,"column":94},"end":{"line":283,"column":5}},"line":277},"16":{"name":"(anonymous_16)","decl":{"start":{"line":292,"column":4},"end":{"line":292,"column":5}},"loc":{"start":{"line":292,"column":93},"end":{"line":298,"column":5}},"line":292},"17":{"name":"(anonymous_17)","decl":{"start":{"line":306,"column":4},"end":{"line":306,"column":5}},"loc":{"start":{"line":306,"column":58},"end":{"line":309,"column":5}},"line":306},"18":{"name":"(anonymous_18)","decl":{"start":{"line":315,"column":4},"end":{"line":315,"column":5}},"loc":{"start":{"line":315,"column":30},"end":{"line":319,"column":5}},"line":315},"19":{"name":"(anonymous_19)","decl":{"start":{"line":330,"column":4},"end":{"line":330,"column":5}},"loc":{"start":{"line":330,"column":141},"end":{"line":343,"column":5}},"line":330},"20":{"name":"(anonymous_20)","decl":{"start":{"line":341,"column":56},"end":{"line":341,"column":57}},"loc":{"start":{"line":341,"column":72},"end":{"line":341,"column":115}},"line":341},"21":{"name":"(anonymous_21)","decl":{"start":{"line":349,"column":4},"end":{"line":349,"column":5}},"loc":{"start":{"line":349,"column":35},"end":{"line":353,"column":5}},"line":349},"22":{"name":"(anonymous_22)","decl":{"start":{"line":360,"column":4},"end":{"line":360,"column":5}},"loc":{"start":{"line":360,"column":55},"end":{"line":363,"column":5}},"line":360},"23":{"name":"(anonymous_23)","decl":{"start":{"line":370,"column":4},"end":{"line":370,"column":5}},"loc":{"start":{"line":370,"column":30},"end":{"line":373,"column":5}},"line":370},"24":{"name":"(anonymous_24)","decl":{"start":{"line":381,"column":4},"end":{"line":381,"column":5}},"loc":{"start":{"line":381,"column":70},"end":{"line":384,"column":5}},"line":381},"25":{"name":"(anonymous_25)","decl":{"start":{"line":399,"column":4},"end":{"line":399,"column":5}},"loc":{"start":{"line":399,"column":96},"end":{"line":402,"column":5}},"line":399},"26":{"name":"(anonymous_26)","decl":{"start":{"line":409,"column":4},"end":{"line":409,"column":5}},"loc":{"start":{"line":409,"column":35},"end":{"line":413,"column":5}},"line":409},"27":{"name":"(anonymous_27)","decl":{"start":{"line":421,"column":4},"end":{"line":421,"column":5}},"loc":{"start":{"line":421,"column":36},"end":{"line":424,"column":5}},"line":421},"28":{"name":"(anonymous_28)","decl":{"start":{"line":425,"column":4},"end":{"line":425,"column":5}},"loc":{"start":{"line":425,"column":38},"end":{"line":436,"column":5}},"line":425},"29":{"name":"(anonymous_29)","decl":{"start":{"line":427,"column":39},"end":{"line":427,"column":40}},"loc":{"start":{"line":427,"column":57},"end":{"line":434,"column":9}},"line":427},"30":{"name":"(anonymous_30)","decl":{"start":{"line":429,"column":30},"end":{"line":429,"column":31}},"loc":{"start":{"line":429,"column":40},"end":{"line":429,"column":81}},"line":429},"31":{"name":"(anonymous_31)","decl":{"start":{"line":442,"column":4},"end":{"line":442,"column":5}},"loc":{"start":{"line":442,"column":37},"end":{"line":482,"column":5}},"line":442}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":21},"end":{"line":27,"column":58}},"type":"binary-expr","locations":[{"start":{"line":27,"column":21},"end":{"line":27,"column":33}},{"start":{"line":27,"column":37},"end":{"line":27,"column":58}}],"line":27},"1":{"loc":{"start":{"line":28,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":35,"column":9}},{"start":{"line":31,"column":13},"end":{"line":35,"column":9}}],"line":28},"2":{"loc":{"start":{"line":32,"column":30},"end":{"line":34,"column":46}},"type":"cond-expr","locations":[{"start":{"line":33,"column":18},"end":{"line":33,"column":46}},{"start":{"line":34,"column":18},"end":{"line":34,"column":46}}],"line":32},"3":{"loc":{"start":{"line":37,"column":22},"end":{"line":37,"column":46}},"type":"binary-expr","locations":[{"start":{"line":37,"column":22},"end":{"line":37,"column":28}},{"start":{"line":37,"column":33},"end":{"line":37,"column":45}}],"line":37},"4":{"loc":{"start":{"line":57,"column":27},"end":{"line":57,"column":47}},"type":"default-arg","locations":[{"start":{"line":57,"column":38},"end":{"line":57,"column":47}}],"line":57},"5":{"loc":{"start":{"line":57,"column":49},"end":{"line":57,"column":72}},"type":"default-arg","locations":[{"start":{"line":57,"column":66},"end":{"line":57,"column":72}}],"line":57},"6":{"loc":{"start":{"line":57,"column":74},"end":{"line":57,"column":98}},"type":"default-arg","locations":[{"start":{"line":57,"column":84},"end":{"line":57,"column":98}}],"line":57},"7":{"loc":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},{"start":{},"end":{}}],"line":64},"8":{"loc":{"start":{"line":85,"column":28},"end":{"line":85,"column":48}},"type":"default-arg","locations":[{"start":{"line":85,"column":39},"end":{"line":85,"column":48}}],"line":85},"9":{"loc":{"start":{"line":85,"column":50},"end":{"line":85,"column":73}},"type":"default-arg","locations":[{"start":{"line":85,"column":67},"end":{"line":85,"column":73}}],"line":85},"10":{"loc":{"start":{"line":85,"column":75},"end":{"line":85,"column":99}},"type":"default-arg","locations":[{"start":{"line":85,"column":85},"end":{"line":85,"column":99}}],"line":85},"11":{"loc":{"start":{"line":169,"column":8},"end":{"line":174,"column":9}},"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":174,"column":9}},{"start":{"line":172,"column":13},"end":{"line":174,"column":9}}],"line":169},"12":{"loc":{"start":{"line":189,"column":16},"end":{"line":189,"column":36}},"type":"default-arg","locations":[{"start":{"line":189,"column":27},"end":{"line":189,"column":36}}],"line":189},"13":{"loc":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},{"start":{},"end":{}}],"line":191},"14":{"loc":{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":196,"column":9}},{"start":{},"end":{}}],"line":194},"15":{"loc":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},{"start":{},"end":{}}],"line":197},"16":{"loc":{"start":{"line":201,"column":8},"end":{"line":203,"column":9}},"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":203,"column":9}},{"start":{},"end":{}}],"line":201},"17":{"loc":{"start":{"line":205,"column":8},"end":{"line":207,"column":9}},"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":207,"column":9}},{"start":{},"end":{}}],"line":205},"18":{"loc":{"start":{"line":205,"column":12},"end":{"line":205,"column":44}},"type":"binary-expr","locations":[{"start":{"line":205,"column":12},"end":{"line":205,"column":26}},{"start":{"line":205,"column":30},"end":{"line":205,"column":44}}],"line":205},"19":{"loc":{"start":{"line":209,"column":8},"end":{"line":211,"column":9}},"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":211,"column":9}},{"start":{},"end":{}}],"line":209},"20":{"loc":{"start":{"line":225,"column":63},"end":{"line":225,"column":92}},"type":"default-arg","locations":[{"start":{"line":225,"column":88},"end":{"line":225,"column":92}}],"line":225},"21":{"loc":{"start":{"line":226,"column":8},"end":{"line":230,"column":9}},"type":"if","locations":[{"start":{"line":226,"column":8},"end":{"line":230,"column":9}},{"start":{},"end":{}}],"line":226},"22":{"loc":{"start":{"line":226,"column":12},"end":{"line":226,"column":35}},"type":"binary-expr","locations":[{"start":{"line":226,"column":12},"end":{"line":226,"column":21}},{"start":{"line":226,"column":25},"end":{"line":226,"column":35}}],"line":226},"23":{"loc":{"start":{"line":227,"column":12},"end":{"line":229,"column":13}},"type":"if","locations":[{"start":{"line":227,"column":12},"end":{"line":229,"column":13}},{"start":{},"end":{}}],"line":227},"24":{"loc":{"start":{"line":227,"column":16},"end":{"line":227,"column":41}},"type":"binary-expr","locations":[{"start":{"line":227,"column":16},"end":{"line":227,"column":26}},{"start":{"line":227,"column":30},"end":{"line":227,"column":41}}],"line":227},"25":{"loc":{"start":{"line":262,"column":36},"end":{"line":262,"column":53}},"type":"default-arg","locations":[{"start":{"line":262,"column":44},"end":{"line":262,"column":53}}],"line":262},"26":{"loc":{"start":{"line":262,"column":55},"end":{"line":262,"column":71}},"type":"default-arg","locations":[{"start":{"line":262,"column":62},"end":{"line":262,"column":71}}],"line":262},"27":{"loc":{"start":{"line":277,"column":37},"end":{"line":277,"column":54}},"type":"default-arg","locations":[{"start":{"line":277,"column":45},"end":{"line":277,"column":54}}],"line":277},"28":{"loc":{"start":{"line":277,"column":56},"end":{"line":277,"column":72}},"type":"default-arg","locations":[{"start":{"line":277,"column":63},"end":{"line":277,"column":72}}],"line":277},"29":{"loc":{"start":{"line":277,"column":74},"end":{"line":277,"column":92}},"type":"default-arg","locations":[{"start":{"line":277,"column":82},"end":{"line":277,"column":92}}],"line":277},"30":{"loc":{"start":{"line":292,"column":36},"end":{"line":292,"column":53}},"type":"default-arg","locations":[{"start":{"line":292,"column":44},"end":{"line":292,"column":53}}],"line":292},"31":{"loc":{"start":{"line":292,"column":55},"end":{"line":292,"column":71}},"type":"default-arg","locations":[{"start":{"line":292,"column":62},"end":{"line":292,"column":71}}],"line":292},"32":{"loc":{"start":{"line":292,"column":73},"end":{"line":292,"column":91}},"type":"default-arg","locations":[{"start":{"line":292,"column":81},"end":{"line":292,"column":91}}],"line":292},"33":{"loc":{"start":{"line":306,"column":38},"end":{"line":306,"column":56}},"type":"default-arg","locations":[{"start":{"line":306,"column":46},"end":{"line":306,"column":56}}],"line":306},"34":{"loc":{"start":{"line":330,"column":25},"end":{"line":330,"column":79}},"type":"default-arg","locations":[{"start":{"line":330,"column":35},"end":{"line":330,"column":79}}],"line":330},"35":{"loc":{"start":{"line":330,"column":105},"end":{"line":330,"column":126}},"type":"default-arg","locations":[{"start":{"line":330,"column":121},"end":{"line":330,"column":126}}],"line":330},"36":{"loc":{"start":{"line":360,"column":35},"end":{"line":360,"column":53}},"type":"default-arg","locations":[{"start":{"line":360,"column":43},"end":{"line":360,"column":53}}],"line":360},"37":{"loc":{"start":{"line":381,"column":50},"end":{"line":381,"column":68}},"type":"default-arg","locations":[{"start":{"line":381,"column":58},"end":{"line":381,"column":68}}],"line":381},"38":{"loc":{"start":{"line":399,"column":58},"end":{"line":399,"column":76}},"type":"default-arg","locations":[{"start":{"line":399,"column":66},"end":{"line":399,"column":76}}],"line":399},"39":{"loc":{"start":{"line":409,"column":23},"end":{"line":409,"column":33}},"type":"default-arg","locations":[{"start":{"line":409,"column":31},"end":{"line":409,"column":33}}],"line":409},"40":{"loc":{"start":{"line":425,"column":25},"end":{"line":425,"column":36}},"type":"default-arg","locations":[{"start":{"line":425,"column":34},"end":{"line":425,"column":36}}],"line":425},"41":{"loc":{"start":{"line":428,"column":12},"end":{"line":433,"column":13}},"type":"if","locations":[{"start":{"line":428,"column":12},"end":{"line":433,"column":13}},{"start":{"line":431,"column":17},"end":{"line":433,"column":13}}],"line":428},"42":{"loc":{"start":{"line":428,"column":16},"end":{"line":428,"column":45}},"type":"binary-expr","locations":[{"start":{"line":428,"column":16},"end":{"line":428,"column":21}},{"start":{"line":428,"column":25},"end":{"line":428,"column":45}}],"line":428},"43":{"loc":{"start":{"line":429,"column":40},"end":{"line":429,"column":81}},"type":"binary-expr","locations":[{"start":{"line":429,"column":40},"end":{"line":429,"column":44}},{"start":{"line":429,"column":48},"end":{"line":429,"column":81}}],"line":429},"44":{"loc":{"start":{"line":431,"column":17},"end":{"line":433,"column":13}},"type":"if","locations":[{"start":{"line":431,"column":17},"end":{"line":433,"column":13}},{"start":{},"end":{}}],"line":431},"45":{"loc":{"start":{"line":448,"column":16},"end":{"line":448,"column":63}},"type":"cond-expr","locations":[{"start":{"line":448,"column":30},"end":{"line":448,"column":58}},{"start":{"line":448,"column":61},"end":{"line":448,"column":63}}],"line":448},"46":{"loc":{"start":{"line":455,"column":8},"end":{"line":457,"column":9}},"type":"if","locations":[{"start":{"line":455,"column":8},"end":{"line":457,"column":9}},{"start":{},"end":{}}],"line":455},"47":{"loc":{"start":{"line":465,"column":8},"end":{"line":480,"column":9}},"type":"if","locations":[{"start":{"line":465,"column":8},"end":{"line":480,"column":9}},{"start":{},"end":{}}],"line":465},"48":{"loc":{"start":{"line":468,"column":12},"end":{"line":479,"column":13}},"type":"if","locations":[{"start":{"line":468,"column":12},"end":{"line":479,"column":13}},{"start":{"line":475,"column":17},"end":{"line":479,"column":13}}],"line":468},"49":{"loc":{"start":{"line":470,"column":16},"end":{"line":472,"column":17}},"type":"if","locations":[{"start":{"line":470,"column":16},"end":{"line":472,"column":17}},{"start":{},"end":{}}],"line":470}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":4,"10":4,"11":4,"12":4,"13":0,"14":4,"15":4,"16":31,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":3,"26":3,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":3,"40":3,"41":0,"42":3,"43":0,"44":3,"45":0,"46":3,"47":0,"48":3,"49":0,"50":3,"51":0,"52":3,"53":3,"54":1,"55":1,"56":0,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":4,"70":4,"71":6,"72":6,"73":6,"74":2,"75":2,"76":2,"77":2,"78":100,"79":2,"80":1,"81":1,"82":1,"83":0,"84":0,"85":1,"86":1,"87":1,"88":1,"89":0,"90":0,"91":25,"92":25,"93":25,"94":6,"95":6,"96":25,"97":25,"98":28,"99":0,"100":0,"101":28,"102":3,"103":25,"104":31,"105":31,"106":31,"107":62,"108":31,"109":6,"110":31,"111":31,"112":31,"113":31,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":31,"122":1},"f":{"0":4,"1":31,"2":0,"3":0,"4":1,"5":3,"6":1,"7":1,"8":1,"9":0,"10":3,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":4,"18":6,"19":2,"20":100,"21":1,"22":0,"23":1,"24":1,"25":0,"26":25,"27":6,"28":25,"29":28,"30":0,"31":31},"b":{"0":[4,0],"1":[0,4],"2":[0,4],"3":[4,4],"4":[0],"5":[0],"6":[0],"7":[0,0],"8":[0],"9":[0],"10":[0],"11":[0,0],"12":[0],"13":[0,3],"14":[0,3],"15":[0,3],"16":[0,3],"17":[0,3],"18":[3,2],"19":[0,3],"20":[0],"21":[1,0],"22":[1,0],"23":[0,1],"24":[1,1],"25":[1],"26":[1],"27":[1],"28":[1],"29":[0],"30":[1],"31":[1],"32":[1],"33":[3],"34":[1],"35":[2],"36":[0],"37":[0],"38":[0],"39":[15],"40":[0],"41":[0,28],"42":[28,3],"43":[0,0],"44":[3,25],"45":[31,0],"46":[6,25],"47":[0,31],"48":[0,0],"49":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/api/api.ts","sources":["/Users/rg/dev/opensea-js/src/api/api.ts"],"names":[],"mappings":"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","sourcesContent":["import { ethers } from \"ethers\";\nimport {\n  getCollectionPath,\n  getCollectionsPath,\n  getOrdersAPIPath,\n  getPostCollectionOfferPath,\n  getBuildOfferPath,\n  getListNFTsByCollectionPath,\n  getListNFTsByContractPath,\n  getNFTPath,\n  getRefreshMetadataPath,\n  getCollectionOffersPath,\n  getListNFTsByAccountPath,\n  getBestOfferAPIPath,\n  getBestListingAPIPath,\n  getAllOffersAPIPath,\n  getAllListingsAPIPath,\n  getPaymentTokenPath,\n  getAccountPath,\n  getCollectionStatsPath,\n  getBestListingsAPIPath,\n  getCancelOrderPath,\n} from \"./apiPaths\";\nimport {\n  BuildOfferResponse,\n  GetCollectionResponse,\n  GetCollectionsResponse,\n  ListNFTsResponse,\n  GetNFTResponse,\n  ListCollectionOffersResponse,\n  GetOrdersResponse,\n  GetBestOfferResponse,\n  GetBestListingResponse,\n  GetOffersResponse,\n  GetListingsResponse,\n  CollectionOffer,\n  CollectionOrderByOption,\n  CancelOrderResponse,\n  GetCollectionsArgs,\n} from \"./types\";\nimport { API_BASE_MAINNET, API_BASE_TESTNET } from \"../constants\";\nimport {\n  FulfillmentDataResponse,\n  OrderAPIOptions,\n  OrdersPostQueryResponse,\n  OrdersQueryOptions,\n  OrdersQueryResponse,\n  OrderV2,\n  ProtocolData,\n} from \"../orders/types\";\nimport {\n  serializeOrdersQueryOptions,\n  deserializeOrder,\n  getFulfillmentDataPath,\n  getFulfillListingPayload,\n  getFulfillOfferPayload,\n  getBuildCollectionOfferPayload,\n  getPostCollectionOfferPayload,\n} from \"../orders/utils\";\nimport {\n  Chain,\n  OpenSeaAPIConfig,\n  OpenSeaAccount,\n  OpenSeaCollection,\n  OpenSeaCollectionStats,\n  OpenSeaPaymentToken,\n  OrderSide,\n} from \"../types\";\nimport {\n  paymentTokenFromJSON,\n  collectionFromJSON,\n  isTestChain,\n  accountFromJSON,\n} from \"../utils/utils\";\n\n/**\n * The API class for the OpenSea SDK.\n * @category Main Classes\n */\nexport class OpenSeaAPI {\n  /**\n   * Base url for the API\n   */\n  public readonly apiBaseUrl: string;\n  /**\n   * Default size to use for fetching orders\n   */\n  public pageSize = 20;\n  /**\n   * Logger function to use when debugging\n   */\n  public logger: (arg: string) => void;\n\n  private apiKey: string | undefined;\n  private chain: Chain;\n\n  /**\n   * Create an instance of the OpenSeaAPI\n   * @param config OpenSeaAPIConfig for setting up the API, including an optional API key, Chain name, and base URL\n   * @param logger Optional function for logging debug strings before and after requests are made. Defaults to no logging\n   */\n  constructor(config: OpenSeaAPIConfig, logger?: (arg: string) => void) {\n    this.apiKey = config.apiKey;\n    this.chain = config.chain ?? Chain.Mainnet;\n\n    if (config.apiBaseUrl) {\n      this.apiBaseUrl = config.apiBaseUrl;\n    } else {\n      this.apiBaseUrl = isTestChain(this.chain)\n        ? API_BASE_TESTNET\n        : API_BASE_MAINNET;\n    }\n\n    // Debugging: default to nothing\n    this.logger = logger ?? ((arg: string) => arg);\n  }\n\n  /**\n   * Gets an order from API based on query options.\n   * @param options\n   * @param options.side The side of the order (listing or offer)\n   * @param options.protocol The protocol, typically seaport, to query orders for\n   * @param options.orderDirection The direction to sort the orders\n   * @param options.orderBy The field to sort the orders by\n   * @param options.limit The number of orders to retrieve\n   * @param options.maker Filter by the wallet address of the order maker\n   * @param options.taker Filter by  wallet address of the order taker\n   * @param options.asset_contract_address Address of the NFT's contract\n   * @param options.token_ids String array of token IDs to filter by.\n   * @param options.listed_after Filter by orders listed after the Unix epoch timestamp in seconds\n   * @param options.listed_before Filter by orders listed before the Unix epoch timestamp in seconds\n   * @returns The first {@link OrderV2} returned by the API\n   *\n   * @throws An error if there are no matching orders.\n   */\n  public async getOrder({\n    side,\n    protocol = \"seaport\",\n    orderDirection = \"desc\",\n    orderBy = \"created_date\",\n    ...restOptions\n  }: Omit<OrdersQueryOptions, \"limit\">): Promise<OrderV2> {\n    const { orders } = await this.get<OrdersQueryResponse>(\n      getOrdersAPIPath(this.chain, protocol, side),\n      serializeOrdersQueryOptions({\n        limit: 1,\n        orderBy,\n        orderDirection,\n        ...restOptions,\n      }),\n    );\n    if (orders.length === 0) {\n      throw new Error(\"Not found: no matching order found\");\n    }\n    return deserializeOrder(orders[0]);\n  }\n\n  /**\n   * Gets a list of orders from API based on query options.\n   * @param options\n   * @param options.side The side of the order (buy or sell)\n   * @param options.protocol The protocol, typically seaport, to query orders for\n   * @param options.orderDirection The direction to sort the orders\n   * @param options.orderBy The field to sort the orders by\n   * @param options.limit The number of orders to retrieve\n   * @param options.maker Filter by the wallet address of the order maker\n   * @param options.taker Filter by  wallet address of the order taker\n   * @param options.asset_contract_address Address of the NFT's contract\n   * @param options.token_ids String array of token IDs to filter by.\n   * @param options.listed_after Filter by orders listed after the Unix epoch timestamp in seconds\n   * @param options.listed_before Filter by orders listed before the Unix epoch timestamp in seconds\n   * @returns The {@link GetOrdersResponse} returned by the API.\n   */\n  public async getOrders({\n    side,\n    protocol = \"seaport\",\n    orderDirection = \"desc\",\n    orderBy = \"created_date\",\n    ...restOptions\n  }: Omit<OrdersQueryOptions, \"limit\">): Promise<GetOrdersResponse> {\n    const response = await this.get<OrdersQueryResponse>(\n      getOrdersAPIPath(this.chain, protocol, side),\n      serializeOrdersQueryOptions({\n        limit: this.pageSize,\n        orderBy,\n        orderDirection,\n        ...restOptions,\n      }),\n    );\n    return {\n      ...response,\n      orders: response.orders.map(deserializeOrder),\n    };\n  }\n\n  /**\n   * Gets all offers for a given collection.\n   * @param collectionSlug The slug of the collection.\n   * @param limit The number of offers to return. Must be between 1 and 100. Default: 100\n   * @param next The cursor for the next page of results. This is returned from a previous request.\n   * @returns The {@link GetOffersResponse} returned by the API.\n   */\n  public async getAllOffers(\n    collectionSlug: string,\n    limit?: number,\n    next?: string,\n  ): Promise<GetOffersResponse> {\n    const response = await this.get<GetOffersResponse>(\n      getAllOffersAPIPath(collectionSlug),\n      {\n        limit,\n        next,\n      },\n    );\n    return response;\n  }\n\n  /**\n   * Gets all listings for a given collection.\n   * @param collectionSlug The slug of the collection.\n   * @param limit The number of listings to return. Must be between 1 and 100. Default: 100\n   * @param next The cursor for the next page of results. This is returned from a previous request.\n   * @returns The {@link GetListingsResponse} returned by the API.\n   */\n  public async getAllListings(\n    collectionSlug: string,\n    limit?: number,\n    next?: string,\n  ): Promise<GetListingsResponse> {\n    const response = await this.get<GetListingsResponse>(\n      getAllListingsAPIPath(collectionSlug),\n      {\n        limit,\n        next,\n      },\n    );\n    return response;\n  }\n\n  /**\n   * Gets the best offer for a given token.\n   * @param collectionSlug The slug of the collection.\n   * @param tokenId The token identifier.\n   * @returns The {@link GetBestOfferResponse} returned by the API.\n   */\n  public async getBestOffer(\n    collectionSlug: string,\n    tokenId: string | number,\n  ): Promise<GetBestOfferResponse> {\n    const response = await this.get<GetBestOfferResponse>(\n      getBestOfferAPIPath(collectionSlug, tokenId),\n    );\n    return response;\n  }\n\n  /**\n   * Gets the best listing for a given token.\n   * @param collectionSlug The slug of the collection.\n   * @param tokenId The token identifier.\n   * @returns The {@link GetBestListingResponse} returned by the API.\n   */\n  public async getBestListing(\n    collectionSlug: string,\n    tokenId: string | number,\n  ): Promise<GetBestListingResponse> {\n    const response = await this.get<GetBestListingResponse>(\n      getBestListingAPIPath(collectionSlug, tokenId),\n    );\n    return response;\n  }\n\n  /**\n   * Gets the best listings for a given collection.\n   * @param collectionSlug The slug of the collection.\n   * @param limit The number of listings to return. Must be between 1 and 100. Default: 100\n   * @param next The cursor for the next page of results. This is returned from a previous request.\n   * @returns The {@link GetListingsResponse} returned by the API.\n   */\n  public async getBestListings(\n    collectionSlug: string,\n    limit?: number,\n    next?: string,\n  ): Promise<GetListingsResponse> {\n    const response = await this.get<GetListingsResponse>(\n      getBestListingsAPIPath(collectionSlug),\n      {\n        limit,\n        next,\n      },\n    );\n    return response;\n  }\n\n  /**\n   * Generate the data needed to fulfill a listing or an offer onchain.\n   * @param fulfillerAddress The wallet address which will be used to fulfill the order\n   * @param orderHash The hash of the order to fulfill\n   * @param protocolAddress The address of the seaport contract\n   * @side The side of the order (buy or sell)\n   * @returns The {@link FulfillmentDataResponse}\n   */\n  public async generateFulfillmentData(\n    fulfillerAddress: string,\n    orderHash: string,\n    protocolAddress: string,\n    side: OrderSide,\n  ): Promise<FulfillmentDataResponse> {\n    let payload: object | null = null;\n    if (side === OrderSide.LISTING) {\n      payload = getFulfillListingPayload(\n        fulfillerAddress,\n        orderHash,\n        protocolAddress,\n        this.chain,\n      );\n    } else {\n      payload = getFulfillOfferPayload(\n        fulfillerAddress,\n        orderHash,\n        protocolAddress,\n        this.chain,\n      );\n    }\n    const response = await this.post<FulfillmentDataResponse>(\n      getFulfillmentDataPath(side),\n      payload,\n    );\n    return response;\n  }\n\n  /**\n   * Post an order to OpenSea.\n   * @param order The order to post\n   * @param apiOptions\n   * @param apiOptions.protocol The protocol, typically seaport, to post the order to.\n   * @param apiOptions.side The side of the order (buy or sell).\n   * @param apiOptions.protocolAddress The address of the seaport contract.\n   * @param options\n   * @returns The {@link OrderV2} posted to the API.\n   */\n  public async postOrder(\n    order: ProtocolData,\n    apiOptions: OrderAPIOptions,\n  ): Promise<OrderV2> {\n    const { protocol = \"seaport\", side, protocolAddress } = apiOptions;\n\n    // Validate required fields\n    if (!side) {\n      throw new Error(\"apiOptions.side is required\");\n    }\n    if (!protocolAddress) {\n      throw new Error(\"apiOptions.protocolAddress is required\");\n    }\n    if (!order) {\n      throw new Error(\"order data is required\");\n    }\n\n    // Validate protocol value\n    if (protocol !== \"seaport\") {\n      throw new Error(\"Currently only 'seaport' protocol is supported\");\n    }\n\n    // Validate side value\n    if (side !== \"ask\" && side !== \"bid\") {\n      throw new Error(\"side must be either 'ask' or 'bid'\");\n    }\n\n    // Validate protocolAddress format\n    if (!/^0x[a-fA-F0-9]{40}$/.test(protocolAddress)) {\n      throw new Error(\"Invalid protocol address format\");\n    }\n\n    const response = await this.post<OrdersPostQueryResponse>(\n      getOrdersAPIPath(this.chain, protocol, side),\n      { ...order, protocol_address: protocolAddress },\n    );\n    return deserializeOrder(response.order);\n  }\n\n  /**\n   * Build a OpenSea collection offer.\n   * @param offererAddress The wallet address which is creating the offer.\n   * @param quantity The number of NFTs requested in the offer.\n   * @param collectionSlug The slug (identifier) of the collection to build the offer for.\n   * @param offerProtectionEnabled Build the offer on OpenSea's signed zone to provide offer protections from receiving an item which is disabled from trading.\n   * @param traitType If defined, the trait name to create the collection offer for.\n   * @param traitValue If defined, the trait value to create the collection offer for.\n   * @returns The {@link BuildOfferResponse} returned by the API.\n   */\n  public async buildOffer(\n    offererAddress: string,\n    quantity: number,\n    collectionSlug: string,\n    offerProtectionEnabled = true,\n    traitType?: string,\n    traitValue?: string,\n  ): Promise<BuildOfferResponse> {\n    if (traitType || traitValue) {\n      if (!traitType || !traitValue) {\n        throw new Error(\n          \"Both traitType and traitValue must be defined if one is defined.\",\n        );\n      }\n    }\n    const payload = getBuildCollectionOfferPayload(\n      offererAddress,\n      quantity,\n      collectionSlug,\n      offerProtectionEnabled,\n      traitType,\n      traitValue,\n    );\n    const response = await this.post<BuildOfferResponse>(\n      getBuildOfferPath(),\n      payload,\n    );\n    return response;\n  }\n\n  /**\n   * Get a list collection offers for a given slug.\n   * @param slug The slug (identifier) of the collection to list offers for\n   * @returns The {@link ListCollectionOffersResponse} returned by the API.\n   */\n  public async getCollectionOffers(\n    slug: string,\n  ): Promise<ListCollectionOffersResponse | null> {\n    return await this.get<ListCollectionOffersResponse>(\n      getCollectionOffersPath(slug),\n    );\n  }\n\n  /**\n   * Post a collection offer to OpenSea.\n   * @param order The collection offer to post.\n   * @param slug The slug (identifier) of the collection to post the offer for.\n   * @param traitType If defined, the trait name to create the collection offer for.\n   * @param traitValue If defined, the trait value to create the collection offer for.\n   * @returns The {@link Offer} returned to the API.\n   */\n  public async postCollectionOffer(\n    order: ProtocolData,\n    slug: string,\n    traitType?: string,\n    traitValue?: string,\n  ): Promise<CollectionOffer | null> {\n    const payload = getPostCollectionOfferPayload(\n      slug,\n      order,\n      traitType,\n      traitValue,\n    );\n    return await this.post<CollectionOffer>(\n      getPostCollectionOfferPath(),\n      payload,\n    );\n  }\n\n  /**\n   * Fetch multiple NFTs for a collection.\n   * @param slug The slug (identifier) of the collection\n   * @param limit The number of NFTs to retrieve. Must be greater than 0 and less than 51.\n   * @param next Cursor to retrieve the next page of NFTs\n   * @returns The {@link ListNFTsResponse} returned by the API.\n   */\n  public async getNFTsByCollection(\n    slug: string,\n    limit: number | undefined = undefined,\n    next: string | undefined = undefined,\n  ): Promise<ListNFTsResponse> {\n    const response = await this.get<ListNFTsResponse>(\n      getListNFTsByCollectionPath(slug),\n      {\n        limit,\n        next,\n      },\n    );\n    return response;\n  }\n\n  /**\n   * Fetch multiple NFTs for a contract.\n   * @param address The NFT's contract address.\n   * @param limit The number of NFTs to retrieve. Must be greater than 0 and less than 51.\n   * @param next Cursor to retrieve the next page of NFTs.\n   * @param chain The NFT's chain.\n   * @returns The {@link ListNFTsResponse} returned by the API.\n   */\n  public async getNFTsByContract(\n    address: string,\n    limit: number | undefined = undefined,\n    next: string | undefined = undefined,\n    chain: Chain = this.chain,\n  ): Promise<ListNFTsResponse> {\n    const response = await this.get<ListNFTsResponse>(\n      getListNFTsByContractPath(chain, address),\n      {\n        limit,\n        next,\n      },\n    );\n    return response;\n  }\n\n  /**\n   * Fetch NFTs owned by an account.\n   * @param address The address of the account\n   * @param limit The number of NFTs to retrieve. Must be greater than 0 and less than 51.\n   * @param next Cursor to retrieve the next page of NFTs\n   * @param chain The chain to query. Defaults to the chain set in the constructor.\n   * @returns The {@link ListNFTsResponse} returned by the API.\n   */\n  public async getNFTsByAccount(\n    address: string,\n    limit: number | undefined = undefined,\n    next: string | undefined = undefined,\n    chain = this.chain,\n  ): Promise<ListNFTsResponse> {\n    const response = await this.get<ListNFTsResponse>(\n      getListNFTsByAccountPath(chain, address),\n      {\n        limit,\n        next,\n      },\n    );\n\n    return response;\n  }\n\n  /**\n   * Fetch metadata, traits, ownership information, and rarity for a single NFT.\n   * @param address The NFT's contract address.\n   * @param identifier the identifier of the NFT (i.e. Token ID)\n   * @param chain The NFT's chain.\n   * @returns The {@link GetNFTResponse} returned by the API.\n   */\n  public async getNFT(\n    address: string,\n    identifier: string,\n    chain = this.chain,\n  ): Promise<GetNFTResponse> {\n    const response = await this.get<GetNFTResponse>(\n      getNFTPath(chain, address, identifier),\n    );\n    return response;\n  }\n\n  /**\n   * Fetch an OpenSea collection.\n   * @param slug The slug (identifier) of the collection.\n   * @returns The {@link OpenSeaCollection} returned by the API.\n   */\n  public async getCollection(slug: string): Promise<OpenSeaCollection> {\n    const path = getCollectionPath(slug);\n    const response = await this.get<GetCollectionResponse>(path);\n    return collectionFromJSON(response);\n  }\n\n  /**\n   * Fetch a list of OpenSea collections.\n   * @param orderBy The order to return the collections in. Default: CREATED_DATE\n   * @param chain The chain to filter the collections on. Default: all chains\n   * @param creatorUsername The creator's OpenSea username to filter the collections on.\n   * @param includeHidden If hidden collections should be returned. Default: false\n   * @param limit The limit of collections to return.\n   * @param next The cursor for the next page of results. This is returned from a previous request.\n   * @returns List of {@link OpenSeaCollection} returned by the API.\n   */\n  public async getCollections(\n    orderBy: CollectionOrderByOption = CollectionOrderByOption.CREATED_DATE,\n    chain?: Chain,\n    creatorUsername?: string,\n    includeHidden: boolean = false,\n    limit?: number,\n    next?: string,\n  ): Promise<GetCollectionsResponse> {\n    const path = getCollectionsPath();\n    const args: GetCollectionsArgs = {\n      order_by: orderBy,\n      chain,\n      creator_username: creatorUsername,\n      include_hidden: includeHidden,\n      limit,\n      next,\n    };\n    const response = await this.get<GetCollectionsResponse>(path, args);\n    response.collections = response.collections.map((collection) =>\n      collectionFromJSON(collection),\n    );\n    return response;\n  }\n\n  /**\n   * Fetch stats for an OpenSea collection.\n   * @param slug The slug (identifier) of the collection.\n   * @returns The {@link OpenSeaCollection} returned by the API.\n   */\n  public async getCollectionStats(\n    slug: string,\n  ): Promise<OpenSeaCollectionStats> {\n    const path = getCollectionStatsPath(slug);\n    const response = await this.get<OpenSeaCollectionStats>(path);\n    return response as OpenSeaCollectionStats;\n  }\n\n  /**\n   * Fetch a payment token.\n   * @param query Query to use for getting tokens. See {@link OpenSeaPaymentTokenQuery}.\n   * @param next The cursor for the next page of results. This is returned from a previous request.\n   * @returns The {@link OpenSeaPaymentToken} returned by the API.\n   */\n  public async getPaymentToken(\n    address: string,\n    chain = this.chain,\n  ): Promise<OpenSeaPaymentToken> {\n    const json = await this.get<OpenSeaPaymentToken>(\n      getPaymentTokenPath(chain, address),\n    );\n    return paymentTokenFromJSON(json);\n  }\n\n  /**\n   * Fetch account for an address.\n   * @param query Query to use for getting tokens. See {@link OpenSeaPaymentTokenQuery}.\n   * @param next The cursor for the next page of results. This is returned from a previous request.\n   * @returns The {@link GetAccountResponse} returned by the API.\n   */\n  public async getAccount(address: string): Promise<OpenSeaAccount> {\n    const json = await this.get<OpenSeaAccount>(getAccountPath(address));\n    return accountFromJSON(json);\n  }\n\n  /**\n   * Force refresh the metadata for an NFT.\n   * @param address The address of the NFT's contract.\n   * @param identifier The identifier of the NFT.\n   * @param chain The chain where the NFT is located.\n   * @returns The response from the API.\n   */\n  public async refreshNFTMetadata(\n    address: string,\n    identifier: string,\n    chain: Chain = this.chain,\n  ): Promise<Response> {\n    const response = await this.post<Response>(\n      getRefreshMetadataPath(chain, address, identifier),\n      {},\n    );\n\n    return response;\n  }\n\n  /**\n   * Offchain cancel an order, offer or listing, by its order hash when protected by the SignedZone.\n   * Protocol and Chain are required to prevent hash collisions.\n   * Please note cancellation is only assured if a fulfillment signature was not vended prior to cancellation.\n   * @param protocolAddress The Seaport address for the order.\n   * @param orderHash The order hash, or external identifier, of the order.\n   * @param chain The chain where the order is located.\n   * @param offererSignature An EIP-712 signature from the offerer of the order.\n   *                         If this is not provided, the user associated with the API Key will be checked instead.\n   *                         The signature must be a EIP-712 signature consisting of the order's Seaport contract's\n   *                         name, version, address, and chain. The struct to sign is `OrderHash` containing a\n   *                         single bytes32 field.\n   * @returns The response from the API.\n   */\n  public async offchainCancelOrder(\n    protocolAddress: string,\n    orderHash: string,\n    chain: Chain = this.chain,\n    offererSignature?: string,\n  ): Promise<CancelOrderResponse> {\n    const response = await this.post<CancelOrderResponse>(\n      getCancelOrderPath(chain, protocolAddress, orderHash),\n      { offererSignature },\n    );\n    return response;\n  }\n\n  /**\n   * Generic fetch method for any API endpoint\n   * @param apiPath Path to URL endpoint under API\n   * @param query URL query params. Will be used to create a URLSearchParams object.\n   * @returns @typeParam T The response from the API.\n   */\n  public async get<T>(apiPath: string, query: object = {}): Promise<T> {\n    const qs = this.objectToSearchParams(query);\n    const url = `${this.apiBaseUrl}${apiPath}?${qs}`;\n    return await this._fetch(url);\n  }\n\n  /**\n   * Generic post method for any API endpoint.\n   * @param apiPath Path to URL endpoint under API\n   * @param body Data to send.\n   * @param opts ethers ConnectionInfo, similar to Fetch API.\n   * @returns @typeParam T The response from the API.\n   */\n  public async post<T>(\n    apiPath: string,\n    body?: object,\n    opts?: object,\n  ): Promise<T> {\n    const url = `${this.apiBaseUrl}${apiPath}`;\n    return await this._fetch(url, opts, body);\n  }\n\n  private objectToSearchParams(params: object = {}) {\n    const urlSearchParams = new URLSearchParams();\n\n    Object.entries(params).forEach(([key, value]) => {\n      if (value && Array.isArray(value)) {\n        value.forEach((item) => item && urlSearchParams.append(key, item));\n      } else if (value) {\n        urlSearchParams.append(key, value);\n      }\n    });\n\n    return urlSearchParams.toString();\n  }\n\n  /**\n   * Get from an API Endpoint, sending auth token in headers\n   * @param opts ethers ConnectionInfo, similar to Fetch API\n   * @param body Optional body to send. If set, will POST, otherwise GET\n   */\n  private async _fetch(url: string, headers?: object, body?: object) {\n    // Create the fetch request\n    const req = new ethers.FetchRequest(url);\n\n    // Set the headers\n    headers = {\n      \"x-app-id\": \"opensea-js\",\n      ...(this.apiKey ? { \"X-API-KEY\": this.apiKey } : {}),\n      ...headers,\n    };\n    for (const [key, value] of Object.entries(headers)) {\n      req.setHeader(key, value);\n    }\n\n    // Set the body if provided\n    if (body) {\n      req.body = body;\n    }\n\n    // Set the throttle params\n    req.setThrottleParams({ slotInterval: 1000 });\n\n    this.logger(\n      `Sending request: ${url} ${JSON.stringify({\n        request: req,\n        headers: req.headers,\n      })}`,\n    );\n\n    const response = await req.send();\n    if (!response.ok()) {\n      // If an errors array is returned, throw with the error messages.\n      const errors = response.bodyJson?.errors;\n      if (errors?.length > 0) {\n        let errorMessage = errors.join(\", \");\n        if (errorMessage === \"[object Object]\") {\n          errorMessage = JSON.stringify(errors);\n        }\n        throw new Error(`Server Error: ${errorMessage}`);\n      } else {\n        // Otherwise, let ethers throw a SERVER_ERROR since it will include\n        // more context about the request and response.\n        response.assertOk();\n      }\n    }\n    return response.bodyJson;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fbbcaf174f595c51ee573aba83b702bbf0e539e2","contentHash":"2aab843588ac4f54e80357246b15cfe4732dc5de5cf1adebf8392e2ab40f0261"},"/Users/rg/dev/opensea-js/src/api/apiPaths.ts":{"path":"/Users/rg/dev/opensea-js/src/api/apiPaths.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":627}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":25},"end":{"line":8,"column":1}},"4":{"start":{"line":6,"column":21},"end":{"line":6,"column":79}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":61}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":44}},"7":{"start":{"line":10,"column":28},"end":{"line":12,"column":1}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":61}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":50}},"10":{"start":{"line":14,"column":30},"end":{"line":16,"column":1}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":63}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":54}},"13":{"start":{"line":18,"column":28},"end":{"line":20,"column":1}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":78}},"15":{"start":{"line":21,"column":0},"end":{"line":21,"column":50}},"16":{"start":{"line":22,"column":30},"end":{"line":24,"column":1}},"17":{"start":{"line":23,"column":4},"end":{"line":23,"column":80}},"18":{"start":{"line":25,"column":0},"end":{"line":25,"column":54}},"19":{"start":{"line":26,"column":31},"end":{"line":28,"column":1}},"20":{"start":{"line":27,"column":4},"end":{"line":27,"column":64}},"21":{"start":{"line":29,"column":0},"end":{"line":29,"column":56}},"22":{"start":{"line":30,"column":26},"end":{"line":32,"column":1}},"23":{"start":{"line":31,"column":4},"end":{"line":31,"column":41}},"24":{"start":{"line":33,"column":0},"end":{"line":33,"column":46}},"25":{"start":{"line":34,"column":27},"end":{"line":36,"column":1}},"26":{"start":{"line":35,"column":4},"end":{"line":35,"column":33}},"27":{"start":{"line":37,"column":0},"end":{"line":37,"column":48}},"28":{"start":{"line":38,"column":31},"end":{"line":40,"column":1}},"29":{"start":{"line":39,"column":4},"end":{"line":39,"column":47}},"30":{"start":{"line":41,"column":0},"end":{"line":41,"column":56}},"31":{"start":{"line":42,"column":28},"end":{"line":44,"column":1}},"32":{"start":{"line":43,"column":4},"end":{"line":43,"column":61}},"33":{"start":{"line":45,"column":0},"end":{"line":45,"column":50}},"34":{"start":{"line":46,"column":23},"end":{"line":48,"column":1}},"35":{"start":{"line":47,"column":4},"end":{"line":47,"column":41}},"36":{"start":{"line":49,"column":0},"end":{"line":49,"column":40}},"37":{"start":{"line":50,"column":26},"end":{"line":52,"column":1}},"38":{"start":{"line":51,"column":4},"end":{"line":51,"column":34}},"39":{"start":{"line":53,"column":0},"end":{"line":53,"column":46}},"40":{"start":{"line":54,"column":35},"end":{"line":56,"column":1}},"41":{"start":{"line":55,"column":4},"end":{"line":55,"column":28}},"42":{"start":{"line":57,"column":0},"end":{"line":57,"column":64}},"43":{"start":{"line":58,"column":32},"end":{"line":60,"column":1}},"44":{"start":{"line":59,"column":4},"end":{"line":59,"column":47}},"45":{"start":{"line":61,"column":0},"end":{"line":61,"column":58}},"46":{"start":{"line":62,"column":36},"end":{"line":64,"column":1}},"47":{"start":{"line":63,"column":4},"end":{"line":63,"column":45}},"48":{"start":{"line":65,"column":0},"end":{"line":65,"column":66}},"49":{"start":{"line":66,"column":34},"end":{"line":68,"column":1}},"50":{"start":{"line":67,"column":4},"end":{"line":67,"column":61}},"51":{"start":{"line":69,"column":0},"end":{"line":69,"column":62}},"52":{"start":{"line":70,"column":33},"end":{"line":72,"column":1}},"53":{"start":{"line":71,"column":4},"end":{"line":71,"column":60}},"54":{"start":{"line":73,"column":0},"end":{"line":73,"column":60}},"55":{"start":{"line":74,"column":19},"end":{"line":76,"column":1}},"56":{"start":{"line":75,"column":4},"end":{"line":75,"column":75}},"57":{"start":{"line":77,"column":0},"end":{"line":77,"column":32}},"58":{"start":{"line":78,"column":31},"end":{"line":80,"column":1}},"59":{"start":{"line":79,"column":4},"end":{"line":79,"column":83}},"60":{"start":{"line":81,"column":0},"end":{"line":81,"column":56}},"61":{"start":{"line":82,"column":27},"end":{"line":84,"column":1}},"62":{"start":{"line":83,"column":4},"end":{"line":83,"column":91}},"63":{"start":{"line":85,"column":0},"end":{"line":85,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":25},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":52},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":28},"end":{"line":10,"column":29}},"loc":{"start":{"line":10,"column":48},"end":{"line":12,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":30},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":50},"end":{"line":16,"column":1}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":28},"end":{"line":18,"column":29}},"loc":{"start":{"line":18,"column":57},"end":{"line":20,"column":1}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":30},"end":{"line":22,"column":31}},"loc":{"start":{"line":22,"column":59},"end":{"line":24,"column":1}},"line":22},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":31},"end":{"line":26,"column":32}},"loc":{"start":{"line":26,"column":51},"end":{"line":28,"column":1}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":30,"column":26},"end":{"line":30,"column":27}},"loc":{"start":{"line":30,"column":36},"end":{"line":32,"column":1}},"line":30},"7":{"name":"(anonymous_7)","decl":{"start":{"line":34,"column":27},"end":{"line":34,"column":28}},"loc":{"start":{"line":34,"column":33},"end":{"line":36,"column":1}},"line":34},"8":{"name":"(anonymous_8)","decl":{"start":{"line":38,"column":31},"end":{"line":38,"column":32}},"loc":{"start":{"line":38,"column":41},"end":{"line":40,"column":1}},"line":38},"9":{"name":"(anonymous_9)","decl":{"start":{"line":42,"column":28},"end":{"line":42,"column":29}},"loc":{"start":{"line":42,"column":48},"end":{"line":44,"column":1}},"line":42},"10":{"name":"(anonymous_10)","decl":{"start":{"line":46,"column":23},"end":{"line":46,"column":24}},"loc":{"start":{"line":46,"column":36},"end":{"line":48,"column":1}},"line":46},"11":{"name":"(anonymous_11)","decl":{"start":{"line":50,"column":26},"end":{"line":50,"column":27}},"loc":{"start":{"line":50,"column":32},"end":{"line":52,"column":1}},"line":50},"12":{"name":"(anonymous_12)","decl":{"start":{"line":54,"column":35},"end":{"line":54,"column":36}},"loc":{"start":{"line":54,"column":41},"end":{"line":56,"column":1}},"line":54},"13":{"name":"(anonymous_13)","decl":{"start":{"line":58,"column":32},"end":{"line":58,"column":33}},"loc":{"start":{"line":58,"column":42},"end":{"line":60,"column":1}},"line":58},"14":{"name":"(anonymous_14)","decl":{"start":{"line":62,"column":36},"end":{"line":62,"column":37}},"loc":{"start":{"line":62,"column":46},"end":{"line":64,"column":1}},"line":62},"15":{"name":"(anonymous_15)","decl":{"start":{"line":66,"column":34},"end":{"line":66,"column":35}},"loc":{"start":{"line":66,"column":54},"end":{"line":68,"column":1}},"line":66},"16":{"name":"(anonymous_16)","decl":{"start":{"line":70,"column":33},"end":{"line":70,"column":34}},"loc":{"start":{"line":70,"column":53},"end":{"line":72,"column":1}},"line":70},"17":{"name":"(anonymous_17)","decl":{"start":{"line":74,"column":19},"end":{"line":74,"column":20}},"loc":{"start":{"line":74,"column":51},"end":{"line":76,"column":1}},"line":74},"18":{"name":"(anonymous_18)","decl":{"start":{"line":78,"column":31},"end":{"line":78,"column":32}},"loc":{"start":{"line":78,"column":63},"end":{"line":80,"column":1}},"line":78},"19":{"name":"(anonymous_19)","decl":{"start":{"line":82,"column":27},"end":{"line":82,"column":28}},"loc":{"start":{"line":82,"column":66},"end":{"line":84,"column":1}},"line":82}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":21},"end":{"line":6,"column":79}},"type":"cond-expr","locations":[{"start":{"line":6,"column":58},"end":{"line":6,"column":68}},{"start":{"line":6,"column":71},"end":{"line":6,"column":79}}],"line":6}},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":1,"7":1,"8":1,"9":1,"10":1,"11":3,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":6,"24":1,"25":1,"26":2,"27":1,"28":1,"29":1,"30":1,"31":1,"32":0,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":4,"57":1,"58":1,"59":1,"60":1,"61":1,"62":0,"63":1},"f":{"0":3,"1":1,"2":3,"3":1,"4":1,"5":1,"6":6,"7":2,"8":1,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":4,"18":1,"19":0},"b":{"0":[1,2]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/api/apiPaths.ts","sources":["/Users/rg/dev/opensea-js/src/api/apiPaths.ts"],"names":[],"mappings":"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","sourcesContent":["import { OrderProtocol } from \"../orders/types\";\nimport { Chain, OrderSide } from \"../types\";\n\nexport const getOrdersAPIPath = (\n  chain: Chain,\n  protocol: OrderProtocol,\n  side: OrderSide,\n) => {\n  const sidePath = side === OrderSide.LISTING ? \"listings\" : \"offers\";\n  return `/api/v2/orders/${chain}/${protocol}/${sidePath}`;\n};\n\nexport const getAllOffersAPIPath = (collectionSlug: string) => {\n  return `/api/v2/offers/collection/${collectionSlug}/all`;\n};\n\nexport const getAllListingsAPIPath = (collectionSlug: string) => {\n  return `/api/v2/listings/collection/${collectionSlug}/all`;\n};\n\nexport const getBestOfferAPIPath = (\n  collectionSlug: string,\n  tokenId: string | number,\n) => {\n  return `/api/v2/offers/collection/${collectionSlug}/nfts/${tokenId}/best`;\n};\n\nexport const getBestListingAPIPath = (\n  collectionSlug: string,\n  tokenId: string | number,\n) => {\n  return `/api/v2/listings/collection/${collectionSlug}/nfts/${tokenId}/best`;\n};\n\nexport const getBestListingsAPIPath = (collectionSlug: string) => {\n  return `/api/v2/listings/collection/${collectionSlug}/best`;\n};\n\nexport const getCollectionPath = (slug: string) => {\n  return `/api/v2/collections/${slug}`;\n};\n\nexport const getCollectionsPath = () => {\n  return \"/api/v2/collections\";\n};\n\nexport const getCollectionStatsPath = (slug: string) => {\n  return `/api/v2/collections/${slug}/stats`;\n};\n\nexport const getPaymentTokenPath = (chain: Chain, address: string) => {\n  return `/api/v2/chain/${chain}/payment_token/${address}`;\n};\n\nexport const getAccountPath = (address: string) => {\n  return `/api/v2/accounts/${address}`;\n};\n\nexport const getBuildOfferPath = () => {\n  return `/api/v2/offers/build`;\n};\n\nexport const getPostCollectionOfferPath = () => {\n  return `/api/v2/offers`;\n};\n\nexport const getCollectionOffersPath = (slug: string) => {\n  return `/api/v2/offers/collection/${slug}`;\n};\n\nexport const getListNFTsByCollectionPath = (slug: string) => {\n  return `/api/v2/collection/${slug}/nfts`;\n};\n\nexport const getListNFTsByContractPath = (chain: Chain, address: string) => {\n  return `/api/v2/chain/${chain}/contract/${address}/nfts`;\n};\n\nexport const getListNFTsByAccountPath = (chain: Chain, address: string) => {\n  return `/api/v2/chain/${chain}/account/${address}/nfts`;\n};\n\nexport const getNFTPath = (\n  chain: Chain,\n  address: string,\n  identifier: string,\n) => {\n  return `/api/v2/chain/${chain}/contract/${address}/nfts/${identifier}`;\n};\n\nexport const getRefreshMetadataPath = (\n  chain: Chain,\n  address: string,\n  identifier: string,\n) => {\n  return `/api/v2/chain/${chain}/contract/${address}/nfts/${identifier}/refresh`;\n};\n\nexport const getCancelOrderPath = (\n  chain: Chain,\n  protocolAddress: string,\n  orderHash: string,\n) => {\n  return `/api/v2/orders/chain/${chain}/protocol/${protocolAddress}/${orderHash}/cancel`;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"61b5a42cb0000f43e9aac0be7cbcf1cd1393edb9","contentHash":"aedba706daf1f4e89ddd6fae50c68238e07bedba74c5b2e979528704526a15d8"},"/Users/rg/dev/opensea-js/src/types.ts":{"path":"/Users/rg/dev/opensea-js/src/types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":112}},"2":{"start":{"line":10,"column":0},"end":{"line":52,"column":54}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":59}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":63}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":57}},"6":{"start":{"line":27,"column":4},"end":{"line":27,"column":57}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":37}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":43}},"9":{"start":{"line":39,"column":4},"end":{"line":39,"column":45}},"10":{"start":{"line":43,"column":4},"end":{"line":43,"column":45}},"11":{"start":{"line":47,"column":4},"end":{"line":47,"column":47}},"12":{"start":{"line":51,"column":4},"end":{"line":51,"column":39}},"13":{"start":{"line":58,"column":0},"end":{"line":130,"column":42}},"14":{"start":{"line":61,"column":4},"end":{"line":61,"column":34}},"15":{"start":{"line":63,"column":4},"end":{"line":63,"column":31}},"16":{"start":{"line":65,"column":4},"end":{"line":65,"column":31}},"17":{"start":{"line":67,"column":4},"end":{"line":67,"column":27}},"18":{"start":{"line":69,"column":4},"end":{"line":69,"column":29}},"19":{"start":{"line":71,"column":4},"end":{"line":71,"column":35}},"20":{"start":{"line":73,"column":4},"end":{"line":73,"column":44}},"21":{"start":{"line":75,"column":4},"end":{"line":75,"column":37}},"22":{"start":{"line":77,"column":4},"end":{"line":77,"column":35}},"23":{"start":{"line":79,"column":4},"end":{"line":79,"column":31}},"24":{"start":{"line":81,"column":4},"end":{"line":81,"column":27}},"25":{"start":{"line":83,"column":4},"end":{"line":83,"column":25}},"26":{"start":{"line":85,"column":4},"end":{"line":85,"column":23}},"27":{"start":{"line":87,"column":4},"end":{"line":87,"column":38}},"28":{"start":{"line":89,"column":4},"end":{"line":89,"column":36}},"29":{"start":{"line":91,"column":4},"end":{"line":91,"column":27}},"30":{"start":{"line":93,"column":4},"end":{"line":93,"column":29}},"31":{"start":{"line":95,"column":4},"end":{"line":95,"column":35}},"32":{"start":{"line":97,"column":4},"end":{"line":97,"column":29}},"33":{"start":{"line":101,"column":4},"end":{"line":101,"column":33}},"34":{"start":{"line":103,"column":4},"end":{"line":103,"column":27}},"35":{"start":{"line":105,"column":4},"end":{"line":105,"column":31}},"36":{"start":{"line":107,"column":4},"end":{"line":107,"column":42}},"37":{"start":{"line":109,"column":4},"end":{"line":109,"column":44}},"38":{"start":{"line":111,"column":4},"end":{"line":111,"column":50}},"39":{"start":{"line":113,"column":4},"end":{"line":113,"column":37}},"40":{"start":{"line":115,"column":4},"end":{"line":115,"column":50}},"41":{"start":{"line":117,"column":4},"end":{"line":117,"column":37}},"42":{"start":{"line":119,"column":4},"end":{"line":119,"column":42}},"43":{"start":{"line":121,"column":4},"end":{"line":121,"column":40}},"44":{"start":{"line":123,"column":4},"end":{"line":123,"column":38}},"45":{"start":{"line":125,"column":4},"end":{"line":125,"column":42}},"46":{"start":{"line":127,"column":4},"end":{"line":127,"column":46}},"47":{"start":{"line":129,"column":4},"end":{"line":129,"column":50}},"48":{"start":{"line":135,"column":0},"end":{"line":138,"column":54}},"49":{"start":{"line":136,"column":4},"end":{"line":136,"column":33}},"50":{"start":{"line":137,"column":4},"end":{"line":137,"column":31}},"51":{"start":{"line":143,"column":0},"end":{"line":147,"column":66}},"52":{"start":{"line":144,"column":4},"end":{"line":144,"column":37}},"53":{"start":{"line":145,"column":4},"end":{"line":145,"column":39}},"54":{"start":{"line":146,"column":4},"end":{"line":146,"column":41}},"55":{"start":{"line":157,"column":0},"end":{"line":163,"column":69}},"56":{"start":{"line":158,"column":4},"end":{"line":158,"column":54}},"57":{"start":{"line":159,"column":4},"end":{"line":159,"column":46}},"58":{"start":{"line":160,"column":4},"end":{"line":160,"column":44}},"59":{"start":{"line":161,"column":4},"end":{"line":161,"column":44}},"60":{"start":{"line":162,"column":4},"end":{"line":162,"column":70}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":1},"end":{"line":10,"column":2}},"loc":{"start":{"line":10,"column":22},"end":{"line":52,"column":1}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":58,"column":1},"end":{"line":58,"column":2}},"loc":{"start":{"line":58,"column":18},"end":{"line":130,"column":1}},"line":58},"2":{"name":"(anonymous_2)","decl":{"start":{"line":135,"column":1},"end":{"line":135,"column":2}},"loc":{"start":{"line":135,"column":22},"end":{"line":138,"column":1}},"line":135},"3":{"name":"(anonymous_3)","decl":{"start":{"line":143,"column":1},"end":{"line":143,"column":2}},"loc":{"start":{"line":143,"column":26},"end":{"line":147,"column":1}},"line":143},"4":{"name":"(anonymous_4)","decl":{"start":{"line":157,"column":1},"end":{"line":157,"column":2}},"loc":{"start":{"line":157,"column":27},"end":{"line":163,"column":1}},"line":157}},"branchMap":{"0":{"loc":{"start":{"line":52,"column":3},"end":{"line":52,"column":52}},"type":"binary-expr","locations":[{"start":{"line":52,"column":3},"end":{"line":52,"column":12}},{"start":{"line":52,"column":17},"end":{"line":52,"column":51}}],"line":52},"1":{"loc":{"start":{"line":130,"column":3},"end":{"line":130,"column":40}},"type":"binary-expr","locations":[{"start":{"line":130,"column":3},"end":{"line":130,"column":8}},{"start":{"line":130,"column":13},"end":{"line":130,"column":39}}],"line":130},"2":{"loc":{"start":{"line":138,"column":3},"end":{"line":138,"column":52}},"type":"binary-expr","locations":[{"start":{"line":138,"column":3},"end":{"line":138,"column":12}},{"start":{"line":138,"column":17},"end":{"line":138,"column":51}}],"line":138},"3":{"loc":{"start":{"line":147,"column":3},"end":{"line":147,"column":64}},"type":"binary-expr","locations":[{"start":{"line":147,"column":3},"end":{"line":147,"column":16}},{"start":{"line":147,"column":21},"end":{"line":147,"column":63}}],"line":147},"4":{"loc":{"start":{"line":163,"column":3},"end":{"line":163,"column":67}},"type":"binary-expr","locations":[{"start":{"line":163,"column":3},"end":{"line":163,"column":17}},{"start":{"line":163,"column":22},"end":{"line":163,"column":66}}],"line":163}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1},"b":{"0":[1,1],"1":[1,1],"2":[1,1],"3":[1,1],"4":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/types.ts","sources":["/Users/rg/dev/opensea-js/src/types.ts"],"names":[],"mappings":";;;AAGA;;;;GAIG;AACH,IAAY,SA0CX;AA1CD,WAAY,SAAS;IACnB;;;OAGG;IACH,sDAAyC,CAAA;IACzC;;OAEG;IACH,0DAA6C,CAAA;IAC7C;;OAEG;IACH,oDAAuC,CAAA;IACvC;;OAEG;IACH,oDAAuC,CAAA;IACvC;;OAEG;IACH,gCAAmB,CAAA;IACnB;;OAEG;IACH,sCAAyB,CAAA;IACzB;;OAEG;IACH,wCAA2B,CAAA;IAC3B;;OAEG;IACH,wCAA2B,CAAA;IAC3B;;OAEG;IACH,0CAA6B,CAAA;IAC7B;;OAEG;IACH,kCAAqB,CAAA;AACvB,CAAC,EA1CW,SAAS,yBAAT,SAAS,QA0CpB;AA6CD;;;GAGG;AACH,IAAY,KAwEX;AAxED,WAAY,KAAK;IACf,iBAAiB;IACjB,eAAe;IACf,6BAAoB,CAAA;IACpB,cAAc;IACd,0BAAiB,CAAA;IACjB,aAAa;IACb,0BAAiB,CAAA;IACjB,WAAW;IACX,sBAAa,CAAA;IACb,YAAY;IACZ,wBAAe,CAAA;IACf,eAAe;IACf,8BAAqB,CAAA;IACrB,oBAAoB;IACpB,uCAA8B,CAAA;IAC9B,gBAAgB;IAChB,gCAAuB,CAAA;IACvB,eAAe;IACf,8BAAqB,CAAA;IACrB,aAAa;IACb,0BAAiB,CAAA;IACjB,WAAW;IACX,sBAAa,CAAA;IACb,UAAU;IACV,oBAAW,CAAA;IACX,SAAS;IACT,kBAAS,CAAA;IACT,iBAAiB;IACjB,iCAAwB,CAAA;IACxB,eAAe;IACf,+BAAsB,CAAA;IACtB,WAAW;IACX,sBAAa,CAAA;IACb,YAAY;IACZ,wBAAe,CAAA;IACf,eAAe;IACf,8BAAqB,CAAA;IACrB,YAAY;IACZ,wBAAe,CAAA;IACf,iBAAiB;IACjB,gFAAgF;IAChF,cAAc;IACd,4BAAmB,CAAA;IACnB,mBAAmB;IACnB,sBAAa,CAAA;IACb,oBAAoB;IACpB,0BAAiB,CAAA;IACjB,mBAAmB;IACnB,qCAA4B,CAAA;IAC5B,oBAAoB;IACpB,uCAA8B,CAAA;IAC9B,uBAAuB;IACvB,6CAAoC,CAAA;IACpC,qBAAqB;IACrB,gCAAuB,CAAA;IACvB,uBAAuB;IACvB,6CAAoC,CAAA;IACpC,oBAAoB;IACpB,gCAAuB,CAAA;IACvB,mBAAmB;IACnB,qCAA4B,CAAA;IAC5B,kBAAkB;IAClB,mCAA0B,CAAA;IAC1B,iBAAiB;IACjB,iCAAwB,CAAA;IACxB,mBAAmB;IACnB,qCAA4B,CAAA;IAC5B,qBAAqB;IACrB,yCAAgC,CAAA;IAChC,uBAAuB;IACvB,6CAAoC,CAAA;AACtC,CAAC,EAxEW,KAAK,qBAAL,KAAK,QAwEhB;AAED;;GAEG;AACH,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,4BAAe,CAAA;IACf,0BAAa,CAAA;AACf,CAAC,EAHW,SAAS,yBAAT,SAAS,QAGpB;AAED;;GAEG;AACH,IAAY,aAIX;AAJD,WAAY,aAAa;IACvB,gCAAe,CAAA;IACf,kCAAiB,CAAA;IACjB,oCAAmB,CAAA;AACrB,CAAC,EAJW,aAAa,6BAAb,aAAa,QAIxB;AAED;;;;;;;GAOG;AACH,IAAY,cAMX;AAND,WAAY,cAAc;IACxB,iDAA+B,CAAA;IAC/B,yCAAuB,CAAA;IACvB,uCAAqB,CAAA;IACrB,uCAAqB,CAAA;IACrB,iEAA+C,CAAA;AACjD,CAAC,EANW,cAAc,8BAAd,cAAc,QAMzB","sourcesContent":["import { BigNumberish } from \"ethers\";\nimport type { OrderV2 } from \"./orders/types\";\n\n/**\n * Events emitted by the SDK which can be used by frontend applications\n * to update state or show useful messages to users.\n * @category Events\n */\nexport enum EventType {\n  /**\n   * Emitted when the transaction is sent to the network and the application\n   * is waiting for the transaction to be mined.\n   */\n  TransactionCreated = \"TransactionCreated\",\n  /**\n   * Emitted when the transaction has succeeded is mined and confirmed.\n   */\n  TransactionConfirmed = \"TransactionConfirmed\",\n  /**\n   * Emitted when the transaction has failed to be submitted.\n   */\n  TransactionDenied = \"TransactionDenied\",\n  /**\n   * Emitted when the transaction has failed to be mined.\n   */\n  TransactionFailed = \"TransactionFailed\",\n  /**\n   * Emitted when the {@link OpenSeaSDK.wrapEth} method is called.\n   */\n  WrapEth = \"WrapEth\",\n  /**\n   * Emitted when the {@link OpenSeaSDK.unwrapWeth} method is called.\n   */\n  UnwrapWeth = \"UnwrapWeth\",\n  /**\n   * Emitted when fulfilling a public or private order.\n   */\n  MatchOrders = \"MatchOrders\",\n  /**\n   * Emitted when the {@link OpenSeaSDK.cancelOrder} method is called.\n   */\n  CancelOrder = \"CancelOrder\",\n  /**\n   * Emitted when the {@link OpenSeaSDK.approveOrder} method is called.\n   */\n  ApproveOrder = \"ApproveOrder\",\n  /**\n   * Emitted when the {@link OpenSeaSDK.transfer} method is called.\n   */\n  Transfer = \"Transfer\",\n}\n\n/**\n * Data that gets sent with each {@link EventType}\n * @category Events\n */\nexport interface EventData {\n  /**\n   * Wallet address of the user who initiated the event.\n   */\n  accountAddress?: string;\n  /**\n   * Amount of ETH sent when wrapping or unwrapping.\n   */\n  amount?: BigNumberish;\n  /**\n   * The transaction hash of the event.\n   */\n  transactionHash?: string;\n  /**\n   * The {@link EventType} of the event.\n   */\n  event?: EventType;\n  /**\n   * Error which occurred when transaction was denied or failed.\n   */\n  error?: unknown;\n  /**\n   * The {@link OrderV2} object.\n   */\n  orderV2?: OrderV2;\n}\n\n/**\n * OpenSea API configuration object\n * @param chain `Chain` to use. Defaults to Ethereum Mainnet (`Chain.Mainnet`)\n * @param apiKey API key to use. Not required for testnets\n * @param apiBaseUrl Optional base URL to use for the API\n */\nexport interface OpenSeaAPIConfig {\n  chain?: Chain;\n  apiKey?: string;\n  apiBaseUrl?: string;\n}\n\n/**\n * Each of the possible chains that OpenSea supports.\n * ⚠️NOTE: When adding to this list, also add to the util functions `getChainId` and `getWETHAddress`\n */\nexport enum Chain {\n  // Mainnet Chains\n  /** Ethereum */\n  Mainnet = \"ethereum\",\n  /** Polygon */\n  Polygon = \"matic\",\n  /** Klaytn */\n  Klaytn = \"klaytn\",\n  /** Base */\n  Base = \"base\",\n  /** Blast */\n  Blast = \"blast\",\n  /** Arbitrum */\n  Arbitrum = \"arbitrum\",\n  /** Arbitrum Nova */\n  ArbitrumNova = \"arbitrum_nova\",\n  /** Avalanche */\n  Avalanche = \"avalanche\",\n  /** Optimism */\n  Optimism = \"optimism\",\n  /** Solana */\n  Solana = \"solana\",\n  /** Zora */\n  Zora = \"zora\",\n  /** Sei */\n  Sei = \"sei\",\n  /** B3 */\n  B3 = \"b3\",\n  /** Bera Chain */\n  BeraChain = \"bera_chain\",\n  /** ApeChain */\n  ApeChain = \"ape_chain\",\n  /** Flow */\n  Flow = \"flow\",\n  /** Ronin */\n  Ronin = \"ronin\",\n  /** Abstract */\n  Abstract = \"abstract\",\n  /** Shape */\n  Shape = \"shape\",\n  // Testnet Chains\n  // ⚠️NOTE: When adding to this list, also add to the util function `isTestChain`\n  /** Sepolia */\n  Sepolia = \"sepolia\",\n  /** Polygon Amoy */\n  Amoy = \"amoy\",\n  /** Klaytn Baobab */\n  Baobab = \"baobab\",\n  /** Base Testnet */\n  BaseSepolia = \"base_sepolia\",\n  /** Blast Testnet */\n  BlastSepolia = \"blast_sepolia\",\n  /** Arbitrum Sepolia */\n  ArbitrumSepolia = \"arbitrum_sepolia\",\n  /** Avalanche Fuji */\n  Fuji = \"avalanche_fuji\",\n  /** Optimism Sepolia */\n  OptimismSepolia = \"optimism_sepolia\",\n  /** Solana Devnet */\n  SolanaDevnet = \"soldev\",\n  /** Zora Sepolia */\n  ZoraSepolia = \"zora_sepolia\",\n  /** Sei Testnet */\n  SeiTestnet = \"sei_testnet\",\n  /** B3 Sepolia */\n  B3Sepolia = \"b3_sepolia\",\n  /** Flow Testnet */\n  FlowTestnet = \"flow_testnet\",\n  /** Saigon Testnet */\n  SaigonTestnet = \"saigon_testnet\",\n  /** Abstract Testnet */\n  AbstractTestnet = \"abstract_testnet\",\n}\n\n/**\n * Order side: listing (ask) or offer (bid)\n */\nexport enum OrderSide {\n  LISTING = \"ask\",\n  OFFER = \"bid\",\n}\n\n/**\n * Token standards\n */\nexport enum TokenStandard {\n  ERC20 = \"ERC20\",\n  ERC721 = \"ERC721\",\n  ERC1155 = \"ERC1155\",\n}\n\n/**\n * The collection's approval status within OpenSea.\n * Can be one of:\n * - not_requested: brand new collections\n * - requested: collections that requested safelisting on our site\n * - approved: collections that are approved on our site and can be found in search results\n * - verified: verified collections\n */\nexport enum SafelistStatus {\n  NOT_REQUESTED = \"not_requested\",\n  REQUESTED = \"requested\",\n  APPROVED = \"approved\",\n  VERIFIED = \"verified\",\n  DISABLED_TOP_TRENDING = \"disabled_top_trending\",\n}\n\n/**\n * Collection fees\n * @category API Models\n */\nexport interface Fee {\n  fee: number;\n  recipient: string;\n  required: boolean;\n}\n\n/**\n * Generic Blockchain Asset.\n * @category API Models\n */\nexport interface Asset {\n  /** The asset's token ID, or null if ERC-20 */\n  tokenId: string | null;\n  /** The asset's contract address */\n  tokenAddress: string;\n  /** The token standard (e.g. \"ERC721\") for this asset */\n  tokenStandard?: TokenStandard;\n  /** Optional for ENS names */\n  name?: string;\n  /** Optional for fungible items */\n  decimals?: number;\n}\n\n/**\n * Generic Blockchain Asset, with tokenId required.\n * @category API Models\n */\nexport interface AssetWithTokenId extends Asset {\n  /** The asset's token ID */\n  tokenId: string;\n}\n\n/**\n * Generic Blockchain Asset, with tokenStandard required.\n * @category API Models\n */\nexport interface AssetWithTokenStandard extends Asset {\n  /** The token standard (e.g. \"ERC721\") for this asset */\n  tokenStandard: TokenStandard;\n}\n\ninterface OpenSeaCollectionStatsIntervalData {\n  interval: \"one_day\" | \"seven_day\" | \"thirty_day\";\n  volume: number;\n  volume_diff: number;\n  volume_change: number;\n  sales: number;\n  sales_diff: number;\n  average_price: number;\n}\n\n/**\n * OpenSea Collection Stats\n * @category API Models\n */\nexport interface OpenSeaCollectionStats {\n  total: {\n    volume: number;\n    sales: number;\n    average_price: number;\n    num_owners: number;\n    market_cap: number;\n    floor_price: number;\n    floor_price_symbol: string;\n  };\n  intervals: OpenSeaCollectionStatsIntervalData[];\n}\n\nexport interface RarityStrategy {\n  strategyId: string;\n  strategyVersion: string;\n  calculatedAt: string;\n  maxRank: number;\n  tokensScored: number;\n}\n\n/**\n * OpenSea collection metadata.\n * @category API Models\n */\nexport interface OpenSeaCollection {\n  /** Name of the collection */\n  name: string;\n  /** The identifier (slug) of the collection */\n  collection: string;\n  /** Description of the collection */\n  description: string;\n  /** Image for the collection */\n  imageUrl: string;\n  /** Banner image for the collection */\n  bannerImageUrl: string;\n  /** Owner address of the collection */\n  owner: string;\n  /** The collection's safelist status */\n  safelistStatus: SafelistStatus;\n  /** The category of the collection */\n  category: string;\n  /** If the collection is disabled */\n  isDisabled: boolean;\n  /** If the collection is NSFW (not safe for work) */\n  isNSFW: boolean;\n  /** If trait offers are enabled */\n  traitOffersEnabled: boolean;\n  /** If collection offers are enabled */\n  collectionOffersEnabled: boolean;\n  /** The OpenSea url for the collection */\n  openseaUrl: string;\n  /** The project url for the collection */\n  projectUrl: string;\n  /** The wiki url for the collection */\n  wikiUrl: string;\n  /** The discord url for the collection */\n  discordUrl: string;\n  /** The telegram url for the collection */\n  telegramUrl: string;\n  /** The twitter username for the collection */\n  twitterUsername: string;\n  /** The instagram username for the collection */\n  instagramUsername: string;\n  /** The contracts for the collection */\n  contracts: { address: string; chain: Chain }[];\n  /** Accounts allowed to edit this collection */\n  editors: string[];\n  /** The fees for the collection */\n  fees: Fee[];\n  /** The rarity strategy for the collection */\n  rarity: RarityStrategy | null;\n  /** Payment tokens allowed for orders for this collection */\n  paymentTokens: OpenSeaPaymentToken[];\n  /** The total supply of the collection (minted minus burned) */\n  totalSupply: number;\n  /** The created date of the collection */\n  createdDate: string;\n  /** When defined, the zone required for orders for the collection */\n  requiredZone?: string;\n}\n\n/**\n * Full annotated Fungible Token spec with OpenSea metadata\n */\nexport interface OpenSeaPaymentToken {\n  name: string;\n  symbol: string;\n  decimals: number;\n  address: string;\n  chain: Chain;\n  imageUrl?: string;\n  ethPrice?: string;\n  usdPrice?: string;\n}\n\n/**\n * Query interface for payment tokens\n * @category API Models\n */\nexport interface OpenSeaPaymentTokensQuery {\n  symbol?: string;\n  address?: string;\n  limit?: number;\n  next?: string;\n}\n\n/**\n * OpenSea Account\n * @category API Models\n */\nexport interface OpenSeaAccount {\n  address: string;\n  username: string;\n  profileImageUrl: string;\n  bannerImageUrl: string;\n  website: string;\n  socialMediaAccounts: SocialMediaAccount[];\n  bio: string;\n  joinedDate: string;\n}\n/**\n * Social media account\n * @category API Models\n */\nexport interface SocialMediaAccount {\n  platform: string;\n  username: string;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"df89d14fb57ab1059fb58b87070fb7c20c5c6ff1","contentHash":"5ee962771dc63a338873b16c8f1c6a57a8d6f233ce5f753a7ede255031a1715f"},"/Users/rg/dev/opensea-js/src/api/types.ts":{"path":"/Users/rg/dev/opensea-js/src/api/types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":68}},"2":{"start":{"line":5,"column":0},"end":{"line":12,"column":96}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":61}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":65}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":69}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":69}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":57}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":57}},"9":{"start":{"line":18,"column":0},"end":{"line":26,"column":75}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":62}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":54}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":42}},"14":{"start":{"line":23,"column":4},"end":{"line":23,"column":38}},"15":{"start":{"line":25,"column":4},"end":{"line":25,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":36},"end":{"line":12,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":1},"end":{"line":18,"column":2}},"loc":{"start":{"line":18,"column":29},"end":{"line":26,"column":1}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":3},"end":{"line":12,"column":94}},"type":"binary-expr","locations":[{"start":{"line":12,"column":3},"end":{"line":12,"column":26}},{"start":{"line":12,"column":31},"end":{"line":12,"column":93}}],"line":12},"1":{"loc":{"start":{"line":26,"column":3},"end":{"line":26,"column":73}},"type":"binary-expr","locations":[{"start":{"line":26,"column":3},"end":{"line":26,"column":19}},{"start":{"line":26,"column":24},"end":{"line":26,"column":72}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"f":{"0":1,"1":1},"b":{"0":[1,1],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/api/types.ts","sources":["/Users/rg/dev/opensea-js/src/api/types.ts"],"names":[],"mappings":";;;AAuFA,IAAY,uBAOX;AAPD,WAAY,uBAAuB;IACjC,wDAA6B,CAAA;IAC7B,4DAAiC,CAAA;IACjC,gEAAqC,CAAA;IACrC,gEAAqC,CAAA;IACrC,oDAAyB,CAAA;IACzB,oDAAyB,CAAA;AAC3B,CAAC,EAPW,uBAAuB,uCAAvB,uBAAuB,QAOlC;AA2MD;;;GAGG;AACH,IAAY,gBAQX;AARD,WAAY,gBAAgB;IAC1B,qCAAiB,CAAA;IACjB,yDAAqC,CAAA;IACrC,iDAA6B,CAAA;IAC7B,qCAAiB,CAAA;IACjB,iCAAa,CAAA;IACb,uCAAuC;IACvC,iCAAa,CAAA;AACf,CAAC,EARW,gBAAgB,gCAAhB,gBAAgB,QAQ3B","sourcesContent":["import { ConsiderationItem } from \"@opensea/seaport-js/lib/types\";\nimport {\n  OrderType,\n  OrderV2,\n  ProtocolData,\n  QueryCursors,\n} from \"../orders/types\";\nimport { OpenSeaCollection } from \"../types\";\n\n/**\n * Response from OpenSea API for building an offer.\n * @category API Response Types\n */\nexport type BuildOfferResponse = {\n  /** A portion of the parameters needed to submit a criteria offer, i.e. collection offer. */\n  partialParameters: PartialParameters;\n};\n\ntype PartialParameters = {\n  consideration: ConsiderationItem[];\n  zone: string;\n  zoneHash: string;\n};\n\n/**\n * Criteria for collection or trait offers.\n * @category API Response Types\n */\ntype Criteria = {\n  /** The collection for the criteria */\n  collection: CollectionCriteria;\n  /** The contract for the criteria */\n  contract: ContractCriteria;\n  /** Represents a list of token ids which can be used to fulfill the criteria offer. */\n  encoded_token_ids?: string;\n  /** The trait for the criteria */\n  trait?: TraitCriteria;\n};\n\n/**\n * Criteria for trait offers.\n * @category API Response Types\n */\ntype TraitCriteria = {\n  type: string;\n  value: string;\n};\n\ntype CollectionCriteria = {\n  slug: string;\n};\n\ntype ContractCriteria = {\n  address: string;\n};\n\n/**\n * Query args for Get Collections\n * @category API Query Args\n */\nexport interface GetCollectionsArgs {\n  order_by?: string;\n  limit?: number;\n  next?: string;\n  chain?: string;\n  creator_username?: string;\n  include_hidden?: boolean;\n}\n\n/**\n * Response from OpenSea API for fetching a single collection.\n * @category API Response Types\n */\nexport type GetCollectionResponse = {\n  /** Collection object. See {@link OpenSeaCollection} */\n  collection: OpenSeaCollection;\n};\n\n/**\n * Response from OpenSea API for fetching a list of collections.\n * @category API Response Types\n */\nexport type GetCollectionsResponse = QueryCursorsV2 & {\n  /** List of collections. See {@link OpenSeaCollection} */\n  collections: OpenSeaCollection[];\n};\n\nexport enum CollectionOrderByOption {\n  CREATED_DATE = \"created_date\",\n  ONE_DAY_CHANGE = \"one_day_change\",\n  SEVEN_DAY_VOLUME = \"seven_day_volume\",\n  SEVEN_DAY_CHANGE = \"seven_day_change\",\n  NUM_OWNERS = \"num_owners\",\n  MARKET_CAP = \"market_cap\",\n}\n\n/**\n * Base Order type shared between Listings and Offers.\n * @category API Models\n */\nexport type Order = {\n  /** Offer Identifier */\n  order_hash: string;\n  /** Chain the offer exists on */\n  chain: string;\n  /** The protocol data for the order. Only 'seaport' is currently supported. */\n  protocol_data: ProtocolData;\n  /** The contract address of the protocol. */\n  protocol_address: string;\n  /** The price of the order. */\n  price: Price;\n};\n\n/**\n * Offer type.\n * @category API Models\n */\nexport type Offer = Order & {\n  /** The criteria for the offer if it is a collection or trait offer. */\n  criteria?: Criteria;\n};\n\n/**\n * Collection Offer type.\n * @category API Models\n */\nexport type CollectionOffer = Required<Pick<Offer, \"criteria\">> & Offer;\n\n/**\n * Price response.\n * @category API Models\n */\nexport type Price = {\n  currency: string;\n  decimals: number;\n  value: string;\n};\n\n/**\n * Listing order type.\n * @category API Models\n */\nexport type Listing = Order & {\n  /** The order type of the listing. */\n  type: OrderType;\n};\n\n/**\n * Response from OpenSea API for fetching a list of collection offers.\n * @category API Response Types\n */\nexport type ListCollectionOffersResponse = {\n  /** List of {@link Offer} */\n  offers: CollectionOffer[];\n};\n\n/**\n * Response from OpenSea API for fetching a list of NFTs.\n * @category API Response Types\n */\nexport type ListNFTsResponse = {\n  /** List of {@link NFT} */\n  nfts: NFT[];\n  /** Cursor for next page of results. */\n  next: string;\n};\n\n/**\n * Response from OpenSea API for fetching a single NFT.\n * @category API Response Types\n */\nexport type GetNFTResponse = {\n  /** See {@link NFT} */\n  nft: NFT;\n};\n\n/**\n * Response from OpenSea API for fetching Orders.\n * @category API Response Types\n */\nexport type GetOrdersResponse = QueryCursors & {\n  /** List of {@link OrderV2} */\n  orders: OrderV2[];\n};\n\n/**\n * Base query cursors response from OpenSea API.\n * @category API Response Types\n */\nexport type QueryCursorsV2 = {\n  next?: string;\n};\n\n/**\n * Response from OpenSea API for fetching offers.\n * @category API Response Types\n */\nexport type GetOffersResponse = QueryCursorsV2 & {\n  offers: Offer[];\n};\n\n/**\n * Response from OpenSea API for fetching listings.\n * @category API Response Types\n */\nexport type GetListingsResponse = QueryCursorsV2 & {\n  listings: Listing[];\n};\n\n/**\n * Response from OpenSea API for fetching a best offer.\n * @category API Response Types\n */\nexport type GetBestOfferResponse = Offer | CollectionOffer;\n\n/**\n * Response from OpenSea API for fetching a best listing.\n * @category API Response Types\n */\nexport type GetBestListingResponse = Listing;\n\n/**\n * Response from OpenSea API for offchain canceling an order.\n * @category API Response Types\n */\nexport type CancelOrderResponse = {\n  last_signature_issued_valid_until: string | null;\n};\n\n/**\n * NFT type returned by OpenSea API.\n * @category API Models\n */\nexport type NFT = {\n  /** NFT Identifier (also commonly referred to as tokenId) */\n  identifier: string;\n  /** Slug identifier of collection */\n  collection: string;\n  /** Address of contract */\n  contract: string;\n  /** Token standard, i.e. ERC721, ERC1155, etc. */\n  token_standard: string;\n  /** Name of NFT */\n  name: string;\n  /** Description of NFT */\n  description: string;\n  /** URL of image */\n  image_url: string;\n  /** URL of metadata */\n  metadata_url: string;\n  /** URL on OpenSea */\n  opensea_url: string;\n  /** Date of latest NFT update */\n  updated_at: string;\n  /** Whether NFT is disabled for trading on OpenSea */\n  is_disabled: boolean;\n  /** Whether NFT is NSFW (Not Safe For Work) */\n  is_nsfw: boolean;\n  /** Traits for the NFT, returns null if the NFT has than 50 traits */\n  traits: Trait[] | null;\n  /** Creator of the NFT */\n  creator: string;\n  /** Owners of the NFT */\n  owners: {\n    address: string;\n    quantity: number;\n  }[];\n  /** Rarity of the NFT */\n  rarity: null | {\n    strategy_id: string | null;\n    strategy_version: string | null;\n    rank: number | null;\n    score: number | null;\n    calculated_at: string;\n    max_rank: number | null;\n    tokens_scored: number | null;\n    ranking_features: null | {\n      unique_attribute_count: number;\n    };\n  };\n};\n\n/**\n * Trait type returned by OpenSea API.\n * @category API Models\n */\nexport type Trait = {\n  /** The name of the trait category (e.g. 'Background') */\n  trait_type: string;\n  /** A field indicating how to display. None is used for string traits. */\n  display_type: TraitDisplayType;\n  /** Ceiling for possible numeric trait values */\n  max_value: string;\n  /** The value of the trait (e.g. 'Red') */\n  value: string | number | Date;\n};\n\n/**\n * Trait display type returned by OpenSea API.\n * @category API Models\n */\nexport enum TraitDisplayType {\n  NUMBER = \"number\",\n  BOOST_PERCENTAGE = \"boost_percentage\",\n  BOOST_NUMBER = \"boost_number\",\n  AUTHOR = \"author\",\n  DATE = \"date\",\n  /** \"None\" is used for string traits */\n  NONE = \"None\",\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1319531dfd46152125cbc65e74eae375a763dda9","contentHash":"706deb81810e357883b68e0168d983a4ce675d48d68c2290af8cdfbf2ebbdaa1"},"/Users/rg/dev/opensea-js/src/constants.ts":{"path":"/Users/rg/dev/opensea-js/src/constants.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":356}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":63}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":61}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":67}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":85}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":85}},"11":{"start":{"line":14,"column":42},"end":{"line":14,"column":86}},"12":{"start":{"line":15,"column":42},"end":{"line":15,"column":86}},"13":{"start":{"line":16,"column":41},"end":{"line":16,"column":85}},"14":{"start":{"line":17,"column":0},"end":{"line":21,"column":42}},"15":{"start":{"line":21,"column":19},"end":{"line":21,"column":40}},"16":{"start":{"line":22,"column":0},"end":{"line":22,"column":111}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":6},"end":{"line":21,"column":7}},"loc":{"start":{"line":21,"column":19},"end":{"line":21,"column":40}},"line":21}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":3,"16":1},"f":{"0":3},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/constants.ts","sources":["/Users/rg/dev/opensea-js/src/constants.ts"],"names":[],"mappings":";;;AAAA,mCAAqC;AAExB,QAAA,gBAAgB,GAAG,oBAAW,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAC9C,QAAA,mBAAmB,GAAG,MAAO,CAAC,CAAC,0BAA0B;AACzD,QAAA,qBAAqB,GAAG,CAAC,CAAC;AAE1B,QAAA,gBAAgB,GAAG,wBAAwB,CAAC;AAC5C,QAAA,gBAAgB,GAAG,iCAAiC,CAAC;AAElE,oDAAoD;AACvC,QAAA,WAAW,GAAG,4CAA4C,CAAC;AAE3D,QAAA,6BAA6B,GACxC,4CAA4C,CAAC;AAClC,QAAA,6BAA6B,GACxC,4CAA4C,CAAC;AAE/C,MAAM,iCAAiC,GACrC,4CAA4C,CAAC;AAC/C,MAAM,iCAAiC,GACrC,4CAA4C,CAAC;AAC/C,MAAM,gCAAgC,GACpC,4CAA4C,CAAC;AAClC,QAAA,2BAA2B,GAAG;IACzC,iCAAiC;IACjC,iCAAiC;IACjC,gCAAgC;CACjC,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;AAC7B,QAAA,uDAAuD,GAClE,4CAA4C,CAAC","sourcesContent":["import { FixedNumber } from \"ethers\";\n\nexport const FIXED_NUMBER_100 = FixedNumber.fromValue(100);\nexport const INVERSE_BASIS_POINT = 10_000n; // 100 basis points per 1%\nexport const MAX_EXPIRATION_MONTHS = 1;\n\nexport const API_BASE_MAINNET = \"https://api.opensea.io\";\nexport const API_BASE_TESTNET = \"https://testnets-api.opensea.io\";\n\n// eslint-disable-next-line import/no-unused-modules\nexport const SIGNED_ZONE = \"0x000056f7000000ece9003ca63978907a00ffd100\";\n\nexport const ENGLISH_AUCTION_ZONE_MAINNETS =\n  \"0x110b2b128a9ed1be5ef3232d8e4e41640df5c2cd\";\nexport const ENGLISH_AUCTION_ZONE_TESTNETS =\n  \"0x9B814233894Cd227f561B78Cc65891AA55C62Ad2\";\n\nconst SHARED_STOREFRONT_ADDRESS_MAINNET =\n  \"0x495f947276749ce646f68ac8c248420045cb7b5e\";\nconst SHARED_STOREFRONT_ADDRESS_POLYGON =\n  \"0x2953399124f0cbb46d2cbacd8a89cf0599974963\";\nconst SHARED_STOREFRONT_ADDRESS_KLAYTN =\n  \"0x5bc519d852f7ca2c8cf2d095299d5bb2d13f02c9\";\nexport const SHARED_STOREFRONT_ADDRESSES = [\n  SHARED_STOREFRONT_ADDRESS_MAINNET,\n  SHARED_STOREFRONT_ADDRESS_POLYGON,\n  SHARED_STOREFRONT_ADDRESS_KLAYTN,\n].map((address) => address.toLowerCase());\nexport const SHARED_STOREFRONT_LAZY_MINT_ADAPTER_CROSS_CHAIN_ADDRESS =\n  \"0xa604060890923ff400e8c6f5290461a83aedacec\";\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b8edd15ef8d0077faaa8fc85bb44038ebd09cfa9","contentHash":"fa99b1f80021b2dc975670dc4ebd1ca996bec688a1a9ccb4ab8e52b2db8a647a"},"/Users/rg/dev/opensea-js/src/orders/utils.ts":{"path":"/Users/rg/dev/opensea-js/src/orders/utils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":297}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":88}},"6":{"start":{"line":8,"column":38},"end":{"line":24,"column":1}},"7":{"start":{"line":9,"column":20},"end":{"line":15,"column":5}},"8":{"start":{"line":16,"column":4},"end":{"line":22,"column":5}},"9":{"start":{"line":18,"column":8},"end":{"line":21,"column":10}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":19}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":70}},"12":{"start":{"line":26,"column":39},"end":{"line":46,"column":1}},"13":{"start":{"line":27,"column":20},"end":{"line":37,"column":5}},"14":{"start":{"line":38,"column":4},"end":{"line":44,"column":5}},"15":{"start":{"line":40,"column":8},"end":{"line":43,"column":10}},"16":{"start":{"line":45,"column":4},"end":{"line":45,"column":19}},"17":{"start":{"line":47,"column":0},"end":{"line":47,"column":72}},"18":{"start":{"line":48,"column":31},"end":{"line":51,"column":1}},"19":{"start":{"line":49,"column":21},"end":{"line":49,"column":79}},"20":{"start":{"line":50,"column":4},"end":{"line":50,"column":46}},"21":{"start":{"line":52,"column":0},"end":{"line":52,"column":56}},"22":{"start":{"line":53,"column":33},"end":{"line":64,"column":1}},"23":{"start":{"line":54,"column":4},"end":{"line":63,"column":6}},"24":{"start":{"line":65,"column":0},"end":{"line":65,"column":60}},"25":{"start":{"line":66,"column":31},"end":{"line":77,"column":1}},"26":{"start":{"line":67,"column":4},"end":{"line":76,"column":6}},"27":{"start":{"line":78,"column":0},"end":{"line":78,"column":56}},"28":{"start":{"line":79,"column":36},"end":{"line":95,"column":1}},"29":{"start":{"line":80,"column":4},"end":{"line":94,"column":6}},"30":{"start":{"line":96,"column":0},"end":{"line":96,"column":66}},"31":{"start":{"line":97,"column":25},"end":{"line":125,"column":1}},"32":{"start":{"line":98,"column":4},"end":{"line":124,"column":6}},"33":{"start":{"line":109,"column":72},"end":{"line":112,"column":9}},"34":{"start":{"line":113,"column":72},"end":{"line":116,"column":9}},"35":{"start":{"line":126,"column":0},"end":{"line":126,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":38},"end":{"line":8,"column":39}},"loc":{"start":{"line":8,"column":96},"end":{"line":24,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":39},"end":{"line":26,"column":40}},"loc":{"start":{"line":26,"column":132},"end":{"line":46,"column":1}},"line":26},"2":{"name":"(anonymous_2)","decl":{"start":{"line":48,"column":31},"end":{"line":48,"column":32}},"loc":{"start":{"line":48,"column":41},"end":{"line":51,"column":1}},"line":48},"3":{"name":"(anonymous_3)","decl":{"start":{"line":53,"column":33},"end":{"line":53,"column":34}},"loc":{"start":{"line":53,"column":91},"end":{"line":64,"column":1}},"line":53},"4":{"name":"(anonymous_4)","decl":{"start":{"line":66,"column":31},"end":{"line":66,"column":32}},"loc":{"start":{"line":66,"column":89},"end":{"line":77,"column":1}},"line":66},"5":{"name":"(anonymous_5)","decl":{"start":{"line":79,"column":36},"end":{"line":79,"column":37}},"loc":{"start":{"line":79,"column":49},"end":{"line":95,"column":1}},"line":79},"6":{"name":"(anonymous_6)","decl":{"start":{"line":97,"column":25},"end":{"line":97,"column":26}},"loc":{"start":{"line":97,"column":36},"end":{"line":125,"column":1}},"line":97},"7":{"name":"(anonymous_7)","decl":{"start":{"line":109,"column":40},"end":{"line":109,"column":41}},"loc":{"start":{"line":109,"column":72},"end":{"line":112,"column":9}},"line":109},"8":{"name":"(anonymous_8)","decl":{"start":{"line":113,"column":40},"end":{"line":113,"column":41}},"loc":{"start":{"line":113,"column":72},"end":{"line":116,"column":9}},"line":113}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":4},"end":{"line":22,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":22,"column":5}},{"start":{},"end":{}}],"line":16},"1":{"loc":{"start":{"line":16,"column":8},"end":{"line":16,"column":31}},"type":"binary-expr","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":17}},{"start":{"line":16,"column":21},"end":{"line":16,"column":31}}],"line":16},"2":{"loc":{"start":{"line":38,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":44,"column":5}},{"start":{},"end":{}}],"line":38},"3":{"loc":{"start":{"line":38,"column":8},"end":{"line":38,"column":31}},"type":"binary-expr","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":17}},{"start":{"line":38,"column":21},"end":{"line":38,"column":31}}],"line":38},"4":{"loc":{"start":{"line":49,"column":21},"end":{"line":49,"column":79}},"type":"cond-expr","locations":[{"start":{"line":49,"column":58},"end":{"line":49,"column":68}},{"start":{"line":49,"column":71},"end":{"line":49,"column":79}}],"line":49},"5":{"loc":{"start":{"line":89,"column":19},"end":{"line":89,"column":56}},"type":"binary-expr","locations":[{"start":{"line":89,"column":19},"end":{"line":89,"column":35}},{"start":{"line":89,"column":39},"end":{"line":89,"column":56}}],"line":89},"6":{"loc":{"start":{"line":105,"column":15},"end":{"line":105,"column":77}},"type":"cond-expr","locations":[{"start":{"line":105,"column":29},"end":{"line":105,"column":70}},{"start":{"line":105,"column":73},"end":{"line":105,"column":77}}],"line":105}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":1,"22":1,"23":0,"24":1,"25":1,"26":0,"27":1,"28":1,"29":0,"30":1,"31":1,"32":3,"33":0,"34":0,"35":1},"f":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":3,"7":0,"8":0},"b":{"0":[1,0],"1":[1,1],"2":[1,0],"3":[1,1],"4":[0,0],"5":[0,0],"6":[0,3]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/orders/utils.ts","sources":["/Users/rg/dev/opensea-js/src/orders/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { CROSS_CHAIN_SEAPORT_V1_6_ADDRESS } from \"@opensea/seaport-js/lib/constants\";\nimport {\n  OrdersQueryOptions,\n  OrderV2,\n  SerializedOrderV2,\n  ProtocolData,\n} from \"./types\";\nimport { Chain, OrderSide } from \"../types\";\nimport { accountFromJSON } from \"../utils\";\n\nexport const DEFAULT_SEAPORT_CONTRACT_ADDRESS =\n  CROSS_CHAIN_SEAPORT_V1_6_ADDRESS;\n\nexport const getPostCollectionOfferPayload = (\n  collectionSlug: string,\n  protocol_data: ProtocolData,\n  traitType?: string,\n  traitValue?: string,\n) => {\n  const payload = {\n    criteria: {\n      collection: { slug: collectionSlug },\n    },\n    protocol_data,\n    protocol_address: DEFAULT_SEAPORT_CONTRACT_ADDRESS,\n  };\n  if (traitType && traitValue) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (payload.criteria as any).trait = {\n      type: traitType,\n      value: traitValue,\n    };\n  }\n  return payload;\n};\n\nexport const getBuildCollectionOfferPayload = (\n  offererAddress: string,\n  quantity: number,\n  collectionSlug: string,\n  offerProtectionEnabled: boolean,\n  traitType?: string,\n  traitValue?: string,\n) => {\n  const payload = {\n    offerer: offererAddress,\n    quantity,\n    criteria: {\n      collection: {\n        slug: collectionSlug,\n      },\n    },\n    protocol_address: DEFAULT_SEAPORT_CONTRACT_ADDRESS,\n    offer_protection_enabled: offerProtectionEnabled,\n  };\n  if (traitType && traitValue) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (payload.criteria as any).trait = {\n      type: traitType,\n      value: traitValue,\n    };\n  }\n  return payload;\n};\n\nexport const getFulfillmentDataPath = (side: OrderSide) => {\n  const sidePath = side === OrderSide.LISTING ? \"listings\" : \"offers\";\n  return `/v2/${sidePath}/fulfillment_data`;\n};\n\nexport const getFulfillListingPayload = (\n  fulfillerAddress: string,\n  order_hash: string,\n  protocolAddress: string,\n  chain: Chain,\n) => {\n  return {\n    listing: {\n      hash: order_hash,\n      chain,\n      protocol_address: protocolAddress,\n    },\n    fulfiller: {\n      address: fulfillerAddress,\n    },\n  };\n};\n\nexport const getFulfillOfferPayload = (\n  fulfillerAddress: string,\n  order_hash: string,\n  protocolAddress: string,\n  chain: Chain,\n) => {\n  return {\n    offer: {\n      hash: order_hash,\n      chain,\n      protocol_address: protocolAddress,\n    },\n    fulfiller: {\n      address: fulfillerAddress,\n    },\n  };\n};\n\ntype OrdersQueryPathOptions = \"protocol\" | \"side\";\nexport const serializeOrdersQueryOptions = (\n  options: Omit<OrdersQueryOptions, OrdersQueryPathOptions>,\n) => {\n  return {\n    limit: options.limit,\n    cursor: options.cursor,\n\n    payment_token_address: options.paymentTokenAddress,\n    maker: options.maker,\n    taker: options.taker,\n    owner: options.owner,\n    listed_after: options.listedAfter,\n    listed_before: options.listedBefore,\n    token_ids: options.tokenIds ?? [options.tokenId],\n    asset_contract_address: options.assetContractAddress,\n    order_by: options.orderBy,\n    order_direction: options.orderDirection,\n    only_english: options.onlyEnglish,\n  };\n};\n\nexport const deserializeOrder = (order: SerializedOrderV2): OrderV2 => {\n  return {\n    createdDate: order.created_date,\n    closingDate: order.closing_date,\n    listingTime: order.listing_time,\n    expirationTime: order.expiration_time,\n    orderHash: order.order_hash,\n    maker: accountFromJSON(order.maker),\n    taker: order.taker ? accountFromJSON(order.taker) : null,\n    protocolData: order.protocol_data,\n    protocolAddress: order.protocol_address,\n    currentPrice: BigInt(order.current_price),\n    makerFees: order.maker_fees.map(({ account, basis_points }) => ({\n      account: accountFromJSON(account),\n      basisPoints: basis_points,\n    })),\n    takerFees: order.taker_fees.map(({ account, basis_points }) => ({\n      account: accountFromJSON(account),\n      basisPoints: basis_points,\n    })),\n    side: order.side,\n    orderType: order.order_type,\n    cancelled: order.cancelled,\n    finalized: order.finalized,\n    markedInvalid: order.marked_invalid,\n    clientSignature: order.client_signature,\n    remainingQuantity: order.remaining_quantity,\n  };\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b195630d5aa93e722f4e73353512aba23c6211da","contentHash":"e6602a55754911b23fab344e49cb59232d08b6279ccbbcf45b0028b18bede6ea"},"/Users/rg/dev/opensea-js/src/utils/index.ts":{"path":"/Users/rg/dev/opensea-js/src/utils/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{},"end":{}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{},"end":{}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{},"end":{}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{},"end":{}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":18,"2":18,"3":18,"4":18,"5":18,"6":4,"7":18,"8":0,"9":0,"10":0,"11":1,"12":1,"13":18,"14":18,"15":1,"16":1},"f":{"0":18,"1":4,"2":0,"3":1},"b":{"0":[1,1,1],"1":[1,0],"2":[18,0],"3":[18,0],"4":[18,18],"5":[0,18],"6":[18,0],"7":[0,0],"8":[1,1,1],"9":[18,0],"10":[18,18]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/utils/index.ts","sources":["/Users/rg/dev/opensea-js/src/utils/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,0CAAwB","sourcesContent":["export * from \"./utils\";\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a9e6a1e47c7bee41b849fd4bb0cec276412fe1dd","contentHash":"01bbc9b5105f12223df82b531a6dd19071a3de2b15b4e65b809bb91dc6a97c9b"},"/Users/rg/dev/opensea-js/src/utils/utils.ts":{"path":"/Users/rg/dev/opensea-js/src/utils/utils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":547}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":43}},"5":{"start":{"line":7,"column":16},"end":{"line":7,"column":35}},"6":{"start":{"line":9,"column":27},"end":{"line":42,"column":1}},"7":{"start":{"line":10,"column":4},"end":{"line":41,"column":6}},"8":{"start":{"line":30,"column":67},"end":{"line":33,"column":9}},"9":{"start":{"line":43,"column":0},"end":{"line":43,"column":48}},"10":{"start":{"line":44,"column":23},"end":{"line":56,"column":1}},"11":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"12":{"start":{"line":46,"column":8},"end":{"line":46,"column":20}},"13":{"start":{"line":48,"column":21},"end":{"line":54,"column":5}},"14":{"start":{"line":55,"column":4},"end":{"line":55,"column":20}},"15":{"start":{"line":57,"column":0},"end":{"line":57,"column":40}},"16":{"start":{"line":58,"column":29},"end":{"line":70,"column":1}},"17":{"start":{"line":59,"column":21},"end":{"line":68,"column":5}},"18":{"start":{"line":69,"column":4},"end":{"line":69,"column":20}},"19":{"start":{"line":71,"column":0},"end":{"line":71,"column":52}},"20":{"start":{"line":72,"column":24},"end":{"line":86,"column":1}},"21":{"start":{"line":73,"column":4},"end":{"line":85,"column":6}},"22":{"start":{"line":79,"column":82},"end":{"line":82,"column":9}},"23":{"start":{"line":87,"column":0},"end":{"line":87,"column":42}},"24":{"start":{"line":88,"column":20},"end":{"line":95,"column":1}},"25":{"start":{"line":89,"column":21},"end":{"line":93,"column":5}},"26":{"start":{"line":94,"column":4},"end":{"line":94,"column":20}},"27":{"start":{"line":96,"column":0},"end":{"line":96,"column":34}},"28":{"start":{"line":106,"column":4},"end":{"line":111,"column":7}},"29":{"start":{"line":113,"column":0},"end":{"line":113,"column":34}},"30":{"start":{"line":118,"column":39},"end":{"line":123,"column":1}},"31":{"start":{"line":119,"column":30},"end":{"line":119,"column":40}},"32":{"start":{"line":120,"column":4},"end":{"line":120,"column":97}},"33":{"start":{"line":121,"column":4},"end":{"line":121,"column":63}},"34":{"start":{"line":122,"column":4},"end":{"line":122,"column":58}},"35":{"start":{"line":124,"column":0},"end":{"line":124,"column":72}},"36":{"start":{"line":125,"column":21},"end":{"line":128,"column":1}},"37":{"start":{"line":126,"column":25},"end":{"line":126,"column":30}},"38":{"start":{"line":127,"column":4},"end":{"line":127,"column":31}},"39":{"start":{"line":129,"column":0},"end":{"line":129,"column":36}},"40":{"start":{"line":130,"column":25},"end":{"line":141,"column":1}},"41":{"start":{"line":131,"column":4},"end":{"line":140,"column":5}},"42":{"start":{"line":133,"column":12},"end":{"line":133,"column":46}},"43":{"start":{"line":135,"column":12},"end":{"line":135,"column":47}},"44":{"start":{"line":137,"column":12},"end":{"line":137,"column":48}},"45":{"start":{"line":139,"column":12},"end":{"line":139,"column":69}},"46":{"start":{"line":142,"column":0},"end":{"line":142,"column":44}},"47":{"start":{"line":143,"column":19},"end":{"line":212,"column":1}},"48":{"start":{"line":144,"column":4},"end":{"line":211,"column":5}},"49":{"start":{"line":146,"column":12},"end":{"line":146,"column":23}},"50":{"start":{"line":148,"column":12},"end":{"line":148,"column":25}},"51":{"start":{"line":150,"column":12},"end":{"line":150,"column":27}},"52":{"start":{"line":152,"column":12},"end":{"line":152,"column":30}},"53":{"start":{"line":154,"column":12},"end":{"line":154,"column":26}},"54":{"start":{"line":156,"column":12},"end":{"line":156,"column":26}},"55":{"start":{"line":158,"column":12},"end":{"line":158,"column":27}},"56":{"start":{"line":160,"column":12},"end":{"line":160,"column":27}},"57":{"start":{"line":162,"column":12},"end":{"line":162,"column":27}},"58":{"start":{"line":164,"column":12},"end":{"line":164,"column":27}},"59":{"start":{"line":166,"column":12},"end":{"line":166,"column":28}},"60":{"start":{"line":168,"column":12},"end":{"line":168,"column":25}},"61":{"start":{"line":170,"column":12},"end":{"line":170,"column":31}},"62":{"start":{"line":172,"column":12},"end":{"line":172,"column":26}},"63":{"start":{"line":174,"column":12},"end":{"line":174,"column":27}},"64":{"start":{"line":176,"column":12},"end":{"line":176,"column":24}},"65":{"start":{"line":178,"column":12},"end":{"line":178,"column":30}},"66":{"start":{"line":180,"column":12},"end":{"line":180,"column":29}},"67":{"start":{"line":182,"column":12},"end":{"line":182,"column":31}},"68":{"start":{"line":184,"column":12},"end":{"line":184,"column":26}},"69":{"start":{"line":186,"column":12},"end":{"line":186,"column":26}},"70":{"start":{"line":188,"column":12},"end":{"line":188,"column":26}},"71":{"start":{"line":190,"column":12},"end":{"line":190,"column":26}},"72":{"start":{"line":192,"column":12},"end":{"line":192,"column":27}},"73":{"start":{"line":194,"column":12},"end":{"line":194,"column":25}},"74":{"start":{"line":196,"column":12},"end":{"line":196,"column":25}},"75":{"start":{"line":198,"column":12},"end":{"line":198,"column":27}},"76":{"start":{"line":200,"column":12},"end":{"line":200,"column":26}},"77":{"start":{"line":202,"column":12},"end":{"line":202,"column":26}},"78":{"start":{"line":204,"column":12},"end":{"line":204,"column":26}},"79":{"start":{"line":206,"column":12},"end":{"line":206,"column":27}},"80":{"start":{"line":208,"column":12},"end":{"line":208,"column":25}},"81":{"start":{"line":210,"column":12},"end":{"line":210,"column":60}},"82":{"start":{"line":213,"column":0},"end":{"line":213,"column":32}},"83":{"start":{"line":215,"column":23},"end":{"line":278,"column":1}},"84":{"start":{"line":216,"column":4},"end":{"line":277,"column":5}},"85":{"start":{"line":218,"column":12},"end":{"line":218,"column":64}},"86":{"start":{"line":220,"column":12},"end":{"line":220,"column":64}},"87":{"start":{"line":222,"column":12},"end":{"line":222,"column":64}},"88":{"start":{"line":224,"column":12},"end":{"line":224,"column":64}},"89":{"start":{"line":226,"column":12},"end":{"line":226,"column":64}},"90":{"start":{"line":228,"column":12},"end":{"line":228,"column":64}},"91":{"start":{"line":230,"column":12},"end":{"line":230,"column":64}},"92":{"start":{"line":232,"column":12},"end":{"line":232,"column":64}},"93":{"start":{"line":234,"column":12},"end":{"line":234,"column":64}},"94":{"start":{"line":236,"column":12},"end":{"line":236,"column":64}},"95":{"start":{"line":238,"column":12},"end":{"line":238,"column":64}},"96":{"start":{"line":240,"column":12},"end":{"line":240,"column":64}},"97":{"start":{"line":242,"column":12},"end":{"line":242,"column":64}},"98":{"start":{"line":252,"column":12},"end":{"line":252,"column":64}},"99":{"start":{"line":254,"column":12},"end":{"line":254,"column":64}},"100":{"start":{"line":256,"column":12},"end":{"line":256,"column":64}},"101":{"start":{"line":258,"column":12},"end":{"line":258,"column":64}},"102":{"start":{"line":260,"column":12},"end":{"line":260,"column":64}},"103":{"start":{"line":262,"column":12},"end":{"line":262,"column":64}},"104":{"start":{"line":264,"column":12},"end":{"line":264,"column":64}},"105":{"start":{"line":266,"column":12},"end":{"line":266,"column":64}},"106":{"start":{"line":268,"column":12},"end":{"line":268,"column":64}},"107":{"start":{"line":270,"column":12},"end":{"line":270,"column":64}},"108":{"start":{"line":272,"column":12},"end":{"line":272,"column":64}},"109":{"start":{"line":274,"column":12},"end":{"line":274,"column":64}},"110":{"start":{"line":276,"column":12},"end":{"line":276,"column":65}},"111":{"start":{"line":279,"column":0},"end":{"line":279,"column":40}},"112":{"start":{"line":286,"column":80},"end":{"line":290,"column":1}},"113":{"start":{"line":287,"column":4},"end":{"line":289,"column":23}},"114":{"start":{"line":291,"column":0},"end":{"line":291,"column":154}},"115":{"start":{"line":297,"column":32},"end":{"line":301,"column":1}},"116":{"start":{"line":298,"column":27},"end":{"line":298,"column":81}},"117":{"start":{"line":298,"column":45},"end":{"line":298,"column":80}},"118":{"start":{"line":299,"column":29},"end":{"line":299,"column":95}},"119":{"start":{"line":299,"column":73},"end":{"line":299,"column":90}},"120":{"start":{"line":300,"column":4},"end":{"line":300,"column":28}},"121":{"start":{"line":302,"column":0},"end":{"line":302,"column":58}},"122":{"start":{"line":308,"column":26},"end":{"line":313,"column":1}},"123":{"start":{"line":309,"column":4},"end":{"line":312,"column":21}},"124":{"start":{"line":314,"column":0},"end":{"line":314,"column":46}},"125":{"start":{"line":320,"column":20},"end":{"line":341,"column":1}},"126":{"start":{"line":321,"column":4},"end":{"line":340,"column":5}},"127":{"start":{"line":337,"column":12},"end":{"line":337,"column":24}},"128":{"start":{"line":339,"column":12},"end":{"line":339,"column":25}},"129":{"start":{"line":342,"column":0},"end":{"line":342,"column":34}},"130":{"start":{"line":347,"column":24},"end":{"line":351,"column":1}},"131":{"start":{"line":348,"column":28},"end":{"line":348,"column":71}},"132":{"start":{"line":349,"column":35},"end":{"line":349,"column":135}},"133":{"start":{"line":349,"column":99},"end":{"line":349,"column":134}},"134":{"start":{"line":350,"column":4},"end":{"line":350,"column":60}},"135":{"start":{"line":352,"column":0},"end":{"line":352,"column":42}},"136":{"start":{"line":357,"column":29},"end":{"line":361,"column":1}},"137":{"start":{"line":358,"column":4},"end":{"line":360,"column":5}},"138":{"start":{"line":359,"column":8},"end":{"line":359,"column":76}},"139":{"start":{"line":362,"column":0},"end":{"line":362,"column":52}},"140":{"start":{"line":390,"column":23},"end":{"line":419,"column":1}},"141":{"start":{"line":391,"column":4},"end":{"line":393,"column":5}},"142":{"start":{"line":392,"column":8},"end":{"line":392,"column":21}},"143":{"start":{"line":394,"column":29},"end":{"line":394,"column":59}},"144":{"start":{"line":395,"column":4},"end":{"line":397,"column":5}},"145":{"start":{"line":396,"column":8},"end":{"line":396,"column":110}},"146":{"start":{"line":398,"column":19},"end":{"line":398,"column":45}},"147":{"start":{"line":399,"column":21},"end":{"line":399,"column":23}},"148":{"start":{"line":400,"column":4},"end":{"line":417,"column":5}},"149":{"start":{"line":401,"column":8},"end":{"line":416,"column":9}},"150":{"start":{"line":402,"column":39},"end":{"line":402,"column":55}},"151":{"start":{"line":403,"column":26},"end":{"line":403,"column":42}},"152":{"start":{"line":404,"column":24},"end":{"line":404,"column":38}},"153":{"start":{"line":405,"column":25},"end":{"line":405,"column":41}},"154":{"start":{"line":406,"column":12},"end":{"line":408,"column":13}},"155":{"start":{"line":407,"column":16},"end":{"line":407,"column":128}},"156":{"start":{"line":409,"column":12},"end":{"line":411,"column":13}},"157":{"start":{"line":409,"column":25},"end":{"line":409,"column":27}},"158":{"start":{"line":410,"column":16},"end":{"line":410,"column":54}},"159":{"start":{"line":414,"column":28},"end":{"line":414,"column":41}},"160":{"start":{"line":415,"column":12},"end":{"line":415,"column":46}},"161":{"start":{"line":418,"column":4},"end":{"line":418,"column":20}},"162":{"start":{"line":420,"column":0},"end":{"line":420,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":27},"end":{"line":9,"column":28}},"loc":{"start":{"line":9,"column":43},"end":{"line":42,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":52},"end":{"line":30,"column":53}},"loc":{"start":{"line":30,"column":67},"end":{"line":33,"column":9}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":44,"column":23},"end":{"line":44,"column":24}},"loc":{"start":{"line":44,"column":35},"end":{"line":56,"column":1}},"line":44},"3":{"name":"(anonymous_3)","decl":{"start":{"line":58,"column":29},"end":{"line":58,"column":30}},"loc":{"start":{"line":58,"column":40},"end":{"line":70,"column":1}},"line":58},"4":{"name":"(anonymous_4)","decl":{"start":{"line":72,"column":24},"end":{"line":72,"column":25}},"loc":{"start":{"line":72,"column":37},"end":{"line":86,"column":1}},"line":72},"5":{"name":"(anonymous_5)","decl":{"start":{"line":79,"column":71},"end":{"line":79,"column":72}},"loc":{"start":{"line":79,"column":82},"end":{"line":82,"column":9}},"line":79},"6":{"name":"(anonymous_6)","decl":{"start":{"line":88,"column":20},"end":{"line":88,"column":21}},"loc":{"start":{"line":88,"column":29},"end":{"line":95,"column":1}},"line":88},"7":{"name":"estimateGas","decl":{"start":{"line":105,"column":15},"end":{"line":105,"column":26}},"loc":{"start":{"line":105,"column":69},"end":{"line":112,"column":1}},"line":105},"8":{"name":"(anonymous_8)","decl":{"start":{"line":118,"column":39},"end":{"line":118,"column":40}},"loc":{"start":{"line":118,"column":45},"end":{"line":123,"column":1}},"line":118},"9":{"name":"(anonymous_9)","decl":{"start":{"line":125,"column":21},"end":{"line":125,"column":22}},"loc":{"start":{"line":125,"column":32},"end":{"line":128,"column":1}},"line":125},"10":{"name":"(anonymous_10)","decl":{"start":{"line":130,"column":25},"end":{"line":130,"column":26}},"loc":{"start":{"line":130,"column":44},"end":{"line":141,"column":1}},"line":130},"11":{"name":"(anonymous_11)","decl":{"start":{"line":143,"column":19},"end":{"line":143,"column":20}},"loc":{"start":{"line":143,"column":30},"end":{"line":212,"column":1}},"line":143},"12":{"name":"(anonymous_12)","decl":{"start":{"line":215,"column":23},"end":{"line":215,"column":24}},"loc":{"start":{"line":215,"column":34},"end":{"line":278,"column":1}},"line":215},"13":{"name":"(anonymous_13)","decl":{"start":{"line":286,"column":80},"end":{"line":286,"column":81}},"loc":{"start":{"line":286,"column":98},"end":{"line":290,"column":1}},"line":286},"14":{"name":"(anonymous_14)","decl":{"start":{"line":297,"column":32},"end":{"line":297,"column":33}},"loc":{"start":{"line":297,"column":42},"end":{"line":301,"column":1}},"line":297},"15":{"name":"(anonymous_15)","decl":{"start":{"line":298,"column":36},"end":{"line":298,"column":37}},"loc":{"start":{"line":298,"column":45},"end":{"line":298,"column":80}},"line":298},"16":{"name":"(anonymous_16)","decl":{"start":{"line":299,"column":51},"end":{"line":299,"column":52}},"loc":{"start":{"line":299,"column":73},"end":{"line":299,"column":90}},"line":299},"17":{"name":"(anonymous_17)","decl":{"start":{"line":308,"column":26},"end":{"line":308,"column":27}},"loc":{"start":{"line":308,"column":35},"end":{"line":313,"column":1}},"line":308},"18":{"name":"(anonymous_18)","decl":{"start":{"line":320,"column":20},"end":{"line":320,"column":21}},"loc":{"start":{"line":320,"column":31},"end":{"line":341,"column":1}},"line":320},"19":{"name":"(anonymous_19)","decl":{"start":{"line":347,"column":24},"end":{"line":347,"column":25}},"loc":{"start":{"line":347,"column":45},"end":{"line":351,"column":1}},"line":347},"20":{"name":"(anonymous_20)","decl":{"start":{"line":349,"column":86},"end":{"line":349,"column":87}},"loc":{"start":{"line":349,"column":99},"end":{"line":349,"column":134}},"line":349},"21":{"name":"(anonymous_21)","decl":{"start":{"line":357,"column":29},"end":{"line":357,"column":30}},"loc":{"start":{"line":357,"column":50},"end":{"line":361,"column":1}},"line":357},"22":{"name":"(anonymous_22)","decl":{"start":{"line":390,"column":23},"end":{"line":390,"column":24}},"loc":{"start":{"line":390,"column":44},"end":{"line":419,"column":1}},"line":390}},"branchMap":{"0":{"loc":{"start":{"line":30,"column":20},"end":{"line":30,"column":46}},"type":"binary-expr","locations":[{"start":{"line":30,"column":20},"end":{"line":30,"column":40}},{"start":{"line":30,"column":44},"end":{"line":30,"column":46}}],"line":30},"1":{"loc":{"start":{"line":35,"column":15},"end":{"line":35,"column":36}},"type":"binary-expr","locations":[{"start":{"line":35,"column":15},"end":{"line":35,"column":30}},{"start":{"line":35,"column":34},"end":{"line":35,"column":36}}],"line":35},"2":{"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":55}},"type":"binary-expr","locations":[{"start":{"line":37,"column":24},"end":{"line":37,"column":49}},{"start":{"line":37,"column":53},"end":{"line":37,"column":55}}],"line":37},"3":{"loc":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},{"start":{},"end":{}}],"line":45},"4":{"loc":{"start":{"line":79,"column":30},"end":{"line":79,"column":65}},"type":"binary-expr","locations":[{"start":{"line":79,"column":30},"end":{"line":79,"column":59}},{"start":{"line":79,"column":63},"end":{"line":79,"column":65}}],"line":79},"5":{"loc":{"start":{"line":105,"column":55},"end":{"line":105,"column":65}},"type":"default-arg","locations":[{"start":{"line":105,"column":63},"end":{"line":105,"column":65}}],"line":105},"6":{"loc":{"start":{"line":131,"column":4},"end":{"line":140,"column":5}},"type":"switch","locations":[{"start":{"line":132,"column":8},"end":{"line":133,"column":46}},{"start":{"line":134,"column":8},"end":{"line":135,"column":47}},{"start":{"line":136,"column":8},"end":{"line":137,"column":48}},{"start":{"line":138,"column":8},"end":{"line":139,"column":69}}],"line":131},"7":{"loc":{"start":{"line":144,"column":4},"end":{"line":211,"column":5}},"type":"switch","locations":[{"start":{"line":145,"column":8},"end":{"line":146,"column":23}},{"start":{"line":147,"column":8},"end":{"line":148,"column":25}},{"start":{"line":149,"column":8},"end":{"line":150,"column":27}},{"start":{"line":151,"column":8},"end":{"line":152,"column":30}},{"start":{"line":153,"column":8},"end":{"line":154,"column":26}},{"start":{"line":155,"column":8},"end":{"line":156,"column":26}},{"start":{"line":157,"column":8},"end":{"line":158,"column":27}},{"start":{"line":159,"column":8},"end":{"line":160,"column":27}},{"start":{"line":161,"column":8},"end":{"line":162,"column":27}},{"start":{"line":163,"column":8},"end":{"line":164,"column":27}},{"start":{"line":165,"column":8},"end":{"line":166,"column":28}},{"start":{"line":167,"column":8},"end":{"line":168,"column":25}},{"start":{"line":169,"column":8},"end":{"line":170,"column":31}},{"start":{"line":171,"column":8},"end":{"line":172,"column":26}},{"start":{"line":173,"column":8},"end":{"line":174,"column":27}},{"start":{"line":175,"column":8},"end":{"line":176,"column":24}},{"start":{"line":177,"column":8},"end":{"line":178,"column":30}},{"start":{"line":179,"column":8},"end":{"line":180,"column":29}},{"start":{"line":181,"column":8},"end":{"line":182,"column":31}},{"start":{"line":183,"column":8},"end":{"line":184,"column":26}},{"start":{"line":185,"column":8},"end":{"line":186,"column":26}},{"start":{"line":187,"column":8},"end":{"line":188,"column":26}},{"start":{"line":189,"column":8},"end":{"line":190,"column":26}},{"start":{"line":191,"column":8},"end":{"line":192,"column":27}},{"start":{"line":193,"column":8},"end":{"line":194,"column":25}},{"start":{"line":195,"column":8},"end":{"line":196,"column":25}},{"start":{"line":197,"column":8},"end":{"line":198,"column":27}},{"start":{"line":199,"column":8},"end":{"line":200,"column":26}},{"start":{"line":201,"column":8},"end":{"line":202,"column":26}},{"start":{"line":203,"column":8},"end":{"line":204,"column":26}},{"start":{"line":205,"column":8},"end":{"line":206,"column":27}},{"start":{"line":207,"column":8},"end":{"line":208,"column":25}},{"start":{"line":209,"column":8},"end":{"line":210,"column":60}}],"line":144},"8":{"loc":{"start":{"line":216,"column":4},"end":{"line":277,"column":5}},"type":"switch","locations":[{"start":{"line":217,"column":8},"end":{"line":218,"column":64}},{"start":{"line":219,"column":8},"end":{"line":220,"column":64}},{"start":{"line":221,"column":8},"end":{"line":222,"column":64}},{"start":{"line":223,"column":8},"end":{"line":224,"column":64}},{"start":{"line":225,"column":8},"end":{"line":226,"column":64}},{"start":{"line":227,"column":8},"end":{"line":228,"column":64}},{"start":{"line":229,"column":8},"end":{"line":230,"column":64}},{"start":{"line":231,"column":8},"end":{"line":232,"column":64}},{"start":{"line":233,"column":8},"end":{"line":234,"column":64}},{"start":{"line":235,"column":8},"end":{"line":236,"column":64}},{"start":{"line":237,"column":8},"end":{"line":238,"column":64}},{"start":{"line":239,"column":8},"end":{"line":240,"column":64}},{"start":{"line":241,"column":8},"end":{"line":242,"column":64}},{"start":{"line":244,"column":8},"end":{"line":244,"column":32}},{"start":{"line":245,"column":8},"end":{"line":245,"column":39}},{"start":{"line":246,"column":8},"end":{"line":246,"column":36}},{"start":{"line":247,"column":8},"end":{"line":247,"column":43}},{"start":{"line":248,"column":8},"end":{"line":248,"column":32}},{"start":{"line":249,"column":8},"end":{"line":249,"column":39}},{"start":{"line":250,"column":8},"end":{"line":250,"column":30}},{"start":{"line":251,"column":8},"end":{"line":252,"column":64}},{"start":{"line":253,"column":8},"end":{"line":254,"column":64}},{"start":{"line":255,"column":8},"end":{"line":256,"column":64}},{"start":{"line":257,"column":8},"end":{"line":258,"column":64}},{"start":{"line":259,"column":8},"end":{"line":260,"column":64}},{"start":{"line":261,"column":8},"end":{"line":262,"column":64}},{"start":{"line":263,"column":8},"end":{"line":264,"column":64}},{"start":{"line":265,"column":8},"end":{"line":266,"column":64}},{"start":{"line":267,"column":8},"end":{"line":268,"column":64}},{"start":{"line":269,"column":8},"end":{"line":270,"column":64}},{"start":{"line":271,"column":8},"end":{"line":272,"column":64}},{"start":{"line":273,"column":8},"end":{"line":274,"column":64}},{"start":{"line":275,"column":8},"end":{"line":276,"column":65}}],"line":216},"9":{"loc":{"start":{"line":287,"column":11},"end":{"line":289,"column":22}},"type":"cond-expr","locations":[{"start":{"line":288,"column":10},"end":{"line":288,"column":77}},{"start":{"line":289,"column":10},"end":{"line":289,"column":22}}],"line":287},"10":{"loc":{"start":{"line":321,"column":4},"end":{"line":340,"column":5}},"type":"switch","locations":[{"start":{"line":322,"column":8},"end":{"line":322,"column":35}},{"start":{"line":323,"column":8},"end":{"line":323,"column":32}},{"start":{"line":324,"column":8},"end":{"line":324,"column":34}},{"start":{"line":325,"column":8},"end":{"line":325,"column":39}},{"start":{"line":326,"column":8},"end":{"line":326,"column":40}},{"start":{"line":327,"column":8},"end":{"line":327,"column":43}},{"start":{"line":328,"column":8},"end":{"line":328,"column":32}},{"start":{"line":329,"column":8},"end":{"line":329,"column":43}},{"start":{"line":330,"column":8},"end":{"line":330,"column":40}},{"start":{"line":331,"column":8},"end":{"line":331,"column":39}},{"start":{"line":332,"column":8},"end":{"line":332,"column":38}},{"start":{"line":333,"column":8},"end":{"line":333,"column":37}},{"start":{"line":334,"column":8},"end":{"line":334,"column":39}},{"start":{"line":335,"column":8},"end":{"line":335,"column":41}},{"start":{"line":336,"column":8},"end":{"line":337,"column":24}},{"start":{"line":338,"column":8},"end":{"line":339,"column":25}}],"line":321},"11":{"loc":{"start":{"line":358,"column":4},"end":{"line":360,"column":5}},"type":"if","locations":[{"start":{"line":358,"column":4},"end":{"line":360,"column":5}},{"start":{},"end":{}}],"line":358},"12":{"loc":{"start":{"line":391,"column":4},"end":{"line":393,"column":5}},"type":"if","locations":[{"start":{"line":391,"column":4},"end":{"line":393,"column":5}},{"start":{},"end":{}}],"line":391},"13":{"loc":{"start":{"line":395,"column":4},"end":{"line":397,"column":5}},"type":"if","locations":[{"start":{"line":395,"column":4},"end":{"line":397,"column":5}},{"start":{},"end":{}}],"line":395},"14":{"loc":{"start":{"line":401,"column":8},"end":{"line":416,"column":9}},"type":"if","locations":[{"start":{"line":401,"column":8},"end":{"line":416,"column":9}},{"start":{"line":413,"column":13},"end":{"line":416,"column":9}}],"line":401},"15":{"loc":{"start":{"line":406,"column":12},"end":{"line":408,"column":13}},"type":"if","locations":[{"start":{"line":406,"column":12},"end":{"line":408,"column":13}},{"start":{},"end":{}}],"line":406}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":106,"8":113,"9":1,"10":1,"11":106,"12":100,"13":6,"14":6,"15":1,"16":1,"17":0,"18":0,"19":1,"20":1,"21":4,"22":0,"23":1,"24":1,"25":13,"26":13,"27":1,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1,"37":0,"38":0,"39":1,"40":1,"41":3,"42":0,"43":2,"44":1,"45":0,"46":1,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":1,"84":6,"85":5,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":1,"113":3,"114":1,"115":1,"116":4,"117":7,"118":4,"119":7,"120":4,"121":1,"122":1,"123":14,"124":1,"125":1,"126":4,"127":0,"128":4,"129":1,"130":1,"131":0,"132":0,"133":0,"134":0,"135":1,"136":1,"137":0,"138":0,"139":1,"140":1,"141":1,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":1},"f":{"0":106,"1":113,"2":106,"3":0,"4":4,"5":0,"6":13,"7":0,"8":0,"9":0,"10":3,"11":0,"12":6,"13":3,"14":4,"15":7,"16":7,"17":14,"18":4,"19":0,"20":0,"21":0,"22":1},"b":{"0":[106,0],"1":[106,100],"2":[106,100],"3":[100,6],"4":[4,3],"5":[0],"6":[0,2,1,0],"7":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"8":[5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"9":[0,3],"10":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4],"11":[0,0],"12":[1,0],"13":[0,0],"14":[0,0],"15":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/utils/utils.ts","sources":["/Users/rg/dev/opensea-js/src/utils/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  CROSS_CHAIN_SEAPORT_V1_6_ADDRESS,\n  ItemType,\n} from \"@opensea/seaport-js/lib/constants\";\nimport { ethers, FixedNumber } from \"ethers\";\nimport {\n  FIXED_NUMBER_100,\n  MAX_EXPIRATION_MONTHS,\n  SHARED_STOREFRONT_ADDRESSES,\n  SHARED_STOREFRONT_LAZY_MINT_ADAPTER_CROSS_CHAIN_ADDRESS,\n} from \"../constants\";\nimport {\n  Chain,\n  Fee,\n  OpenSeaAccount,\n  OpenSeaCollection,\n  OpenSeaPaymentToken,\n  RarityStrategy,\n  TokenStandard,\n} from \"../types\";\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const collectionFromJSON = (collection: any): OpenSeaCollection => {\n  return {\n    name: collection.name,\n    collection: collection.collection,\n    description: collection.description,\n    imageUrl: collection.image_url,\n    bannerImageUrl: collection.banner_image_url,\n    owner: collection.owner,\n    safelistStatus: collection.safelist_status,\n    category: collection.category,\n    isDisabled: collection.is_disabled,\n    isNSFW: collection.is_nsfw,\n    traitOffersEnabled: collection.trait_offers_enabled,\n    collectionOffersEnabled: collection.collection_offers_enabled,\n    openseaUrl: collection.opensea_url,\n    projectUrl: collection.project_url,\n    wikiUrl: collection.wiki_url,\n    discordUrl: collection.discord_url,\n    telegramUrl: collection.telegram_url,\n    twitterUsername: collection.twitter_username,\n    instagramUsername: collection.instagram_username,\n    contracts: (collection.contracts ?? []).map((contract: any) => ({\n      address: contract.address,\n      chain: contract.chain,\n    })),\n    editors: collection.editors,\n    fees: (collection.fees ?? []).map(feeFromJSON),\n    rarity: rarityFromJSON(collection.rarity),\n    paymentTokens: (collection.payment_tokens ?? []).map(paymentTokenFromJSON),\n    totalSupply: collection.total_supply,\n    createdDate: collection.created_date,\n    requiredZone: collection.required_zone,\n  };\n};\n\nexport const rarityFromJSON = (rarity: any): RarityStrategy | null => {\n  if (!rarity) {\n    return null;\n  }\n  const fromJSON: RarityStrategy = {\n    strategyId: rarity.strategy_id,\n    strategyVersion: rarity.strategy_version,\n    calculatedAt: rarity.calculated_at,\n    maxRank: rarity.max_rank,\n    tokensScored: rarity.tokens_scored,\n  };\n  return fromJSON;\n};\n\nexport const paymentTokenFromJSON = (token: any): OpenSeaPaymentToken => {\n  const fromJSON: OpenSeaPaymentToken = {\n    name: token.name,\n    symbol: token.symbol,\n    decimals: token.decimals,\n    address: token.address,\n    chain: token.chain,\n    imageUrl: token.image,\n    ethPrice: token.eth_price,\n    usdPrice: token.usd_price,\n  };\n  return fromJSON;\n};\n\nexport const accountFromJSON = (account: any): OpenSeaAccount => {\n  return {\n    address: account.address,\n    username: account.username,\n    profileImageUrl: account.profile_image_url,\n    bannerImageUrl: account.banner_image_url,\n    website: account.website,\n    socialMediaAccounts: (account.social_media_accounts ?? []).map(\n      (acct: any) => ({\n        platform: acct.platform,\n        username: acct.username,\n      }),\n    ),\n    bio: account.bio,\n    joinedDate: account.joined_date,\n  };\n};\n\nexport const feeFromJSON = (fee: any): Fee => {\n  const fromJSON: Fee = {\n    fee: fee.fee,\n    recipient: fee.recipient,\n    required: fee.required,\n  };\n  return fromJSON;\n};\n\n/**\n * Estimate gas usage for a transaction.\n * @param provider The Provider\n * @param from Address sending transaction\n * @param to Destination contract address\n * @param data Data to send to contract\n * @param value Value in ETH to send with data\n */\nexport async function estimateGas(\n  provider: ethers.Provider,\n  { from, to, data, value = 0n }: ethers.Transaction,\n) {\n  return await provider.estimateGas({\n    from,\n    to,\n    value: value.toString(),\n    data,\n  });\n}\n\n/**\n * The longest time that an order is valid for is one month from the current date\n * @returns unix timestamp\n */\nexport const getMaxOrderExpirationTimestamp = () => {\n  const maxExpirationDate = new Date();\n\n  maxExpirationDate.setMonth(\n    maxExpirationDate.getMonth() + MAX_EXPIRATION_MONTHS,\n  );\n  maxExpirationDate.setDate(maxExpirationDate.getDate() - 1);\n\n  return Math.round(maxExpirationDate.getTime() / 1000);\n};\n\ninterface ErrorWithCode extends Error {\n  code: string;\n}\n\nexport const hasErrorCode = (error: unknown): error is ErrorWithCode => {\n  const untypedError = error as Partial<ErrorWithCode>;\n  return !!untypedError.code;\n};\n\nexport const getAssetItemType = (tokenStandard: TokenStandard) => {\n  switch (tokenStandard) {\n    case \"ERC20\":\n      return ItemType.ERC20;\n    case \"ERC721\":\n      return ItemType.ERC721;\n    case \"ERC1155\":\n      return ItemType.ERC1155;\n    default:\n      throw new Error(`Unknown schema name: ${tokenStandard}`);\n  }\n};\n\nexport const getChainId = (chain: Chain) => {\n  switch (chain) {\n    case Chain.Mainnet:\n      return \"1\";\n    case Chain.Polygon:\n      return \"137\";\n    case Chain.Amoy:\n      return \"80002\";\n    case Chain.Sepolia:\n      return \"11155111\";\n    case Chain.Klaytn:\n      return \"8217\";\n    case Chain.Baobab:\n      return \"1001\";\n    case Chain.Avalanche:\n      return \"43114\";\n    case Chain.Fuji:\n      return \"43113\";\n    case Chain.Arbitrum:\n      return \"42161\";\n    case Chain.ArbitrumNova:\n      return \"42170\";\n    case Chain.ArbitrumSepolia:\n      return \"421614\";\n    case Chain.Blast:\n      return \"238\";\n    case Chain.BlastSepolia:\n      return \"168587773\";\n    case Chain.Base:\n      return \"8453\";\n    case Chain.BaseSepolia:\n      return \"84532\";\n    case Chain.Optimism:\n      return \"10\";\n    case Chain.OptimismSepolia:\n      return \"11155420\";\n    case Chain.Zora:\n      return \"7777777\";\n    case Chain.ZoraSepolia:\n      return \"999999999\";\n    case Chain.Sei:\n      return \"1329\";\n    case Chain.SeiTestnet:\n      return \"1328\";\n    case Chain.B3:\n      return \"8333\";\n    case Chain.B3Sepolia:\n      return \"1993\";\n    case Chain.BeraChain:\n      return \"80094\";\n    case Chain.Flow:\n      return \"747\";\n    case Chain.FlowTestnet:\n      return \"545\";\n    case Chain.ApeChain:\n      return \"33139\";\n    case Chain.Ronin:\n      return \"2020\";\n    case Chain.SaigonTestnet:\n      return \"2021\";\n    case Chain.Abstract:\n      return \"2741\";\n    case Chain.AbstractTestnet:\n      return \"11124\";\n    case Chain.Shape:\n      return \"360\";\n    default:\n      throw new Error(`Unknown chainId for ${chain}`);\n  }\n};\n\n/** This should be the wrapped native asset for the chain. */\nexport const getWETHAddress = (chain: Chain) => {\n  switch (chain) {\n    case Chain.Mainnet:\n      return \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\n    case Chain.Polygon:\n      return \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\";\n    case Chain.Amoy:\n      return \"0x52eF3d68BaB452a294342DC3e5f464d7f610f72E\";\n    case Chain.Sepolia:\n      return \"0x7b79995e5f793a07bc00c21412e50ecae098e7f9\";\n    case Chain.Klaytn:\n      return \"0xfd844c2fca5e595004b17615f891620d1cb9bbb2\";\n    case Chain.Baobab:\n      return \"0x9330dd6713c8328a8d82b14e3f60a0f0b4cc7bfb\";\n    case Chain.Avalanche:\n      return \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\";\n    case Chain.Fuji:\n      return \"0xd00ae08403B9bbb9124bB305C09058E32C39A48c\";\n    case Chain.Arbitrum:\n      return \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\";\n    case Chain.ArbitrumNova:\n      return \"0x722e8bdd2ce80a4422e880164f2079488e115365\";\n    case Chain.ArbitrumSepolia:\n      return \"0x980b62da83eff3d4576c647993b0c1d7faf17c73\";\n    case Chain.Blast:\n      return \"0x4300000000000000000000000000000000000004\";\n    case Chain.BlastSepolia:\n      return \"0x4200000000000000000000000000000000000023\";\n    // OP Chains have WETH at the same address\n    case Chain.Base:\n    case Chain.BaseSepolia:\n    case Chain.Optimism:\n    case Chain.OptimismSepolia:\n    case Chain.Zora:\n    case Chain.ZoraSepolia:\n    case Chain.B3:\n    case Chain.B3Sepolia:\n      return \"0x4200000000000000000000000000000000000006\";\n    case Chain.BeraChain:\n      return \"0x6969696969696969696969696969696969696969\";\n    case Chain.Sei:\n      return \"0xe30fedd158a2e3b13e9badaeabafc5516e95e8c7\";\n    case Chain.SeiTestnet:\n      return \"0x3921ea6cf927be80211bb57f19830700285b0ada\";\n    case Chain.Flow:\n      return \"0xd3bf53dac106a0290b0483ecbc89d40fcc961f3e\";\n    case Chain.FlowTestnet:\n      return \"0x23b1864b73c6E7Cd6D90bDFa3E62B159eBDdbAb3\";\n    case Chain.ApeChain:\n      return \"0x48b62137edfa95a428d35c09e44256a739f6b557\";\n    case Chain.Ronin:\n      return \"0xe514d9deb7966c8be0ca922de8a064264ea6bcd4\";\n    case Chain.SaigonTestnet:\n      return \"0xa959726154953bae111746e265e6d754f48570e6\";\n    case Chain.Abstract:\n      return \"0x3439153eb7af838ad19d56e1571fbd09333c2809\";\n    case Chain.AbstractTestnet:\n      return \"0x9edcde0257f2386ce177c3a7fcdd97787f0d841d\";\n    case Chain.Shape:\n      return \"0x4200000000000000000000000000000000000006\";\n    default:\n      throw new Error(`Unknown WETH address for ${chain}`);\n  }\n};\n\n/**\n * Checks if the token address is the shared storefront address and if so replaces\n * that address with the lazy mint adapter address. Otherwise, returns the input token address\n * @param tokenAddress token address\n * @returns input token address or lazy mint adapter address\n */\nexport const getAddressAfterRemappingSharedStorefrontAddressToLazyMintAdapterAddress =\n  (tokenAddress: string): string => {\n    return SHARED_STOREFRONT_ADDRESSES.includes(tokenAddress.toLowerCase())\n      ? SHARED_STOREFRONT_LAZY_MINT_ADAPTER_CROSS_CHAIN_ADDRESS\n      : tokenAddress;\n  };\n\n/**\n * Sums up the basis points for fees.\n * @param fees The fees to sum up\n * @returns sum of basis points\n */\nexport const totalBasisPointsForFees = (fees: Fee[]): bigint => {\n  const feeBasisPoints = fees.map((fee) => basisPointsForFee(fee));\n  const totalBasisPoints = feeBasisPoints.reduce(\n    (sum, basisPoints) => basisPoints + sum,\n    0n,\n  );\n  return totalBasisPoints;\n};\n\n/**\n * Converts a fee to its basis points representation.\n * @param fee The fee to convert\n * @returns the basis points\n */\nexport const basisPointsForFee = (fee: Fee): bigint => {\n  return BigInt(\n    FixedNumber.fromString(fee.fee.toString())\n      .mul(FIXED_NUMBER_100)\n      .toFormat(0) // format to 0 decimal places to convert to bigint\n      .toString(),\n  );\n};\n\n/**\n * Checks whether the current chain is a test chain.\n * @param chain Chain to check.\n * @returns True if the chain is a test chain.\n */\nexport const isTestChain = (chain: Chain): boolean => {\n  switch (chain) {\n    case Chain.Sepolia:\n    case Chain.Amoy:\n    case Chain.Baobab:\n    case Chain.BaseSepolia:\n    case Chain.BlastSepolia:\n    case Chain.ArbitrumSepolia:\n    case Chain.Fuji:\n    case Chain.OptimismSepolia:\n    case Chain.SolanaDevnet:\n    case Chain.ZoraSepolia:\n    case Chain.SeiTestnet:\n    case Chain.B3Sepolia:\n    case Chain.FlowTestnet:\n    case Chain.SaigonTestnet:\n    case Chain.AbstractTestnet:\n      return true;\n    default:\n      return false;\n  }\n};\n\n/**\n * Returns if a protocol address is valid.\n * @param protocolAddress The protocol address\n */\nexport const isValidProtocol = (protocolAddress: string): boolean => {\n  const checkSumAddress = ethers.getAddress(protocolAddress);\n  const validProtocolAddresses = [CROSS_CHAIN_SEAPORT_V1_6_ADDRESS].map(\n    (address) => ethers.getAddress(address),\n  );\n  return validProtocolAddresses.includes(checkSumAddress);\n};\n\n/**\n * Throws an error if the protocol address is not valid.\n * @param protocolAddress The protocol address\n */\nexport const requireValidProtocol = (protocolAddress: string) => {\n  if (!isValidProtocol(protocolAddress)) {\n    throw new Error(`Unsupported protocol address: ${protocolAddress}`);\n  }\n};\n\n/**\n * Decodes an encoded string of token IDs into an array of individual token IDs using bigint for precise calculations.\n *\n * The encoded token IDs can be in the following formats:\n * 1. Single numbers: '123' => ['123']\n * 2. Comma-separated numbers: '1,2,3,4' => ['1', '2', '3', '4']\n * 3. Ranges of numbers: '5:8' => ['5', '6', '7', '8']\n * 4. Combinations of single numbers and ranges: '1,3:5,8' => ['1', '3', '4', '5', '8']\n * 5. Wildcard '*' (matches all token IDs): '*' => ['*']\n *\n * @param encodedTokenIds - The encoded string of token IDs to be decoded.\n * @returns An array of individual token IDs after decoding the input.\n *\n * @throws {Error} If the input is not correctly formatted or if bigint operations fail.\n *\n * @example\n * const encoded = '1,3:5,8';\n * const decoded = decodeTokenIds(encoded); // Output: ['1', '3', '4', '5', '8']\n *\n * @example\n * const encodedWildcard = '*';\n * const decodedWildcard = decodeTokenIds(encodedWildcard); // Output: ['*']\n *\n * @example\n * const emptyEncoded = '';\n * const decodedEmpty = decodeTokenIds(emptyEncoded); // Output: []\n */\nexport const decodeTokenIds = (encodedTokenIds: string): string[] => {\n  if (encodedTokenIds === \"*\") {\n    return [\"*\"];\n  }\n\n  const validFormatRegex = /^(\\d+(:\\d+)?)(,\\d+(:\\d+)?)*$/;\n\n  if (!validFormatRegex.test(encodedTokenIds)) {\n    throw new Error(\n      \"Invalid input format. Expected a valid comma-separated list of numbers and ranges.\",\n    );\n  }\n\n  const ranges = encodedTokenIds.split(\",\");\n  const tokenIds: string[] = [];\n\n  for (const range of ranges) {\n    if (range.includes(\":\")) {\n      const [startStr, endStr] = range.split(\":\");\n      const start = BigInt(startStr);\n      const end = BigInt(endStr);\n      const diff = end - start + 1n;\n\n      if (diff <= 0) {\n        throw new Error(\n          `Invalid range. End value: ${end} must be greater than or equal to the start value: ${start}.`,\n        );\n      }\n\n      for (let i = 0n; i < diff; i += 1n) {\n        tokenIds.push((start + i).toString());\n      }\n    } else {\n      const tokenId = BigInt(range);\n      tokenIds.push(tokenId.toString());\n    }\n  }\n\n  return tokenIds;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e67b405b6d0b413479e21980e377093247b6cd38","contentHash":"616f1ce3282cd99eea42855c3b293e01f0d8d9021f09e255b264fd9e0956f058"},"/Users/rg/dev/opensea-js/src/orders/privateListings.ts":{"path":"/Users/rg/dev/opensea-js/src/orders/privateListings.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":135}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":40},"end":{"line":10,"column":1}},"5":{"start":{"line":7,"column":4},"end":{"line":9,"column":7}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":60}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":74}},"8":{"start":{"line":12,"column":44},"end":{"line":51,"column":1}},"9":{"start":{"line":15,"column":25},"end":{"line":15,"column":141}},"10":{"start":{"line":15,"column":73},"end":{"line":15,"column":140}},"11":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"12":{"start":{"line":16,"column":38},"end":{"line":16,"column":70}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":105}},"14":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"15":{"start":{"line":19,"column":38},"end":{"line":19,"column":80}},"16":{"start":{"line":20,"column":8},"end":{"line":20,"column":82}},"17":{"start":{"line":22,"column":59},"end":{"line":28,"column":6}},"18":{"start":{"line":22,"column":138},"end":{"line":25,"column":5}},"19":{"start":{"line":29,"column":25},"end":{"line":49,"column":5}},"20":{"start":{"line":50,"column":4},"end":{"line":50,"column":24}},"21":{"start":{"line":52,"column":0},"end":{"line":52,"column":82}},"22":{"start":{"line":53,"column":38},"end":{"line":105,"column":1}},"23":{"start":{"line":54,"column":35},"end":{"line":54,"column":37}},"24":{"start":{"line":57,"column":4},"end":{"line":79,"column":7}},"25":{"start":{"line":58,"column":35},"end":{"line":61,"column":47}},"26":{"start":{"line":58,"column":113},"end":{"line":61,"column":46}},"27":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"28":{"start":{"line":63,"column":12},"end":{"line":63,"column":107}},"29":{"start":{"line":65,"column":8},"end":{"line":78,"column":11}},"30":{"start":{"line":80,"column":40},"end":{"line":80,"column":42}},"31":{"start":{"line":83,"column":4},"end":{"line":103,"column":7}},"32":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"33":{"start":{"line":85,"column":12},"end":{"line":85,"column":19}},"34":{"start":{"line":89,"column":8},"end":{"line":102,"column":11}},"35":{"start":{"line":104,"column":4},"end":{"line":104,"column":71}},"36":{"start":{"line":106,"column":0},"end":{"line":106,"column":70}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":40},"end":{"line":6,"column":41}},"loc":{"start":{"line":6,"column":73},"end":{"line":10,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":21},"end":{"line":7,"column":22}},"loc":{"start":{"line":7,"column":31},"end":{"line":9,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":44},"end":{"line":12,"column":45}},"loc":{"start":{"line":12,"column":77},"end":{"line":51,"column":1}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":63},"end":{"line":15,"column":64}},"loc":{"start":{"line":15,"column":73},"end":{"line":15,"column":140}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":16,"column":28},"end":{"line":16,"column":29}},"loc":{"start":{"line":16,"column":38},"end":{"line":16,"column":70}},"line":16},"5":{"name":"(anonymous_5)","decl":{"start":{"line":19,"column":28},"end":{"line":19,"column":29}},"loc":{"start":{"line":19,"column":38},"end":{"line":19,"column":80}},"line":19},"6":{"name":"(anonymous_6)","decl":{"start":{"line":22,"column":79},"end":{"line":22,"column":80}},"loc":{"start":{"line":22,"column":138},"end":{"line":25,"column":5}},"line":22},"7":{"name":"(anonymous_7)","decl":{"start":{"line":53,"column":38},"end":{"line":53,"column":39}},"loc":{"start":{"line":53,"column":63},"end":{"line":105,"column":1}},"line":53},"8":{"name":"(anonymous_8)","decl":{"start":{"line":57,"column":49},"end":{"line":57,"column":50}},"loc":{"start":{"line":57,"column":76},"end":{"line":79,"column":5}},"line":57},"9":{"name":"(anonymous_9)","decl":{"start":{"line":58,"column":90},"end":{"line":58,"column":91}},"loc":{"start":{"line":58,"column":113},"end":{"line":61,"column":46}},"line":58},"10":{"name":"(anonymous_10)","decl":{"start":{"line":83,"column":57},"end":{"line":83,"column":58}},"loc":{"start":{"line":83,"column":100},"end":{"line":103,"column":5}},"line":83}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},{"start":{},"end":{}}],"line":16},"1":{"loc":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},{"start":{},"end":{}}],"line":19},"2":{"loc":{"start":{"line":58,"column":113},"end":{"line":61,"column":46}},"type":"binary-expr","locations":[{"start":{"line":58,"column":113},"end":{"line":58,"column":162}},{"start":{"line":59,"column":12},"end":{"line":59,"column":55}},{"start":{"line":60,"column":12},"end":{"line":61,"column":46}}],"line":58},"3":{"loc":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},{"start":{},"end":{}}],"line":62},"4":{"loc":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},{"start":{},"end":{}}],"line":84}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/orders/privateListings.ts","sources":["/Users/rg/dev/opensea-js/src/orders/privateListings.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ConsiderationInputItem,\n  CreateInputItem,\n  MatchOrdersFulfillment,\n  Order,\n  OrderWithCounter,\n} from \"@opensea/seaport-js/lib/types\";\nimport { isCurrencyItem } from \"@opensea/seaport-js/lib/utils/item\";\nimport { generateRandomSalt } from \"@opensea/seaport-js/lib/utils/order\";\n\nexport const getPrivateListingConsiderations = (\n  offer: CreateInputItem[],\n  privateSaleRecipient: string,\n): ConsiderationInputItem[] => {\n  return offer.map((item) => {\n    return { ...item, recipient: privateSaleRecipient };\n  });\n};\n\nexport const constructPrivateListingCounterOrder = (\n  order: OrderWithCounter,\n  privateSaleRecipient: string,\n): Order => {\n  // Counter order offers up all the items in the private listing consideration\n  // besides the items that are going to the private listing recipient\n  const paymentItems = order.parameters.consideration.filter(\n    (item) =>\n      item.recipient.toLowerCase() !== privateSaleRecipient.toLowerCase(),\n  );\n\n  if (!paymentItems.every((item) => isCurrencyItem(item))) {\n    throw new Error(\n      \"The consideration for the private listing did not contain only currency items\",\n    );\n  }\n  if (\n    !paymentItems.every((item) => item.itemType === paymentItems[0].itemType)\n  ) {\n    throw new Error(\"Not all currency items were the same for private order\");\n  }\n\n  const { aggregatedStartAmount, aggregatedEndAmount } = paymentItems.reduce(\n    ({ aggregatedStartAmount, aggregatedEndAmount }, item) => ({\n      aggregatedStartAmount: aggregatedStartAmount + BigInt(item.startAmount),\n      aggregatedEndAmount: aggregatedEndAmount + BigInt(item.endAmount),\n    }),\n    {\n      aggregatedStartAmount: 0n,\n      aggregatedEndAmount: 0n,\n    },\n  );\n\n  const counterOrder: Order = {\n    parameters: {\n      ...order.parameters,\n      offerer: privateSaleRecipient,\n      offer: [\n        {\n          itemType: paymentItems[0].itemType,\n          token: paymentItems[0].token,\n          identifierOrCriteria: paymentItems[0].identifierOrCriteria,\n          startAmount: aggregatedStartAmount.toString(),\n          endAmount: aggregatedEndAmount.toString(),\n        },\n      ],\n      // The consideration here is empty as the original private listing order supplies\n      // the taker address to receive the desired items.\n      consideration: [],\n      salt: generateRandomSalt(),\n      totalOriginalConsiderationItems: 0,\n    },\n    signature: \"0x\",\n  };\n\n  return counterOrder;\n};\n\nexport const getPrivateListingFulfillments = (\n  privateListingOrder: OrderWithCounter,\n): MatchOrdersFulfillment[] => {\n  const nftRelatedFulfillments: MatchOrdersFulfillment[] = [];\n\n  // For the original order, we need to match everything offered with every consideration item\n  // on the original order that's set to go to the private listing recipient\n  privateListingOrder.parameters.offer.forEach((offerItem, offerIndex) => {\n    const considerationIndex =\n      privateListingOrder.parameters.consideration.findIndex(\n        (considerationItem) =>\n          considerationItem.itemType === offerItem.itemType &&\n          considerationItem.token === offerItem.token &&\n          considerationItem.identifierOrCriteria ===\n            offerItem.identifierOrCriteria,\n      );\n    if (considerationIndex === -1) {\n      throw new Error(\n        \"Could not find matching offer item in the consideration for private listing\",\n      );\n    }\n    nftRelatedFulfillments.push({\n      offerComponents: [\n        {\n          orderIndex: 0,\n          itemIndex: offerIndex,\n        },\n      ],\n      considerationComponents: [\n        {\n          orderIndex: 0,\n          itemIndex: considerationIndex,\n        },\n      ],\n    });\n  });\n\n  const currencyRelatedFulfillments: MatchOrdersFulfillment[] = [];\n\n  // For the original order, we need to match everything offered with every consideration item\n  // on the original order that's set to go to the private listing recipient\n  privateListingOrder.parameters.consideration.forEach(\n    (considerationItem, considerationIndex) => {\n      if (!isCurrencyItem(considerationItem)) {\n        return;\n      }\n      // We always match the offer item (index 0) of the counter order (index 1)\n      // with all of the payment items on the private listing\n      currencyRelatedFulfillments.push({\n        offerComponents: [\n          {\n            orderIndex: 1,\n            itemIndex: 0,\n          },\n        ],\n        considerationComponents: [\n          {\n            orderIndex: 0,\n            itemIndex: considerationIndex,\n          },\n        ],\n      });\n    },\n  );\n\n  return [...nftRelatedFulfillments, ...currencyRelatedFulfillments];\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"999192a2edf217fc14cf3fa1793af213749109c9","contentHash":"203d8f798df0460fff876bf2fdf915537c3f99c0fad9a952db45f6d8232d9121"},"/Users/rg/dev/opensea-js/src/orders/types.ts":{"path":"/Users/rg/dev/opensea-js/src/orders/types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":9,"column":54}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":37}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":22},"end":{"line":9,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":3},"end":{"line":9,"column":52}},"type":"binary-expr","locations":[{"start":{"line":9,"column":3},"end":{"line":9,"column":12}},{"start":{"line":9,"column":17},"end":{"line":9,"column":51}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/orders/types.ts","sources":["/Users/rg/dev/opensea-js/src/orders/types.ts"],"names":[],"mappings":";;;AAYA,IAAY,SAIX;AAJD,WAAY,SAAS;IACnB,4BAAe,CAAA;IACf,gCAAmB,CAAA;IACnB,kCAAqB,CAAA;AACvB,CAAC,EAJW,SAAS,yBAAT,SAAS,QAIpB","sourcesContent":["import { BasicOrderParametersStruct } from \"@opensea/seaport-js/lib/typechain-types/seaport/contracts/Seaport\";\nimport { AdvancedOrder, OrderWithCounter } from \"@opensea/seaport-js/lib/types\";\nimport { OpenSeaAccount, OrderSide } from \"../types\";\n\n// Protocol data\ntype OrderProtocolToProtocolData = {\n  seaport: OrderWithCounter;\n};\nexport type OrderProtocol = keyof OrderProtocolToProtocolData;\nexport type ProtocolData =\n  OrderProtocolToProtocolData[keyof OrderProtocolToProtocolData];\n\nexport enum OrderType {\n  BASIC = \"basic\",\n  ENGLISH = \"english\",\n  CRITERIA = \"criteria\",\n}\n\ntype OrderFee = {\n  account: OpenSeaAccount;\n  basisPoints: string;\n};\n\n/**\n * The latest OpenSea Order schema.\n */\nexport type OrderV2 = {\n  /** The date the order was created. */\n  createdDate: string;\n  /** The date the order was closed. */\n  closingDate: string | null;\n  /** The date the order was listed. Order can be created before the listing time. */\n  listingTime: number;\n  /** The date the order expires. */\n  expirationTime: number;\n  /** The hash of the order. */\n  orderHash: string | null;\n  /** The account that created the order. */\n  maker: OpenSeaAccount;\n  /** The account that filled the order. */\n  taker: OpenSeaAccount | null;\n  /** The protocol data for the order. Only 'seaport' is currently supported. */\n  protocolData: ProtocolData;\n  /** The contract address of the protocol. */\n  protocolAddress: string;\n  /** The current price of the order. */\n  currentPrice: bigint;\n  /** The maker fees for the order. */\n  makerFees: OrderFee[];\n  /** The taker fees for the order. */\n  takerFees: OrderFee[];\n  /** The side of the order. Listing/Offer */\n  side: OrderSide;\n  /** The type of the order. Basic/English/Criteria */\n  orderType: OrderType;\n  /** Whether or not the maker has cancelled the order. */\n  cancelled: boolean;\n  /** Whether or not the order is finalized. */\n  finalized: boolean;\n  /** Whether or not the order is marked invalid and therefore not fillable. */\n  markedInvalid: boolean;\n  /** The signature the order is signed with. */\n  clientSignature: string | null;\n  /** Amount of items left in the order which can be taken. */\n  remainingQuantity: number;\n};\n\nexport type FulfillmentDataResponse = {\n  protocol: string;\n  fulfillment_data: FulfillmentData;\n};\n\ntype FulfillmentData = {\n  transaction: Transaction;\n  orders: ProtocolData[];\n};\n\ntype Transaction = {\n  function: string;\n  chain: number;\n  to: string;\n  value: number;\n  input_data: {\n    orders: OrderWithCounter[] | AdvancedOrder[] | BasicOrderParametersStruct[];\n  };\n};\n\n// API query types\ntype OpenOrderOrderingOption = \"created_date\" | \"eth_price\";\ntype OrderByDirection = \"asc\" | \"desc\";\n\nexport type OrderAPIOptions = {\n  protocol?: OrderProtocol;\n  protocolAddress?: string;\n  side: OrderSide;\n};\n\nexport type OrdersQueryOptions = OrderAPIOptions & {\n  limit?: number;\n  cursor?: string;\n  next?: string;\n\n  paymentTokenAddress?: string;\n  maker?: string;\n  taker?: string;\n  owner?: string;\n  listedAfter?: number | string;\n  listedBefore?: number | string;\n  tokenId?: string;\n  tokenIds?: string[];\n  assetContractAddress?: string;\n  orderBy?: OpenOrderOrderingOption;\n  orderDirection?: OrderByDirection;\n  onlyEnglish?: boolean;\n};\n\nexport type SerializedOrderV2 = {\n  created_date: string;\n  closing_date: string | null;\n  listing_time: number;\n  expiration_time: number;\n  order_hash: string | null;\n  maker: unknown;\n  taker: unknown | null;\n  protocol_data: ProtocolData;\n  protocol_address: string;\n  current_price: string;\n  maker_fees: {\n    account: unknown;\n    basis_points: string;\n  }[];\n  taker_fees: {\n    account: unknown;\n    basis_points: string;\n  }[];\n  side: OrderSide;\n  order_type: OrderType;\n  cancelled: boolean;\n  finalized: boolean;\n  marked_invalid: boolean;\n  client_signature: string | null;\n  remaining_quantity: number;\n};\n\nexport type QueryCursors = {\n  next: string | null;\n  previous: string | null;\n};\n\nexport type OrdersQueryResponse = QueryCursors & {\n  orders: SerializedOrderV2[];\n};\n\nexport type OrdersPostQueryResponse = { order: SerializedOrderV2 };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"66b818bb01dd359f590a1245bc275296447a8a04","contentHash":"bda11ec31ca0136d550ac27a960d55903b54363e15382deff42910e5732a947c"},"/Users/rg/dev/opensea-js/test/utils/constants.ts":{"path":"/Users/rg/dev/opensea-js/test/utils/constants.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":236}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":14},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":14},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":16},"end":{"line":7,"column":42}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":54}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":54}},"9":{"start":{"line":11,"column":32},"end":{"line":11,"column":59}},"10":{"start":{"line":12,"column":32},"end":{"line":12,"column":67}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":134}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":138}},"13":{"start":{"line":15,"column":0},"end":{"line":18,"column":47}},"14":{"start":{"line":18,"column":13},"end":{"line":18,"column":45}},"15":{"start":{"line":19,"column":0},"end":{"line":22,"column":48}},"16":{"start":{"line":23,"column":0},"end":{"line":23,"column":59}},"17":{"start":{"line":24,"column":0},"end":{"line":24,"column":77}},"18":{"start":{"line":25,"column":0},"end":{"line":35,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":3},"end":{"line":18,"column":4}},"loc":{"start":{"line":18,"column":13},"end":{"line":18,"column":45}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":3},"end":{"line":22,"column":46}},"type":"cond-expr","locations":[{"start":{"line":22,"column":23},"end":{"line":22,"column":34}},{"start":{"line":22,"column":37},"end":{"line":22,"column":46}}],"line":22},"1":{"loc":{"start":{"line":23,"column":23},"end":{"line":23,"column":58}},"type":"binary-expr","locations":[{"start":{"line":23,"column":23},"end":{"line":23,"column":47}},{"start":{"line":23,"column":51},"end":{"line":23,"column":58}}],"line":23}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1},"f":{"0":0},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/test/utils/constants.ts","sources":["/Users/rg/dev/opensea-js/test/utils/constants.ts"],"names":[],"mappings":";;;AAAA,mCAAgC;AAChC,mCAAuC;AACvC,uCAA2C;AAC3C,2CAAwC;AAExC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;AAEd,QAAA,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;AAC9C,QAAA,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;AAE3D,MAAM,uBAAuB,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;AAC5D,MAAM,uBAAuB,GAAG,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;AAEvD,QAAA,oBAAoB,GAAG,IAAI,eAAM,CAAC,eAAe,CAC5D,wCAAwC,uBAAuB,EAAE,CAClE,CAAC;AACW,QAAA,oBAAoB,GAAG,IAAI,eAAM,CAAC,eAAe,CAC5D,4CAA4C,uBAAuB,EAAE,CACtE,CAAC;AAEW,QAAA,MAAM,GAAG,IAAI,gBAAU,CAClC,4BAAoB,EACpB;IACE,KAAK,EAAE,aAAK,CAAC,OAAO;IACpB,MAAM,EAAE,uBAAe;CACxB,EACD,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAC3C,CAAC;AAEW,QAAA,OAAO,GAAG,IAAI,gBAAU,CACnC;IACE,MAAM,EAAE,uBAAe;IACvB,KAAK,EAAE,aAAK,CAAC,OAAO;CACrB,EACD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAC5C,CAAC;AAEW,QAAA,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,OAAO,CAAC;AAEnD,QAAA,qBAAqB,GAChC,4CAA4C,CAAC;AAClC,QAAA,cAAc,GAAG;IAC5B,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;CACP,CAAC","sourcesContent":["import { ethers } from \"ethers\";\nimport { OpenSeaSDK } from \"../../src\";\nimport { OpenSeaAPI } from \"../../src/api\";\nimport { Chain } from \"../../src/types\";\n\nrequire(\"dotenv\").config();\n\nexport const OPENSEA_API_KEY = process.env.OPENSEA_API_KEY;\nexport const WALLET_PRIV_KEY = process.env.WALLET_PRIV_KEY;\n\nconst ALCHEMY_API_KEY_MAINNET = process.env.ALCHEMY_API_KEY;\nconst ALCHEMY_API_KEY_POLYGON = process.env.ALCHEMY_API_KEY_POLYGON;\n\nexport const RPC_PROVIDER_MAINNET = new ethers.JsonRpcProvider(\n  `https://eth-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY_MAINNET}`,\n);\nexport const RPC_PROVIDER_POLYGON = new ethers.JsonRpcProvider(\n  `https://polygon-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY_POLYGON}`,\n);\n\nexport const client = new OpenSeaSDK(\n  RPC_PROVIDER_MAINNET,\n  {\n    chain: Chain.Mainnet,\n    apiKey: OPENSEA_API_KEY,\n  },\n  (line) => console.info(`MAINNET: ${line}`),\n);\n\nexport const mainAPI = new OpenSeaAPI(\n  {\n    apiKey: OPENSEA_API_KEY,\n    chain: Chain.Mainnet,\n  },\n  process.env.DEBUG ? console.log : undefined,\n);\n\nexport const OFFER_AMOUNT = process.env.OFFER_AMOUNT ?? \"0.004\";\n\nexport const BAYC_CONTRACT_ADDRESS =\n  \"0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d\";\nexport const BAYC_TOKEN_IDS = [\n  \"9703\",\n  \"4049\",\n  \"5340\",\n  \"7354\",\n  \"2352\",\n  \"7112\",\n  \"3255\",\n  \"5532\",\n  \"4610\",\n];\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"75543cf6b291fac23222c2e504add07bca8ab5e5","contentHash":"c88556efb36457ead4e020636d6362a51e9720ac3df7ef297146db234dd9c715"},"/Users/rg/dev/opensea-js/src/index.ts":{"path":"/Users/rg/dev/opensea-js/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}},"17":{"start":{"line":18,"column":14},"end":{"line":18,"column":30}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":114}},"19":{"start":{"line":19,"column":84},"end":{"line":19,"column":108}},"20":{"start":{"line":20,"column":0},"end":{"line":20,"column":42}},"21":{"start":{"line":21,"column":0},"end":{"line":21,"column":46}},"22":{"start":{"line":22,"column":0},"end":{"line":22,"column":49}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":19,"column":70},"end":{"line":19,"column":71}},"loc":{"start":{"line":19,"column":82},"end":{"line":19,"column":110}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{},"end":{}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{},"end":{}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{},"end":{}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{},"end":{}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":8,"2":8,"3":8,"4":8,"5":8,"6":0,"7":8,"8":0,"9":0,"10":0,"11":1,"12":3,"13":8,"14":8,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"f":{"0":8,"1":0,"2":0,"3":3,"4":1},"b":{"0":[1,1,1],"1":[1,0],"2":[8,0],"3":[8,0],"4":[8,8],"5":[0,8],"6":[8,0],"7":[0,0],"8":[1,1,1],"9":[8,0],"10":[8,8]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/index.ts","sources":["/Users/rg/dev/opensea-js/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,+BAAmC;AAgBjC,2FAhBO,gBAAU,OAgBP;AAGZ,0CAAwB;AACxB,8CAA4B;AAC5B,iDAA+B","sourcesContent":["import { OpenSeaSDK } from \"./sdk\";\n\n/**\n * @example\n * // Example Setup\n * ```ts\n * import { ethers } from 'ethers'\n * import { OpenSeaSDK, Chain } from 'opensea-js'\n * const provider = new ethers.JsonRpcProvider('https://mainnet.infura.io')\n * const client = new OpenSeaSDK(provider, {\n *   chain: Chain.Mainnet\n * })\n * ```\n */\nexport {\n  // Main SDK export\n  OpenSeaSDK,\n};\n\nexport * from \"./types\";\nexport * from \"./api/types\";\nexport * from \"./orders/types\";\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"108498d6e380af37efe0f9247ee8480ed9d15dff","contentHash":"f77b499508401f422761c99bf308bc989995764a9acdc61111b2fb8772e4f5d9"},"/Users/rg/dev/opensea-js/src/api/index.ts":{"path":"/Users/rg/dev/opensea-js/src/api/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{},"end":{}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{},"end":{}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{},"end":{}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{},"end":{}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{"0":1,"1":1,"2":0,"3":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,0],"3":[1,0],"4":[1,1],"5":[0,1],"6":[1,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/src/api/index.ts","sources":["/Users/rg/dev/opensea-js/src/api/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,wCAAsB","sourcesContent":["export * from \"./api\";\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0cef3acd1957d2a12cafa1f18df308dc7d84646a","contentHash":"7737d647166c5017db19b2b41c9619307fdf101d3e1ee2ffc3264973ca6151a3"},"/Users/rg/dev/opensea-js/test/integration/getCollection.spec.ts":{"path":"/Users/rg/dev/opensea-js/test/integration/getCollection.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":46}},"5":{"start":{"line":7,"column":16},"end":{"line":7,"column":42}},"6":{"start":{"line":8,"column":0},"end":{"line":38,"column":3}},"7":{"start":{"line":9,"column":4},"end":{"line":16,"column":7}},"8":{"start":{"line":10,"column":21},"end":{"line":10,"column":36}},"9":{"start":{"line":11,"column":27},"end":{"line":11,"column":68}},"10":{"start":{"line":12,"column":8},"end":{"line":12,"column":72}},"11":{"start":{"line":13,"column":8},"end":{"line":13,"column":76}},"12":{"start":{"line":14,"column":8},"end":{"line":14,"column":90}},"13":{"start":{"line":15,"column":8},"end":{"line":15,"column":122}},"14":{"start":{"line":17,"column":4},"end":{"line":29,"column":7}},"15":{"start":{"line":18,"column":25},"end":{"line":18,"column":63}},"16":{"start":{"line":19,"column":38},"end":{"line":19,"column":46}},"17":{"start":{"line":20,"column":8},"end":{"line":20,"column":76}},"18":{"start":{"line":21,"column":8},"end":{"line":21,"column":80}},"19":{"start":{"line":22,"column":8},"end":{"line":22,"column":67}},"20":{"start":{"line":23,"column":26},"end":{"line":23,"column":106}},"21":{"start":{"line":24,"column":79},"end":{"line":24,"column":88}},"22":{"start":{"line":25,"column":8},"end":{"line":25,"column":87}},"23":{"start":{"line":26,"column":8},"end":{"line":26,"column":91}},"24":{"start":{"line":27,"column":8},"end":{"line":27,"column":78}},"25":{"start":{"line":28,"column":8},"end":{"line":28,"column":116}},"26":{"start":{"line":30,"column":4},"end":{"line":37,"column":7}},"27":{"start":{"line":31,"column":21},"end":{"line":31,"column":36}},"28":{"start":{"line":32,"column":22},"end":{"line":32,"column":68}},"29":{"start":{"line":33,"column":8},"end":{"line":33,"column":62}},"30":{"start":{"line":34,"column":8},"end":{"line":34,"column":76}},"31":{"start":{"line":35,"column":8},"end":{"line":35,"column":74}},"32":{"start":{"line":36,"column":8},"end":{"line":36,"column":70}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":41},"end":{"line":8,"column":42}},"loc":{"start":{"line":8,"column":47},"end":{"line":38,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":49},"end":{"line":9,"column":50}},"loc":{"start":{"line":9,"column":61},"end":{"line":16,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":41},"end":{"line":17,"column":42}},"loc":{"start":{"line":17,"column":53},"end":{"line":29,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":46},"end":{"line":30,"column":47}},"loc":{"start":{"line":30,"column":58},"end":{"line":37,"column":5}},"line":30}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1},"f":{"0":1,"1":1,"2":1,"3":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/test/integration/getCollection.spec.ts","sources":["/Users/rg/dev/opensea-js/test/integration/getCollection.spec.ts"],"names":[],"mappings":";;AAAA,+BAA8B;AAC9B,iCAAoC;AACpC,mCAA8B;AAC9B,+CAA8D;AAC9D,2CAAiD;AAEjD,IAAA,aAAK,EAAC,oBAAoB,EAAE,GAAG,EAAE;IAC/B,IAAA,YAAI,EAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,UAAU,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAErD,IAAA,aAAM,EAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;QACpD,IAAA,aAAM,EAAC,UAAU,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAC;QACxD,aAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,EAAE,+BAA+B,CAAC,CAAC;QAC3E,aAAM,CAAC,KAAK,CACV,UAAU,CAAC,cAAc,EACzB,sBAAc,CAAC,QAAQ,EACvB,gCAAgC,CACjC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;QAChD,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,QAAQ,CAAC;QACvC,IAAA,aAAM,EAAC,WAAW,CAAC,CAAC,CAAC,EAAE,+BAA+B,CAAC,CAAC;QACxD,IAAA,aAAM,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAC;QAC5D,IAAA,aAAM,EAAC,IAAI,EAAE,gCAAgC,CAAC,CAAC;QAE/C,MAAM,SAAS,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,cAAc,CAC5C,+BAAuB,CAAC,UAAU,CACnC,CAAC;QACF,MAAM,EAAE,WAAW,EAAE,sBAAsB,EAAE,IAAI,EAAE,eAAe,EAAE,GAClE,SAAS,CAAC;QACZ,IAAA,aAAM,EAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,+BAA+B,CAAC,CAAC;QACnE,IAAA,aAAM,EAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,8BAA8B,CAAC,CAAC;QACvE,IAAA,aAAM,EAAC,eAAe,EAAE,gCAAgC,CAAC,CAAC;QAE1D,IAAA,aAAM,EACJ,sBAAsB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EACrD,gCAAgC,CACjC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,KAAK,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAErD,IAAA,aAAM,EAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QAC1C,IAAA,aAAM,EAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC;QACxD,IAAA,aAAM,EAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QACtD,IAAA,aAAM,EAAC,KAAK,CAAC,SAAS,EAAE,wBAAwB,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport { sdk } from \"./setup\";\nimport { CollectionOrderByOption } from \"../../src/api/types\";\nimport { SafelistStatus } from \"../../src/types\";\n\nsuite(\"SDK: getCollection\", () => {\n  test(\"Get Verified Collection\", async () => {\n    const slug = \"cool-cats-nft\";\n    const collection = await sdk.api.getCollection(slug);\n\n    assert(collection, \"Collection should not be null\");\n    assert(collection.name, \"Collection name should exist\");\n    assert.equal(collection.collection, slug, \"Collection slug should match.\");\n    assert.equal(\n      collection.safelistStatus,\n      SafelistStatus.VERIFIED,\n      \"Collection should be verified.\",\n    );\n  });\n\n  test(\"Get Collections\", async () => {\n    const response = await sdk.api.getCollections();\n    const { collections, next } = response;\n    assert(collections[0], \"Collection should not be null\");\n    assert(collections[0].name, \"Collection name should exist\");\n    assert(next, \"Next cursor should be included\");\n\n    const response2 = await sdk.api.getCollections(\n      CollectionOrderByOption.MARKET_CAP,\n    );\n    const { collections: collectionsByMarketCap, next: nextByMarketCap } =\n      response2;\n    assert(collectionsByMarketCap[0], \"Collection should not be null\");\n    assert(collectionsByMarketCap[0].name, \"Collection name should exist\");\n    assert(nextByMarketCap, \"Next cursor should be included\");\n\n    assert(\n      collectionsByMarketCap[0].name != collections[0].name,\n      \"Collection order should differ\",\n    );\n  });\n\n  test(\"Get Collection Stats\", async () => {\n    const slug = \"cool-cats-nft\";\n    const stats = await sdk.api.getCollectionStats(slug);\n\n    assert(stats, \"Stats should not be null\");\n    assert(stats.total.volume, \"Volume should not be null\");\n    assert(stats.total.sales, \"Sales should not be null\");\n    assert(stats.intervals, \"Intervals should exist\");\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0214f47f5661046f0a17337bd96fe804fce560eb","contentHash":"89cf00539de7ee52a1fdff99de37ab4e5561184c21edef6af420a7946ee89e7e"},"/Users/rg/dev/opensea-js/test/integration/getCollectionOffers.spec.ts":{"path":"/Users/rg/dev/opensea-js/test/integration/getCollectionOffers.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":48}},"5":{"start":{"line":7,"column":0},"end":{"line":23,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":22,"column":7}},"7":{"start":{"line":9,"column":21},"end":{"line":9,"column":36}},"8":{"start":{"line":10,"column":25},"end":{"line":10,"column":72}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":68}},"10":{"start":{"line":12,"column":8},"end":{"line":12,"column":84}},"11":{"start":{"line":13,"column":8},"end":{"line":13,"column":96}},"12":{"start":{"line":14,"column":22},"end":{"line":14,"column":40}},"13":{"start":{"line":15,"column":8},"end":{"line":15,"column":78}},"14":{"start":{"line":16,"column":23},"end":{"line":16,"column":55}},"15":{"start":{"line":17,"column":8},"end":{"line":17,"column":66}},"16":{"start":{"line":18,"column":32},"end":{"line":18,"column":64}},"17":{"start":{"line":19,"column":8},"end":{"line":19,"column":81}},"18":{"start":{"line":20,"column":32},"end":{"line":20,"column":76}},"19":{"start":{"line":21,"column":8},"end":{"line":21,"column":84}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":47},"end":{"line":7,"column":48}},"loc":{"start":{"line":7,"column":53},"end":{"line":23,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":47},"end":{"line":8,"column":48}},"loc":{"start":{"line":8,"column":59},"end":{"line":22,"column":5}},"line":8}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/test/integration/getCollectionOffers.spec.ts","sources":["/Users/rg/dev/opensea-js/test/integration/getCollectionOffers.spec.ts"],"names":[],"mappings":";;AAAA,+BAA8B;AAC9B,iCAAoC;AACpC,mCAA8B;AAC9B,iDAAuD;AAEvD,IAAA,aAAK,EAAC,0BAA0B,EAAE,GAAG,EAAE;IACrC,IAAA,YAAI,EAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAEzD,IAAA,aAAM,EAAC,QAAQ,EAAE,6BAA6B,CAAC,CAAC;QAChD,IAAA,aAAM,EAAC,QAAQ,CAAC,MAAM,EAAE,sCAAsC,CAAC,CAAC;QAChE,IAAA,aAAM,EAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,uCAAuC,CAAC,CAAC;QAC5E,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjC,IAAA,aAAM,EAAC,KAAK,CAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;QAC1D,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC;QAChD,IAAA,aAAM,EAAC,MAAM,EAAE,6BAA6B,CAAC,CAAC;QAE9C,MAAM,eAAe,GAAG,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC;QACzD,IAAA,aAAM,EAAC,eAAe,EAAE,mCAAmC,CAAC,CAAC;QAE7D,MAAM,eAAe,GAAG,IAAA,sBAAc,EAAC,eAAe,CAAC,CAAC;QACxD,IAAA,aAAM,EAAC,eAAe,CAAC,CAAC,CAAC,EAAE,mCAAmC,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport { sdk } from \"./setup\";\nimport { decodeTokenIds } from \"../../src/utils/utils\";\n\nsuite(\"SDK: getCollectionOffers\", () => {\n  test(\"Get Collection Offers\", async () => {\n    const slug = \"cool-cats-nft\";\n    const response = await sdk.api.getCollectionOffers(slug);\n\n    assert(response, \"Response should not be null\");\n    assert(response.offers, \"Collection offers should not be null\");\n    assert(response.offers.length > 0, \"Collection offers should not be empty\");\n    const offer = response.offers[0];\n    assert(offer.order_hash, \"Order hash should not be null\");\n    const tokens = offer.criteria.encoded_token_ids;\n    assert(tokens, \"Criteria should not be null\");\n\n    const encodedTokenIds = offer.criteria.encoded_token_ids;\n    assert(encodedTokenIds, \"Encoded tokens should not be null\");\n\n    const decodedTokenIds = decodeTokenIds(encodedTokenIds);\n    assert(decodedTokenIds[0], \"Decoded tokens should not be null\");\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"92b210dedead33d79a9596faa789e43ff07d66ac","contentHash":"bf3c89d7ccd6d70ad77a5d1dcf118f38c7c390c6acfce371749f83d1234bc35d"},"/Users/rg/dev/opensea-js/test/integration/getListingsAndOffers.spec.ts":{"path":"/Users/rg/dev/opensea-js/test/integration/getListingsAndOffers.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":0},"end":{"line":16,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":15,"column":7}},"6":{"start":{"line":8,"column":21},"end":{"line":8,"column":36}},"7":{"start":{"line":9,"column":25},"end":{"line":9,"column":65}},"8":{"start":{"line":10,"column":8},"end":{"line":10,"column":68}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":91}},"10":{"start":{"line":12,"column":8},"end":{"line":12,"column":81}},"11":{"start":{"line":13,"column":8},"end":{"line":13,"column":103}},"12":{"start":{"line":14,"column":8},"end":{"line":14,"column":97}},"13":{"start":{"line":17,"column":0},"end":{"line":33,"column":3}},"14":{"start":{"line":18,"column":4},"end":{"line":32,"column":7}},"15":{"start":{"line":19,"column":21},"end":{"line":19,"column":36}},"16":{"start":{"line":20,"column":25},"end":{"line":20,"column":67}},"17":{"start":{"line":21,"column":8},"end":{"line":21,"column":68}},"18":{"start":{"line":22,"column":8},"end":{"line":22,"column":93}},"19":{"start":{"line":23,"column":8},"end":{"line":23,"column":83}},"20":{"start":{"line":24,"column":8},"end":{"line":24,"column":105}},"21":{"start":{"line":25,"column":8},"end":{"line":25,"column":99}},"22":{"start":{"line":26,"column":8},"end":{"line":26,"column":85}},"23":{"start":{"line":28,"column":30},"end":{"line":28,"column":98}},"24":{"start":{"line":29,"column":8},"end":{"line":29,"column":73}},"25":{"start":{"line":30,"column":8},"end":{"line":30,"column":149}},"26":{"start":{"line":31,"column":8},"end":{"line":31,"column":95}},"27":{"start":{"line":34,"column":0},"end":{"line":48,"column":3}},"28":{"start":{"line":35,"column":4},"end":{"line":47,"column":7}},"29":{"start":{"line":36,"column":21},"end":{"line":36,"column":36}},"30":{"start":{"line":37,"column":24},"end":{"line":37,"column":25}},"31":{"start":{"line":38,"column":25},"end":{"line":38,"column":74}},"32":{"start":{"line":39,"column":8},"end":{"line":39,"column":87}},"33":{"start":{"line":40,"column":8},"end":{"line":40,"column":87}},"34":{"start":{"line":41,"column":8},"end":{"line":41,"column":87}},"35":{"start":{"line":42,"column":8},"end":{"line":42,"column":68}},"36":{"start":{"line":43,"column":8},"end":{"line":43,"column":81}},"37":{"start":{"line":44,"column":8},"end":{"line":44,"column":71}},"38":{"start":{"line":45,"column":8},"end":{"line":45,"column":93}},"39":{"start":{"line":46,"column":8},"end":{"line":46,"column":87}},"40":{"start":{"line":49,"column":0},"end":{"line":64,"column":3}},"41":{"start":{"line":50,"column":4},"end":{"line":63,"column":7}},"42":{"start":{"line":51,"column":21},"end":{"line":51,"column":36}},"43":{"start":{"line":52,"column":29},"end":{"line":52,"column":71}},"44":{"start":{"line":53,"column":24},"end":{"line":53,"column":35}},"45":{"start":{"line":54,"column":24},"end":{"line":54,"column":86}},"46":{"start":{"line":55,"column":25},"end":{"line":55,"column":76}},"47":{"start":{"line":56,"column":8},"end":{"line":56,"column":68}},"48":{"start":{"line":57,"column":8},"end":{"line":57,"column":81}},"49":{"start":{"line":58,"column":8},"end":{"line":58,"column":71}},"50":{"start":{"line":59,"column":8},"end":{"line":59,"column":93}},"51":{"start":{"line":60,"column":8},"end":{"line":60,"column":87}},"52":{"start":{"line":61,"column":8},"end":{"line":61,"column":98}},"53":{"start":{"line":62,"column":8},"end":{"line":62,"column":116}},"54":{"start":{"line":65,"column":0},"end":{"line":72,"column":3}},"55":{"start":{"line":66,"column":4},"end":{"line":71,"column":7}},"56":{"start":{"line":67,"column":21},"end":{"line":67,"column":36}},"57":{"start":{"line":68,"column":25},"end":{"line":68,"column":68}},"58":{"start":{"line":69,"column":8},"end":{"line":69,"column":68}},"59":{"start":{"line":70,"column":8},"end":{"line":70,"column":77}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":40},"end":{"line":6,"column":41}},"loc":{"start":{"line":6,"column":46},"end":{"line":16,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":40},"end":{"line":7,"column":41}},"loc":{"start":{"line":7,"column":52},"end":{"line":15,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":42},"end":{"line":17,"column":43}},"loc":{"start":{"line":17,"column":48},"end":{"line":33,"column":1}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":42},"end":{"line":18,"column":43}},"loc":{"start":{"line":18,"column":54},"end":{"line":32,"column":5}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":40},"end":{"line":34,"column":41}},"loc":{"start":{"line":34,"column":46},"end":{"line":48,"column":1}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":35,"column":40},"end":{"line":35,"column":41}},"loc":{"start":{"line":35,"column":52},"end":{"line":47,"column":5}},"line":35},"6":{"name":"(anonymous_6)","decl":{"start":{"line":49,"column":42},"end":{"line":49,"column":43}},"loc":{"start":{"line":49,"column":48},"end":{"line":64,"column":1}},"line":49},"7":{"name":"(anonymous_7)","decl":{"start":{"line":50,"column":42},"end":{"line":50,"column":43}},"loc":{"start":{"line":50,"column":54},"end":{"line":63,"column":5}},"line":50},"8":{"name":"(anonymous_8)","decl":{"start":{"line":65,"column":43},"end":{"line":65,"column":44}},"loc":{"start":{"line":65,"column":49},"end":{"line":72,"column":1}},"line":65},"9":{"name":"(anonymous_9)","decl":{"start":{"line":66,"column":42},"end":{"line":66,"column":43}},"loc":{"start":{"line":66,"column":54},"end":{"line":71,"column":5}},"line":66}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/test/integration/getListingsAndOffers.spec.ts","sources":["/Users/rg/dev/opensea-js/test/integration/getListingsAndOffers.spec.ts"],"names":[],"mappings":";;AAAA,+BAA8B;AAC9B,iCAAoC;AACpC,mCAA8B;AAE9B,IAAA,aAAK,EAAC,mBAAmB,EAAE,GAAG,EAAE;IAC9B,IAAA,YAAI,EAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAElD,IAAA,aAAM,EAAC,QAAQ,EAAE,6BAA6B,CAAC,CAAC;QAChD,IAAA,aAAM,EAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;QACvE,IAAA,aAAM,EAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QAC7D,IAAA,aAAM,EACJ,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,gBAAgB,EACnC,qCAAqC,CACtC,CAAC;QACF,IAAA,aAAM,EACJ,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,EAChC,kCAAkC,CACnC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAA,aAAK,EAAC,qBAAqB,EAAE,GAAG,EAAE;IAChC,IAAA,YAAI,EAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAEpD,IAAA,aAAM,EAAC,QAAQ,EAAE,6BAA6B,CAAC,CAAC;QAChD,IAAA,aAAM,EAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;QACzE,IAAA,aAAM,EAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QAC/D,IAAA,aAAM,EACJ,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,EACrC,qCAAqC,CACtC,CAAC;QACF,IAAA,aAAM,EACJ,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAClC,kCAAkC,CACnC,CAAC;QACF,IAAA,aAAM,EAAC,QAAQ,CAAC,IAAI,EAAE,yCAAyC,CAAC,CAAC;QAEjE,uCAAuC;QACvC,MAAM,aAAa,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,cAAc,CAChD,IAAI,EACJ,SAAS,EACT,QAAQ,CAAC,IAAI,CACd,CAAC;QACF,IAAA,aAAM,EAAC,aAAa,EAAE,6BAA6B,CAAC,CAAC;QACrD,aAAM,CAAC,YAAY,CACjB,QAAQ,CAAC,QAAQ,EACjB,aAAa,CAAC,QAAQ,EACtB,qEAAqE,CACtE,CAAC;QACF,aAAM,CAAC,QAAQ,CACb,QAAQ,CAAC,IAAI,EACb,aAAa,CAAC,IAAI,EAClB,2BAA2B,CAC5B,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAA,aAAK,EAAC,mBAAmB,EAAE,GAAG,EAAE;IAC9B,IAAA,YAAI,EAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,OAAO,GAAG,CAAC,CAAC;QAClB,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAE3D,aAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,6BAA6B,CAAC,CAAC;QACxE,aAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,6BAA6B,CAAC,CAAC;QACxE,aAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,gCAAgC,CAAC,CAAC;QAExE,IAAA,aAAM,EAAC,QAAQ,EAAE,6BAA6B,CAAC,CAAC;QAChD,IAAA,aAAM,EAAC,QAAQ,CAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;QAC7D,IAAA,aAAM,EAAC,QAAQ,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QACnD,IAAA,aAAM,EAAC,QAAQ,CAAC,gBAAgB,EAAE,qCAAqC,CAAC,CAAC;QACzE,IAAA,aAAM,EAAC,QAAQ,CAAC,aAAa,EAAE,kCAAkC,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAA,aAAK,EAAC,qBAAqB,EAAE,GAAG,EAAE;IAChC,IAAA,YAAI,EAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACxD,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC5B,MAAM,OAAO,GACX,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC;QACjE,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAE7D,IAAA,aAAM,EAAC,QAAQ,EAAE,6BAA6B,CAAC,CAAC;QAChD,IAAA,aAAM,EAAC,QAAQ,CAAC,UAAU,EAAE,+BAA+B,CAAC,CAAC;QAC7D,IAAA,aAAM,EAAC,QAAQ,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QACnD,IAAA,aAAM,EAAC,QAAQ,CAAC,gBAAgB,EAAE,qCAAqC,CAAC,CAAC;QACzE,IAAA,aAAM,EAAC,QAAQ,CAAC,aAAa,EAAE,kCAAkC,CAAC,CAAC;QACnE,aAAM,CAAC,KAAK,CACV,OAAO,CAAC,UAAU,EAClB,QAAQ,CAAC,UAAU,EACnB,2BAA2B,CAC5B,CAAC;QACF,aAAM,CAAC,KAAK,CACV,OAAO,CAAC,gBAAgB,EACxB,QAAQ,CAAC,gBAAgB,EACzB,iCAAiC,CAClC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,IAAA,aAAK,EAAC,sBAAsB,EAAE,GAAG,EAAE;IACjC,IAAA,YAAI,EAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,IAAI,GAAG,eAAe,CAAC;QAC7B,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAErD,IAAA,aAAM,EAAC,QAAQ,EAAE,6BAA6B,CAAC,CAAC;QAChD,IAAA,aAAM,EAAC,QAAQ,CAAC,QAAQ,EAAE,6BAA6B,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport { sdk } from \"./setup\";\n\nsuite(\"SDK: getAllOffers\", () => {\n  test(\"Get All Offers\", async () => {\n    const slug = \"cool-cats-nft\";\n    const response = await sdk.api.getAllOffers(slug);\n\n    assert(response, \"Response should not be null\");\n    assert(response.offers[0].order_hash, \"Order hash should not be null\");\n    assert(response.offers[0].chain, \"Chain should not be null\");\n    assert(\n      response.offers[0].protocol_address,\n      \"Protocol address should not be null\",\n    );\n    assert(\n      response.offers[0].protocol_data,\n      \"Protocol data should not be null\",\n    );\n  });\n});\n\nsuite(\"SDK: getAllListings\", () => {\n  test(\"Get All Listings\", async () => {\n    const slug = \"cool-cats-nft\";\n    const response = await sdk.api.getAllListings(slug);\n\n    assert(response, \"Response should not be null\");\n    assert(response.listings[0].order_hash, \"Order hash should not be null\");\n    assert(response.listings[0].chain, \"Chain should not be null\");\n    assert(\n      response.listings[0].protocol_address,\n      \"Protocol address should not be null\",\n    );\n    assert(\n      response.listings[0].protocol_data,\n      \"Protocol data should not be null\",\n    );\n    assert(response.next, \"Cursor for next page should not be null\");\n\n    // Should get the next page of listings\n    const responsePage2 = await sdk.api.getAllListings(\n      slug,\n      undefined,\n      response.next,\n    );\n    assert(responsePage2, \"Response should not be null\");\n    assert.notDeepEqual(\n      response.listings,\n      responsePage2.listings,\n      \"Response of second page should not equal the response of first page\",\n    );\n    assert.notEqual(\n      response.next,\n      responsePage2.next,\n      \"Next cursor should change\",\n    );\n  });\n});\n\nsuite(\"SDK: getBestOffer\", () => {\n  test(\"Get Best Offer\", async () => {\n    const slug = \"cool-cats-nft\";\n    const tokenId = 1;\n    const response = await sdk.api.getBestOffer(slug, tokenId);\n\n    assert.isString(response.price.currency, \"Currency should be a string\");\n    assert.isNumber(response.price.decimals, \"Decimals should be a number\");\n    assert.isString(response.price.value, \"Price value should be a string\");\n\n    assert(response, \"Response should not be null\");\n    assert(response.order_hash, \"Order hash should not be null\");\n    assert(response.chain, \"Chain should not be null\");\n    assert(response.protocol_address, \"Protocol address should not be null\");\n    assert(response.protocol_data, \"Protocol data should not be null\");\n  });\n});\n\nsuite(\"SDK: getBestListing\", () => {\n  test(\"Get Best Listing\", async () => {\n    const slug = \"cool-cats-nft\";\n    const { listings } = await sdk.api.getAllListings(slug);\n    const listing = listings[0];\n    const tokenId =\n      listing.protocol_data.parameters.offer[0].identifierOrCriteria;\n    const response = await sdk.api.getBestListing(slug, tokenId);\n\n    assert(response, \"Response should not be null\");\n    assert(response.order_hash, \"Order hash should not be null\");\n    assert(response.chain, \"Chain should not be null\");\n    assert(response.protocol_address, \"Protocol address should not be null\");\n    assert(response.protocol_data, \"Protocol data should not be null\");\n    assert.equal(\n      listing.order_hash,\n      response.order_hash,\n      \"Order hashes should match\",\n    );\n    assert.equal(\n      listing.protocol_address,\n      response.protocol_address,\n      \"Protocol addresses should match\",\n    );\n  });\n});\n\nsuite(\"SDK: getBestListings\", () => {\n  test(\"Get Best Listing\", async () => {\n    const slug = \"cool-cats-nft\";\n    const response = await sdk.api.getBestListings(slug);\n\n    assert(response, \"Response should not be null\");\n    assert(response.listings, \"Listings should not be null\");\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6c7baf54dfc0fe4c541d3865807c81bc6952cd27","contentHash":"2624919cda8928f6ab449a7ee5498a22e480d18299d8841e0ca8873b7287b53c"},"/Users/rg/dev/opensea-js/test/integration/getNFTs.spec.ts":{"path":"/Users/rg/dev/opensea-js/test/integration/getNFTs.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":42}},"5":{"start":{"line":7,"column":0},"end":{"line":44,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":13,"column":7}},"7":{"start":{"line":9,"column":25},"end":{"line":9,"column":85}},"8":{"start":{"line":10,"column":8},"end":{"line":10,"column":63}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":89}},"10":{"start":{"line":12,"column":8},"end":{"line":12,"column":80}},"11":{"start":{"line":14,"column":4},"end":{"line":20,"column":7}},"12":{"start":{"line":15,"column":29},"end":{"line":15,"column":73}},"13":{"start":{"line":16,"column":25},"end":{"line":16,"column":123}},"14":{"start":{"line":17,"column":8},"end":{"line":17,"column":63}},"15":{"start":{"line":18,"column":8},"end":{"line":18,"column":89}},"16":{"start":{"line":19,"column":8},"end":{"line":19,"column":80}},"17":{"start":{"line":21,"column":4},"end":{"line":27,"column":7}},"18":{"start":{"line":22,"column":24},"end":{"line":22,"column":68}},"19":{"start":{"line":23,"column":25},"end":{"line":23,"column":72}},"20":{"start":{"line":24,"column":8},"end":{"line":24,"column":63}},"21":{"start":{"line":25,"column":8},"end":{"line":25,"column":89}},"22":{"start":{"line":26,"column":8},"end":{"line":26,"column":80}},"23":{"start":{"line":28,"column":4},"end":{"line":35,"column":7}},"24":{"start":{"line":29,"column":29},"end":{"line":29,"column":73}},"25":{"start":{"line":30,"column":24},"end":{"line":30,"column":27}},"26":{"start":{"line":31,"column":25},"end":{"line":31,"column":99}},"27":{"start":{"line":32,"column":8},"end":{"line":32,"column":73}},"28":{"start":{"line":33,"column":8},"end":{"line":33,"column":88}},"29":{"start":{"line":34,"column":8},"end":{"line":34,"column":86}},"30":{"start":{"line":36,"column":4},"end":{"line":43,"column":7}},"31":{"start":{"line":37,"column":29},"end":{"line":37,"column":73}},"32":{"start":{"line":38,"column":27},"end":{"line":38,"column":30}},"33":{"start":{"line":39,"column":25},"end":{"line":39,"column":114}},"34":{"start":{"line":40,"column":8},"end":{"line":40,"column":63}},"35":{"start":{"line":41,"column":8},"end":{"line":41,"column":76}},"36":{"start":{"line":42,"column":8},"end":{"line":42,"column":74}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":32},"end":{"line":7,"column":33}},"loc":{"start":{"line":7,"column":38},"end":{"line":44,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":48},"end":{"line":8,"column":49}},"loc":{"start":{"line":8,"column":60},"end":{"line":13,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":46},"end":{"line":14,"column":47}},"loc":{"start":{"line":14,"column":58},"end":{"line":20,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":45},"end":{"line":21,"column":46}},"loc":{"start":{"line":21,"column":57},"end":{"line":27,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":33},"end":{"line":28,"column":34}},"loc":{"start":{"line":28,"column":45},"end":{"line":35,"column":5}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":36,"column":37},"end":{"line":36,"column":38}},"loc":{"start":{"line":36,"column":49},"end":{"line":43,"column":5}},"line":36}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/test/integration/getNFTs.spec.ts","sources":["/Users/rg/dev/opensea-js/test/integration/getNFTs.spec.ts"],"names":[],"mappings":";;AAAA,+BAAsC;AACtC,iCAAoC;AACpC,mCAA8B;AAC9B,2CAAwC;AAExC,IAAA,aAAK,EAAC,WAAW,EAAE,GAAG,EAAE;IACtB,IAAA,YAAI,EAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACxC,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC;QACtE,IAAA,aAAM,EAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;QAC3C,aAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,iCAAiC,CAAC,CAAC;QAC1E,IAAA,aAAM,EAAC,QAAQ,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,YAAY,GAAG,4CAA4C,CAAC,CAAC,YAAY;QAC/E,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,iBAAiB,CAC9C,YAAY,EACZ,SAAS,EACT,SAAS,EACT,aAAK,CAAC,OAAO,CACd,CAAC;QACF,IAAA,aAAM,EAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;QAC3C,aAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,iCAAiC,CAAC,CAAC;QAC1E,IAAA,aAAM,EAAC,QAAQ,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACrC,MAAM,OAAO,GAAG,4CAA4C,CAAC;QAC7D,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACzD,IAAA,aAAM,EAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;QAC3C,aAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,iCAAiC,CAAC,CAAC;QAC1E,IAAA,aAAM,EAAC,QAAQ,CAAC,IAAI,EAAE,oCAAoC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACzB,MAAM,YAAY,GAAG,4CAA4C,CAAC,CAAC,YAAY;QAC/E,MAAM,OAAO,GAAG,GAAG,CAAC;QACpB,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,EAAE,aAAK,CAAC,OAAO,CAAC,CAAC;QAC5E,IAAA,aAAM,EAAC,QAAQ,CAAC,GAAG,EAAE,8BAA8B,CAAC,CAAC;QACrD,aAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,EAAE,qBAAqB,CAAC,CAAC;QACzE,aAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,sBAAsB,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;IAEH,IAAA,YAAI,EAAC,aAAa,EAAE,KAAK,IAAI,EAAE;QAC7B,MAAM,YAAY,GAAG,4CAA4C,CAAC,CAAC,YAAY;QAC/E,MAAM,UAAU,GAAG,GAAG,CAAC;QACvB,MAAM,QAAQ,GAAG,MAAM,WAAG,CAAC,GAAG,CAAC,kBAAkB,CAC/C,YAAY,EACZ,UAAU,EACV,aAAK,CAAC,OAAO,CACd,CAAC;QACF,IAAA,aAAM,EAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;QAC3C,IAAA,aAAM,EAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,YAAY,EAAE,CAAC,CAAC;QACxD,IAAA,aAAM,EAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,UAAU,EAAE,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert, expect } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport { sdk } from \"./setup\";\nimport { Chain } from \"../../src/types\";\n\nsuite(\"SDK: NFTs\", () => {\n  test(\"Get NFTs By Collection\", async () => {\n    const response = await sdk.api.getNFTsByCollection(\"proof-moonbirds\");\n    assert(response, \"Response should exist.\");\n    assert.equal(response.nfts.length, 50, \"Response should include 50 NFTs\");\n    assert(response.next, \"Response should have a next cursor\");\n  });\n\n  test(\"Get NFTs By Contract\", async () => {\n    const tokenAddress = \"0x4768cbf202f365fbf704b9b9d397551a0443909b\"; // Roo Troop\n    const response = await sdk.api.getNFTsByContract(\n      tokenAddress,\n      undefined,\n      undefined,\n      Chain.Polygon,\n    );\n    assert(response, \"Response should exist.\");\n    assert.equal(response.nfts.length, 50, \"Response should include 50 NFTs\");\n    assert(response.next, \"Response should have a next cursor\");\n  });\n\n  test(\"Get NFTs By Account\", async () => {\n    const address = \"0xfBa662e1a8e91a350702cF3b87D0C2d2Fb4BA57F\";\n    const response = await sdk.api.getNFTsByAccount(address);\n    assert(response, \"Response should exist.\");\n    assert.equal(response.nfts.length, 50, \"Response should include 50 NFTs\");\n    assert(response.next, \"Response should have a next cursor\");\n  });\n\n  test(\"Get NFT\", async () => {\n    const tokenAddress = \"0x4768cbf202f365fbf704b9b9d397551a0443909b\"; // Roo Troop\n    const tokenId = \"2\";\n    const response = await sdk.api.getNFT(tokenAddress, tokenId, Chain.Polygon);\n    assert(response.nft, \"Response should contain nft.\");\n    assert.equal(response.nft.contract, tokenAddress, \"The address matches\");\n    assert.equal(response.nft.identifier, tokenId, \"The token id matches\");\n  });\n\n  test(\"Refresh NFT\", async () => {\n    const tokenAddress = \"0x4768cbf202f365fbf704b9b9d397551a0443909b\"; // Roo Troop\n    const identifier = \"3\";\n    const response = await sdk.api.refreshNFTMetadata(\n      tokenAddress,\n      identifier,\n      Chain.Polygon,\n    );\n    assert(response, \"Response should exist.\");\n    expect(response).to.contain(`contract ${tokenAddress}`);\n    expect(response).to.contain(`token_id ${identifier}`);\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f1402ceee4591cd156df328c8bcfcc812995d7bb","contentHash":"895d3c8d4294933c5a4a6773724aea48c3c8cb14ed3e70a20f6dca5c3db22bba"},"/Users/rg/dev/opensea-js/test/integration/postOrder.spec.ts":{"path":"/Users/rg/dev/opensea-js/test/integration/postOrder.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":50}},"5":{"start":{"line":7,"column":16},"end":{"line":7,"column":42}},"6":{"start":{"line":8,"column":20},"end":{"line":8,"column":49}},"7":{"start":{"line":9,"column":16},"end":{"line":9,"column":41}},"8":{"start":{"line":10,"column":17},"end":{"line":10,"column":53}},"9":{"start":{"line":11,"column":23},"end":{"line":11,"column":31}},"10":{"start":{"line":12,"column":0},"end":{"line":157,"column":3}},"11":{"start":{"line":13,"column":4},"end":{"line":27,"column":7}},"12":{"start":{"line":14,"column":22},"end":{"line":22,"column":9}},"13":{"start":{"line":23,"column":22},"end":{"line":23,"column":58}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":45}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":74}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":102}},"17":{"start":{"line":28,"column":4},"end":{"line":40,"column":7}},"18":{"start":{"line":29,"column":22},"end":{"line":37,"column":9}},"19":{"start":{"line":38,"column":22},"end":{"line":38,"column":58}},"20":{"start":{"line":39,"column":8},"end":{"line":39,"column":45}},"21":{"start":{"line":41,"column":4},"end":{"line":56,"column":7}},"22":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"23":{"start":{"line":43,"column":12},"end":{"line":43,"column":24}},"24":{"start":{"line":45,"column":24},"end":{"line":53,"column":9}},"25":{"start":{"line":54,"column":22},"end":{"line":54,"column":62}},"26":{"start":{"line":55,"column":8},"end":{"line":55,"column":45}},"27":{"start":{"line":57,"column":4},"end":{"line":82,"column":7}},"28":{"start":{"line":59,"column":8},"end":{"line":59,"column":20}},"29":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"30":{"start":{"line":61,"column":12},"end":{"line":61,"column":24}},"31":{"start":{"line":63,"column":24},"end":{"line":72,"column":9}},"32":{"start":{"line":73,"column":8},"end":{"line":81,"column":9}},"33":{"start":{"line":74,"column":26},"end":{"line":74,"column":66}},"34":{"start":{"line":75,"column":12},"end":{"line":75,"column":49}},"35":{"start":{"line":76,"column":12},"end":{"line":76,"column":133}},"36":{"start":{"line":80,"column":12},"end":{"line":80,"column":153}},"37":{"start":{"line":83,"column":4},"end":{"line":96,"column":7}},"38":{"start":{"line":84,"column":24},"end":{"line":93,"column":9}},"39":{"start":{"line":94,"column":22},"end":{"line":94,"column":69}},"40":{"start":{"line":95,"column":8},"end":{"line":95,"column":45}},"41":{"start":{"line":97,"column":4},"end":{"line":116,"column":7}},"42":{"start":{"line":98,"column":27},"end":{"line":98,"column":79}},"43":{"start":{"line":99,"column":36},"end":{"line":99,"column":82}},"44":{"start":{"line":100,"column":33},"end":{"line":107,"column":9}},"45":{"start":{"line":108,"column":30},"end":{"line":108,"column":87}},"46":{"start":{"line":109,"column":8},"end":{"line":109,"column":92}},"47":{"start":{"line":110,"column":8},"end":{"line":110,"column":89}},"48":{"start":{"line":111,"column":8},"end":{"line":111,"column":86}},"49":{"start":{"line":113,"column":49},"end":{"line":113,"column":62}},"50":{"start":{"line":114,"column":31},"end":{"line":114,"column":98}},"51":{"start":{"line":115,"column":8},"end":{"line":115,"column":110}},"52":{"start":{"line":117,"column":4},"end":{"line":136,"column":7}},"53":{"start":{"line":118,"column":27},"end":{"line":118,"column":88}},"54":{"start":{"line":119,"column":36},"end":{"line":119,"column":89}},"55":{"start":{"line":120,"column":33},"end":{"line":127,"column":9}},"56":{"start":{"line":128,"column":30},"end":{"line":128,"column":94}},"57":{"start":{"line":129,"column":8},"end":{"line":129,"column":92}},"58":{"start":{"line":130,"column":8},"end":{"line":130,"column":89}},"59":{"start":{"line":131,"column":8},"end":{"line":131,"column":86}},"60":{"start":{"line":133,"column":49},"end":{"line":133,"column":62}},"61":{"start":{"line":134,"column":31},"end":{"line":134,"column":133}},"62":{"start":{"line":135,"column":8},"end":{"line":135,"column":110}},"63":{"start":{"line":137,"column":4},"end":{"line":156,"column":7}},"64":{"start":{"line":138,"column":27},"end":{"line":138,"column":79}},"65":{"start":{"line":139,"column":36},"end":{"line":139,"column":82}},"66":{"start":{"line":140,"column":33},"end":{"line":149,"column":9}},"67":{"start":{"line":150,"column":30},"end":{"line":150,"column":87}},"68":{"start":{"line":151,"column":8},"end":{"line":151,"column":89}},"69":{"start":{"line":152,"column":8},"end":{"line":155,"column":11}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":41},"end":{"line":12,"column":42}},"loc":{"start":{"line":12,"column":47},"end":{"line":157,"column":1}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":46},"end":{"line":13,"column":47}},"loc":{"start":{"line":13,"column":58},"end":{"line":27,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":46},"end":{"line":28,"column":47}},"loc":{"start":{"line":28,"column":58},"end":{"line":40,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":41,"column":48},"end":{"line":41,"column":49}},"loc":{"start":{"line":41,"column":66},"end":{"line":56,"column":5}},"line":41},"4":{"name":"(anonymous_4)","decl":{"start":{"line":57,"column":64},"end":{"line":57,"column":65}},"loc":{"start":{"line":57,"column":82},"end":{"line":82,"column":5}},"line":57},"5":{"name":"(anonymous_5)","decl":{"start":{"line":83,"column":48},"end":{"line":83,"column":49}},"loc":{"start":{"line":83,"column":66},"end":{"line":96,"column":5}},"line":83},"6":{"name":"(anonymous_6)","decl":{"start":{"line":97,"column":57},"end":{"line":97,"column":58}},"loc":{"start":{"line":97,"column":69},"end":{"line":116,"column":5}},"line":97},"7":{"name":"(anonymous_7)","decl":{"start":{"line":117,"column":57},"end":{"line":117,"column":58}},"loc":{"start":{"line":117,"column":69},"end":{"line":136,"column":5}},"line":117},"8":{"name":"(anonymous_8)","decl":{"start":{"line":137,"column":53},"end":{"line":137,"column":54}},"loc":{"start":{"line":137,"column":65},"end":{"line":156,"column":5}},"line":137}},"branchMap":{"0":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{},"end":{}}],"line":42},"1":{"loc":{"start":{"line":42,"column":12},"end":{"line":42,"column":71}},"type":"binary-expr","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":42}},{"start":{"line":42,"column":46},"end":{"line":42,"column":71}}],"line":42},"2":{"loc":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},{"start":{},"end":{}}],"line":60},"3":{"loc":{"start":{"line":60,"column":12},"end":{"line":60,"column":71}},"type":"binary-expr","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":42}},{"start":{"line":60,"column":46},"end":{"line":60,"column":71}}],"line":60}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1},"b":{"0":[0,1],"1":[1,1],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/test/integration/postOrder.spec.ts","sources":["/Users/rg/dev/opensea-js/test/integration/postOrder.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from \"chai\";\nimport { suite, test } from \"mocha\";\nimport {\n  LISTING_AMOUNT,\n  TOKEN_ADDRESS_MAINNET,\n  TOKEN_ADDRESS_POLYGON,\n  TOKEN_ID_MAINNET,\n  TOKEN_ID_POLYGON,\n  sdk,\n  sdkPolygon,\n  walletAddress,\n} from \"./setup\";\nimport { ENGLISH_AUCTION_ZONE_MAINNETS } from \"../../src/constants\";\nimport { getWETHAddress } from \"../../src/utils\";\nimport { OFFER_AMOUNT } from \"../utils/constants\";\nimport { expectValidOrder } from \"../utils/utils\";\n\nconst ONE_HOUR = Math.floor(Date.now() / 1000) + 3600;\nconst expirationTime = ONE_HOUR;\n\nsuite(\"SDK: order posting\", () => {\n  test(\"Post Offer - Mainnet\", async () => {\n    const offer = {\n      accountAddress: walletAddress,\n      startAmount: +OFFER_AMOUNT,\n      asset: {\n        tokenAddress: \"0x1a92f7381b9f03921564a437210bb9396471050c\",\n        tokenId: \"2288\",\n      },\n      expirationTime,\n    };\n    const order = await sdk.createOffer(offer);\n    expectValidOrder(order);\n    expect(order.expirationTime).to.equal(expirationTime);\n    expect(order.protocolData.parameters.endTime).to.equal(\n      expirationTime.toString(),\n    );\n  });\n\n  test(\"Post Offer - Polygon\", async () => {\n    const offer = {\n      accountAddress: walletAddress,\n      startAmount: +OFFER_AMOUNT,\n      asset: {\n        tokenAddress: \"0x1a92f7381b9f03921564a437210bb9396471050c\",\n        tokenId: \"2288\",\n      },\n      expirationTime,\n    };\n    const order = await sdk.createOffer(offer);\n    expectValidOrder(order);\n  });\n\n  test(\"Post Listing - Mainnet\", async function () {\n    if (!TOKEN_ADDRESS_MAINNET || !TOKEN_ID_MAINNET) {\n      this.skip();\n    }\n    const listing = {\n      accountAddress: walletAddress,\n      startAmount: LISTING_AMOUNT,\n      asset: {\n        tokenAddress: TOKEN_ADDRESS_MAINNET as string,\n        tokenId: TOKEN_ID_MAINNET as string,\n      },\n      expirationTime,\n    };\n    const order = await sdk.createListing(listing);\n    expectValidOrder(order);\n  });\n\n  test(\"Post English Auction Listing - Mainnet\", async function () {\n    // English auctions are no longer supported on OpenSea\n    this.skip();\n\n    if (!TOKEN_ADDRESS_MAINNET || !TOKEN_ID_MAINNET) {\n      this.skip();\n    }\n    const listing = {\n      accountAddress: walletAddress,\n      startAmount: LISTING_AMOUNT,\n      asset: {\n        tokenAddress: TOKEN_ADDRESS_MAINNET as string,\n        tokenId: TOKEN_ID_MAINNET as string,\n      },\n      englishAuction: true,\n      expirationTime,\n    };\n    try {\n      const order = await sdk.createListing(listing);\n      expectValidOrder(order);\n      expect(order.protocolData.parameters.zone.toLowerCase()).to.equal(\n        ENGLISH_AUCTION_ZONE_MAINNETS,\n      );\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (error: any) {\n      expect(\n        error.message.includes(\n          \"There is already a live auction for this item. You can only have one auction live at any time.\",\n        ),\n      );\n    }\n  });\n\n  test.skip(\"Post Listing - Polygon\", async function () {\n    const listing = {\n      accountAddress: walletAddress,\n      paymentTokenAddress: getWETHAddress(sdkPolygon.chain),\n      startAmount: +LISTING_AMOUNT * 1_000_000,\n      asset: {\n        tokenAddress: TOKEN_ADDRESS_POLYGON as string,\n        tokenId: TOKEN_ID_POLYGON as string,\n      },\n      expirationTime,\n    };\n    const order = await sdkPolygon.createListing(listing);\n    expectValidOrder(order);\n  });\n\n  test.skip(\"Post Collection Offer - Mainnet\", async () => {\n    const collection = await sdk.api.getCollection(\"cool-cats-nft\");\n    const paymentTokenAddress = getWETHAddress(sdk.chain);\n    const postOrderRequest = {\n      collectionSlug: collection.collection,\n      accountAddress: walletAddress,\n      amount: OFFER_AMOUNT,\n      quantity: 1,\n      paymentTokenAddress,\n      expirationTime,\n    };\n    const offerResponse = await sdk.createCollectionOffer(postOrderRequest);\n    expect(offerResponse).to.exist.and.to.have.property(\"protocol_address\");\n    expect(offerResponse).to.exist.and.to.have.property(\"protocol_data\");\n    expect(offerResponse).to.exist.and.to.have.property(\"order_hash\");\n\n    // Cancel the order using self serve API key tied to the offerer\n    const { protocol_address, order_hash } = offerResponse!;\n    const cancelResponse = await sdk.offchainCancelOrder(\n      protocol_address,\n      order_hash,\n    );\n    expect(cancelResponse).to.exist.and.to.have.property(\n      \"last_signature_issued_valid_until\",\n    );\n  });\n\n  test.skip(\"Post Collection Offer - Polygon\", async () => {\n    const collection = await sdkPolygon.api.getCollection(\"arttoken-1155-4\");\n    const paymentTokenAddress = getWETHAddress(sdkPolygon.chain);\n    const postOrderRequest = {\n      collectionSlug: collection.collection,\n      accountAddress: walletAddress,\n      amount: 0.0001,\n      quantity: 1,\n      paymentTokenAddress,\n      expirationTime,\n    };\n    const offerResponse =\n      await sdkPolygon.createCollectionOffer(postOrderRequest);\n    expect(offerResponse).to.exist.and.to.have.property(\"protocol_address\");\n    expect(offerResponse).to.exist.and.to.have.property(\"protocol_data\");\n    expect(offerResponse).to.exist.and.to.have.property(\"order_hash\");\n\n    // Cancel the order using the offerer signature, deriving it from the ethers signer\n    const { protocol_address, order_hash } = offerResponse!;\n    const cancelResponse = await sdkPolygon.offchainCancelOrder(\n      protocol_address,\n      order_hash,\n      undefined,\n      undefined,\n      true,\n    );\n    expect(cancelResponse).to.exist.and.to.have.property(\n      \"last_signature_issued_valid_until\",\n    );\n  });\n\n  test(\"Post Trait Offer - Ethereum\", async () => {\n    const collection = await sdk.api.getCollection(\"cool-cats-nft\");\n    const paymentTokenAddress = getWETHAddress(sdk.chain);\n    const postOrderRequest = {\n      collectionSlug: collection.collection,\n      accountAddress: walletAddress,\n      amount: OFFER_AMOUNT,\n      quantity: 1,\n      paymentTokenAddress,\n      traitType: \"face\",\n      traitValue: \"tvface bobross\",\n      expirationTime,\n    };\n    const offerResponse = await sdk.createCollectionOffer(postOrderRequest);\n    expect(offerResponse).to.exist.and.to.have.property(\"protocol_data\");\n    expect(offerResponse?.criteria.trait).to.deep.equal({\n      type: \"face\",\n      value: \"tvface bobross\",\n    });\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"078971a4dc033ccc2cd0d56e952c98240f9466d7","contentHash":"ef9bc46ed6dce86fdcd0211b38996d0c9d4338781cf0c8772d1d3537920e468e"},"/Users/rg/dev/opensea-js/test/utils/utils.ts":{"path":"/Users/rg/dev/opensea-js/test/utils/utils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":25},"end":{"line":29,"column":1}},"4":{"start":{"line":6,"column":27},"end":{"line":25,"column":5}},"5":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"6":{"start":{"line":27,"column":8},"end":{"line":27,"column":54}},"7":{"start":{"line":30,"column":0},"end":{"line":30,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":25},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":36},"end":{"line":29,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":54,"7":1},"f":{"0":3},"b":{},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/test/utils/utils.ts","sources":["/Users/rg/dev/opensea-js/test/utils/utils.ts"],"names":[],"mappings":";;;AAAA,+BAA8B;AAGvB,MAAM,gBAAgB,GAAG,CAAC,KAAc,EAAE,EAAE;IACjD,MAAM,cAAc,GAAG;QACrB,aAAa;QACb,aAAa;QACb,aAAa;QACb,gBAAgB;QAChB,WAAW;QACX,OAAO;QACP,OAAO;QACP,cAAc;QACd,iBAAiB;QACjB,cAAc;QACd,WAAW;QACX,WAAW;QACX,MAAM;QACN,WAAW;QACX,WAAW;QACX,WAAW;QACX,eAAe;QACf,mBAAmB;KACpB,CAAC;IACF,KAAK,MAAM,KAAK,IAAI,cAAc,EAAE,CAAC;QACnC,IAAA,aAAM,EAAC,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;IACpC,CAAC;AACH,CAAC,CAAC;AAxBW,QAAA,gBAAgB,oBAwB3B","sourcesContent":["import { expect } from \"chai\";\nimport { OrderV2 } from \"../../src/orders/types\";\n\nexport const expectValidOrder = (order: OrderV2) => {\n  const requiredFields = [\n    \"createdDate\",\n    \"closingDate\",\n    \"listingTime\",\n    \"expirationTime\",\n    \"orderHash\",\n    \"maker\",\n    \"taker\",\n    \"protocolData\",\n    \"protocolAddress\",\n    \"currentPrice\",\n    \"makerFees\",\n    \"takerFees\",\n    \"side\",\n    \"orderType\",\n    \"cancelled\",\n    \"finalized\",\n    \"markedInvalid\",\n    \"remainingQuantity\",\n  ];\n  for (const field of requiredFields) {\n    expect(field in order).to.be.true;\n  }\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5fa1dcf944398971484cbc3a8f85c5c809debac6","contentHash":"a2df7f794b7588afdf0ab5d337c5ce690c16c7e57f5b3ec2a99d74042dd1a028"},"/Users/rg/dev/opensea-js/test/integration/wrapEth.spec.ts":{"path":"/Users/rg/dev/opensea-js/test/integration/wrapEth.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":32}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":34}},"5":{"start":{"line":7,"column":16},"end":{"line":7,"column":42}},"6":{"start":{"line":8,"column":16},"end":{"line":8,"column":42}},"7":{"start":{"line":9,"column":0},"end":{"line":43,"column":3}},"8":{"start":{"line":10,"column":4},"end":{"line":42,"column":22}},"9":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"10":{"start":{"line":12,"column":12},"end":{"line":12,"column":24}},"11":{"start":{"line":14,"column":26},"end":{"line":18,"column":9}},"12":{"start":{"line":19,"column":36},"end":{"line":22,"column":10}},"13":{"start":{"line":23,"column":8},"end":{"line":26,"column":11}},"14":{"start":{"line":27,"column":34},"end":{"line":30,"column":10}},"15":{"start":{"line":31,"column":31},"end":{"line":31,"column":76}},"16":{"start":{"line":32,"column":8},"end":{"line":32,"column":111}},"17":{"start":{"line":33,"column":8},"end":{"line":36,"column":11}},"18":{"start":{"line":37,"column":33},"end":{"line":40,"column":10}},"19":{"start":{"line":41,"column":8},"end":{"line":41,"column":115}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":35},"end":{"line":9,"column":36}},"loc":{"start":{"line":9,"column":41},"end":{"line":43,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":45},"end":{"line":10,"column":46}},"loc":{"start":{"line":10,"column":63},"end":{"line":42,"column":5}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{},"end":{}}],"line":11}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"f":{"0":1,"1":1},"b":{"0":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/rg/dev/opensea-js/test/integration/wrapEth.spec.ts","sources":["/Users/rg/dev/opensea-js/test/integration/wrapEth.spec.ts"],"names":[],"mappings":";;AAAA,+BAA8B;AAC9B,mCAAoC;AACpC,iCAAuC;AACvC,mCAA0D;AAC1D,2CAAgD;AAChD,2CAAiD;AAEjD,IAAA,gBAAQ,EAAC,WAAW,EAAE,GAAG,EAAE;IACzB,IAAA,YAAI,EAAC,qBAAqB,EAAE,KAAK;QAC/B,IAAI,CAAC,mBAAW,EAAE,CAAC;YACjB,IAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC;QAED,MAAM,SAAS,GAAG;YAChB,YAAY,EAAE,IAAA,sBAAc,EAAC,WAAG,CAAC,KAAK,CAAC;YACvC,OAAO,EAAE,IAAI;YACb,aAAa,EAAE,qBAAa,CAAC,KAAK;SACnC,CAAC;QACF,MAAM,mBAAmB,GAAG,MAAM,WAAG,CAAC,UAAU,CAAC;YAC/C,cAAc,EAAE,qBAAa;YAC7B,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;QAEH,MAAM,WAAG,CAAC,OAAO,CAAC;YAChB,WAAW,EAAE,mBAAW;YACxB,cAAc,EAAE,qBAAa;SAC9B,CAAC,CAAC;QAEH,MAAM,iBAAiB,GAAG,MAAM,WAAG,CAAC,UAAU,CAAC;YAC7C,cAAc,EAAE,qBAAa;YAC7B,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;QAEH,MAAM,cAAc,GAAG,IAAA,mBAAU,EAAC,mBAAW,CAAC,CAAC;QAE/C,aAAM,CAAC,KAAK,CACV,mBAAmB,GAAG,cAAc,EACpC,iBAAiB,EACjB,wBAAwB,CACzB,CAAC;QAEF,MAAM,WAAG,CAAC,UAAU,CAAC;YACnB,WAAW,EAAE,mBAAW;YACxB,cAAc,EAAE,qBAAa;SAC9B,CAAC,CAAC;QAEH,MAAM,gBAAgB,GAAG,MAAM,WAAG,CAAC,UAAU,CAAC;YAC5C,cAAc,EAAE,qBAAa;YAC7B,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;QACH,aAAM,CAAC,KAAK,CACV,mBAAmB,CAAC,QAAQ,EAAE,EAC9B,gBAAgB,CAAC,QAAQ,EAAE,EAC3B,wBAAwB,CACzB,CAAC;IACJ,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from \"chai\";\nimport { parseEther } from \"ethers\";\nimport { describe, test } from \"mocha\";\nimport { ETH_TO_WRAP, sdk, walletAddress } from \"./setup\";\nimport { TokenStandard } from \"../../src/types\";\nimport { getWETHAddress } from \"../../src/utils\";\n\ndescribe(\"SDK: WETH\", () => {\n  test(\"Wrap ETH and Unwrap\", async function () {\n    if (!ETH_TO_WRAP) {\n      this.skip();\n    }\n\n    const wethAsset = {\n      tokenAddress: getWETHAddress(sdk.chain),\n      tokenId: null,\n      tokenStandard: TokenStandard.ERC20,\n    };\n    const startingWethBalance = await sdk.getBalance({\n      accountAddress: walletAddress,\n      asset: wethAsset,\n    });\n\n    await sdk.wrapEth({\n      amountInEth: ETH_TO_WRAP,\n      accountAddress: walletAddress,\n    });\n\n    const endingWethBalance = await sdk.getBalance({\n      accountAddress: walletAddress,\n      asset: wethAsset,\n    });\n\n    const ethToWrapInWei = parseEther(ETH_TO_WRAP);\n\n    assert.equal(\n      startingWethBalance + ethToWrapInWei,\n      endingWethBalance,\n      \"Balances should match.\",\n    );\n\n    await sdk.unwrapWeth({\n      amountInEth: ETH_TO_WRAP,\n      accountAddress: walletAddress,\n    });\n\n    const finalWethBalance = await sdk.getBalance({\n      accountAddress: walletAddress,\n      asset: wethAsset,\n    });\n    assert.equal(\n      startingWethBalance.toString(),\n      finalWethBalance.toString(),\n      \"Balances should match.\",\n    );\n  }).timeout(30000);\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"276fc03440d73716c698c9c7f94789ad0b410c32","contentHash":"38c8386d5082ab6bd05a0afeee43596b971f1432d930742af2ba5d014e788405"}}